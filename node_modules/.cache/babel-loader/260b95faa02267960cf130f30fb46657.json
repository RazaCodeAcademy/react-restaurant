{"ast":null,"code":"var _jsxFileName = \"/Users/raza/Downloads/khadyo_source_code/client/src/resources/restaurant/auth/reports/IngredientStockReport.js\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { useHistory, NavLink } from \"react-router-dom\"; //axios and base url\n\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../../../BaseUrl\"; //functions\n\nimport { _t, getCookie, tableLoading } from \"../../../../functions/Functions\";\nimport { useTranslation } from \"react-i18next\"; //3rd party packages\n\nimport { Helmet } from \"react-helmet\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Chart from \"react-apexcharts\";\nimport Moment from \"react-moment\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\"; //pages & includes\n\nimport ReportSidebar from \"./ReportSidebar\"; //context consumer\n\nimport { SettingsContext } from \"../../../../contexts/Settings\";\nimport { RestaurantContext } from \"../../../../contexts/Restaurant\";\n\nconst IngredientStockReport = () => {\n  const {\n    t\n  } = useTranslation(); //getting context values here\n\n  let {\n    loading,\n    setLoading,\n    dataPaginating,\n    generalSettings\n  } = useContext(SettingsContext);\n  let {\n    branchForSearch\n  } = useContext(RestaurantContext); //all data\n\n  const [reportData, setReportData] = useState(null);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [generatedReport, setGeneratedReport] = useState(false);\n  const [branch, setBranch] = useState(null); //useEffect == componentDidMount()\n\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 500);\n  }, []);\n\n  const handleBranch = branch => {\n    setBranch(branch);\n  }; //get IngredientStockReport reports filter\n\n\n  const getIngredientStockReportSelected = () => {\n    if (branch !== null && startDate !== null && endDate !== null) {\n      setLoading(true);\n      var fromDate = startDate.toISOString();\n      var toDate = endDate.toISOString();\n      const url = BASE_URL + \"/settings/get-food-stock-report\";\n      let formData = {\n        fromDate,\n        toDate,\n        branch\n      };\n      return axios.post(url, formData, {\n        headers: {\n          Authorization: `Bearer ${getCookie()}`\n        }\n      }).then(res => {\n        setReportData(res.data);\n        setGeneratedReport(true);\n        setLoading(false);\n      }).catch(error => {\n        setLoading(false);\n      });\n    } else {\n      toast.error(`${_t(t(\"Please select all the field to generate report\"))}`, {\n        position: \"bottom-center\",\n        closeButton: false,\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, _t(t(\"Ingredient Stock Report\")))), /*#__PURE__*/React.createElement(\"main\", {\n    id: \"main\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row t-mt-10 gx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReportSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-scroll--pos-menu table-bottom-info-hide\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-pl-15 t-pr-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${dataPaginating && \"loading\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }), loading === true ? tableLoading() : /*#__PURE__*/React.createElement(\"div\", {\n    key: \"smtp-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 align-items-center t-pt-15 t-pb-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list fk-breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"fk-breadcrumb__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"t-link fk-breadcrumb__link text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, _t(t(\"Ingredient Stock Report\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-2 d-md-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    selected: startDate,\n    onChange: date => setStartDate(date),\n    peekNextMonth: true,\n    showMonthDropdown: true,\n    showYearDropdown: true,\n    dropdownMode: \"select\",\n    className: \"form-control sm-text py-2 t-mb-15 mb-md-0\",\n    placeholderText: _t(t(\"From date\")),\n    shouldCloseOnSelect: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-2 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    selected: endDate,\n    onChange: date => setEndDate(date),\n    peekNextMonth: true,\n    showMonthDropdown: true,\n    showYearDropdown: true,\n    dropdownMode: \"select\",\n    className: \"form-control sm-text py-2\",\n    placeholderText: _t(t(\"To date\")),\n    shouldCloseOnSelect: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Select, {\n    options: branchForSearch && branchForSearch,\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    value: branch,\n    classNamePrefix: \"select\",\n    className: \"xsm-text col-md-4 d-none d-md-block \",\n    onChange: handleBranch,\n    maxMenuHeight: \"200px\",\n    placeholder: _t(t(\"Select a branch\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    options: branchForSearch && branchForSearch,\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    value: branch,\n    classNamePrefix: \"select\",\n    className: \"xsm-text col-5 mb-2 mb-md-0 d-block d-md-none\",\n    onChange: handleBranch,\n    maxMenuHeight: \"200px\",\n    placeholder: _t(t(\"Select a branch\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4 t-mb-15 mb-md-0 d-none d-md-block text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-block btn-primary text-uppercase sm-text py-2\",\n    onClick: getIngredientStockReportSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 29\n    }\n  }, _t(t(\"Generate Report\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-5 t-mb-15 mb-md-0 d-block d-md-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-block btn-primary text-uppercase sm-text\",\n    onClick: getIngredientStockReportSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 29\n    }\n  }, _t(t(\"Generate Report\"))))), generatedReport ? /*#__PURE__*/React.createElement(React.Fragment, null, reportData !== null && reportData !== undefined && reportData.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 justify-content-center t-pb-15 t-pt-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 t-mb-15 mb-md-0 table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-bordered table-hover min-table-height mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 43\n    }\n  }, _t(t(\"S/L\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 43\n    }\n  }, _t(t(\"Branch\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 43\n    }\n  }, _t(t(\"Date\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 43\n    }\n  }, _t(t(\"Time\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 43\n    }\n  }, _t(t(\"Stock\"))))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 39\n    }\n  }, reportData.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"align-middle\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 47\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center text-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 47\n      }\n    }, item.branch_name), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 47\n      }\n    }, item.date), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      format: \"LT\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 49\n      }\n    }, new Date(parseInt(item.started_at)))), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: `btn xxsm-text ${item.ended_at === null ? \"btn-success\" : \"btn-success\"} btn-sm p-1`,\n      to: `/dashboard/ingredient-stock/` + item.started_at,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 49\n      }\n    }, _t(t(\"Check Stock\")))));\n  })))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 justify-content-center t-pt-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-8 mt-5 py-4 mb-md-0 card text-center text-uppercase sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 29\n    }\n  }, _t(t(\"Generate report following the above field\")))))))))))));\n};\n\nexport default IngredientStockReport;","map":{"version":3,"sources":["/Users/raza/Downloads/khadyo_source_code/client/src/resources/restaurant/auth/reports/IngredientStockReport.js"],"names":["React","useEffect","useContext","useState","useHistory","NavLink","axios","BASE_URL","_t","getCookie","tableLoading","useTranslation","Helmet","toast","Chart","Moment","Select","makeAnimated","DatePicker","ReportSidebar","SettingsContext","RestaurantContext","IngredientStockReport","t","loading","setLoading","dataPaginating","generalSettings","branchForSearch","reportData","setReportData","startDate","setStartDate","endDate","setEndDate","generatedReport","setGeneratedReport","branch","setBranch","setTimeout","handleBranch","getIngredientStockReportSelected","fromDate","toISOString","toDate","url","formData","post","headers","Authorization","then","res","data","catch","error","position","closeButton","autoClose","hideProgressBar","closeOnClick","pauseOnHover","className","date","option","name","undefined","length","map","item","index","branch_name","Date","parseInt","started_at","ended_at"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory, NavLink } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  tableLoading,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Chart from \"react-apexcharts\";\r\nimport Moment from \"react-moment\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n//pages & includes\r\nimport ReportSidebar from \"./ReportSidebar\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\nimport { RestaurantContext } from \"../../../../contexts/Restaurant\";\r\n\r\nconst IngredientStockReport = () => {\r\n  const { t } = useTranslation();\r\n  //getting context values here\r\n  let { loading, setLoading, dataPaginating, generalSettings } =\r\n    useContext(SettingsContext);\r\n  let { branchForSearch } = useContext(RestaurantContext);\r\n\r\n  //all data\r\n  const [reportData, setReportData] = useState(null);\r\n  const [startDate, setStartDate] = useState(null);\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [generatedReport, setGeneratedReport] = useState(false);\r\n  const [branch, setBranch] = useState(null);\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 500);\r\n  }, []);\r\n\r\n  const handleBranch = (branch) => {\r\n    setBranch(branch);\r\n  };\r\n\r\n  //get IngredientStockReport reports filter\r\n  const getIngredientStockReportSelected = () => {\r\n    if (branch !== null && startDate !== null && endDate !== null) {\r\n      setLoading(true);\r\n      var fromDate = startDate.toISOString();\r\n      var toDate = endDate.toISOString();\r\n      const url = BASE_URL + \"/settings/get-food-stock-report\";\r\n      let formData = {\r\n        fromDate,\r\n        toDate,\r\n        branch,\r\n      };\r\n      return axios\r\n        .post(url, formData, {\r\n          headers: { Authorization: `Bearer ${getCookie()}` },\r\n        })\r\n        .then((res) => {\r\n          setReportData(res.data);\r\n          setGeneratedReport(true);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      toast.error(\r\n        `${_t(t(\"Please select all the field to generate report\"))}`,\r\n        {\r\n          position: \"bottom-center\",\r\n          closeButton: false,\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Ingredient Stock Report\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ReportSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div\r\n                  className=\"fk-scroll--pos-menu table-bottom-info-hide\"\r\n                  data-simplebar\r\n                >\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {_t(t(\"Ingredient Stock Report\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row gx-2 mt-2\">\r\n                          <div className=\"col-12 col-md-2 d-md-block\">\r\n                            <DatePicker\r\n                              selected={startDate}\r\n                              onChange={(date) => setStartDate(date)}\r\n                              peekNextMonth\r\n                              showMonthDropdown\r\n                              showYearDropdown\r\n                              dropdownMode=\"select\"\r\n                              className=\"form-control sm-text py-2 t-mb-15 mb-md-0\"\r\n                              placeholderText={_t(t(\"From date\"))}\r\n                              shouldCloseOnSelect={false}\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-12 col-md-2 t-mb-15 mb-md-0\">\r\n                            <DatePicker\r\n                              selected={endDate}\r\n                              onChange={(date) => setEndDate(date)}\r\n                              peekNextMonth\r\n                              showMonthDropdown\r\n                              showYearDropdown\r\n                              dropdownMode=\"select\"\r\n                              className=\"form-control sm-text py-2\"\r\n                              placeholderText={_t(t(\"To date\"))}\r\n                              shouldCloseOnSelect={false}\r\n                            />\r\n                          </div>\r\n                          <Select\r\n                            options={branchForSearch && branchForSearch}\r\n                            getOptionLabel={(option) => option.name}\r\n                            getOptionValue={(option) => option.name}\r\n                            value={branch}\r\n                            classNamePrefix=\"select\"\r\n                            className=\"xsm-text col-md-4 d-none d-md-block \"\r\n                            onChange={handleBranch}\r\n                            maxMenuHeight=\"200px\"\r\n                            placeholder={_t(t(\"Select a branch\")) + \"..\"}\r\n                          />\r\n\r\n                          <Select\r\n                            options={branchForSearch && branchForSearch}\r\n                            getOptionLabel={(option) => option.name}\r\n                            getOptionValue={(option) => option.name}\r\n                            value={branch}\r\n                            classNamePrefix=\"select\"\r\n                            className=\"xsm-text col-5 mb-2 mb-md-0 d-block d-md-none\"\r\n                            onChange={handleBranch}\r\n                            maxMenuHeight=\"200px\"\r\n                            placeholder={_t(t(\"Select a branch\")) + \"..\"}\r\n                          />\r\n\r\n                          <div className=\"col-4 t-mb-15 mb-md-0 d-none d-md-block text-right\">\r\n                            <button\r\n                              className=\"btn btn-block btn-primary text-uppercase sm-text py-2\"\r\n                              onClick={getIngredientStockReportSelected}\r\n                            >\r\n                              {_t(t(\"Generate Report\"))}\r\n                            </button>\r\n                          </div>\r\n\r\n                          <div className=\"col-5 t-mb-15 mb-md-0 d-block d-md-none\">\r\n                            <button\r\n                              className=\"btn btn-block btn-primary text-uppercase sm-text\"\r\n                              onClick={getIngredientStockReportSelected}\r\n                            >\r\n                              {_t(t(\"Generate Report\"))}\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        {generatedReport ? (\r\n                          <>\r\n                            {reportData !== null &&\r\n                              reportData !== undefined &&\r\n                              reportData.length > 0 && (\r\n                                <div className=\"row gx-2 justify-content-center t-pb-15 t-pt-15\">\r\n                                  <div className=\"col-12 t-mb-15 mb-md-0 table-responsive\">\r\n                                    <table className=\"table table-bordered table-hover min-table-height mt-3\">\r\n                                      <thead className=\"align-middle\">\r\n                                        <tr>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"S/L\"))}\r\n                                          </th>\r\n\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Branch\"))}\r\n                                          </th>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Date\"))}\r\n                                          </th>\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Time\"))}\r\n                                          </th>\r\n\r\n                                          <th\r\n                                            scope=\"col\"\r\n                                            className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                          >\r\n                                            {_t(t(\"Stock\"))}\r\n                                          </th>\r\n                                        </tr>\r\n                                      </thead>\r\n                                      <tbody className=\"align-middle\">\r\n                                        {/* loop here*/}\r\n                                        {reportData.map((item, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <th\r\n                                                scope=\"row\"\r\n                                                className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                              >\r\n                                                {index + 1}\r\n                                              </th>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center text-secondary\">\r\n                                                {item.branch_name}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.date}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                <Moment format=\"LT\">\r\n                                                  {\r\n                                                    new Date(\r\n                                                      parseInt(item.started_at)\r\n                                                    )\r\n                                                  }\r\n                                                </Moment>\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                <NavLink\r\n                                                  className={`btn xxsm-text ${item.ended_at === null\r\n                                                    ? \"btn-success\"\r\n                                                    : \"btn-success\"\r\n                                                    } btn-sm p-1`}\r\n                                                  to={\r\n                                                    `/dashboard/ingredient-stock/` +\r\n                                                    item.started_at\r\n                                                  }\r\n                                                >\r\n                                                  {_t(t(\"Check Stock\"))}\r\n                                                </NavLink>\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        })}\r\n                                      </tbody>\r\n                                    </table>\r\n                                  </div>\r\n                                </div>\r\n                              )}\r\n                          </>\r\n                        ) : (\r\n                          <div className=\"row gx-2 justify-content-center t-pt-15\">\r\n                            <div className=\"col-8 mt-5 py-4 mb-md-0 card text-center text-uppercase sm-text\">\r\n                              {_t(\r\n                                t(\"Generate report following the above field\")\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IngredientStockReport;\r\n"]},"metadata":{},"sourceType":"module"}