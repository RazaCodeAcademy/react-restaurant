{"ast":null,"code":"var _jsxFileName = \"/Users/raza/Downloads/khadyo_source_code/client/src/resources/restaurant/auth/manage/food/AllItemList.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useHistory, NavLink } from \"react-router-dom\"; //pages & includes\n\nimport ManageSidebar from \"../ManageSidebar\"; //functions\n\nimport { _t, getCookie, modalLoading, tableLoading, pagination, paginationLoading, showingData, searchedShowingData, formatPrice, currencySymbolLeft, currencySymbolRight } from \"../../../../../functions/Functions\";\nimport { useTranslation } from \"react-i18next\"; //axios and base url\n\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../../../../BaseUrl\"; //3rd party packages\n\nimport { Helmet } from \"react-helmet\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\"; //context consumer\n\nimport { FoodContext } from \"../../../../../contexts/Food\";\n\nconst AllItemList = () => {\n  const {\n    t\n  } = useTranslation();\n  const history = useHistory(); //getting context values here\n\n  let {\n    //common\n    loading,\n    setLoading,\n    //foodGroup\n    foodGroupForSearch,\n    //property group\n    propertyGroupForSearch,\n    //food\n    getFood,\n    foodList,\n    setFoodList,\n    setPaginatedFood,\n    foodForSearch,\n    setFoodForSearch,\n    //variations\n    variationForSearch,\n    //pagination\n    dataPaginating\n  } = useContext(FoodContext); // States hook here\n\n  let [variations, setVariations] = useState({\n    //common\n    edit: false,\n    uploading: false,\n    //food item === item\n    item: null,\n    //variation list === list\n    list: null,\n    //new price of variations\n    newPrice: null,\n    //variation to delete- id of food_with_variations table\n    deletedVariations: null,\n    //if all variation deleted\n    priceAfterAllVariationDelete: \"\"\n  }); //new variation\n\n  let [newVariation, setNewVariation] = useState({\n    //food item === item\n    item: null,\n    variations: null\n  });\n  let [priceForVariations, setPriceForVariations] = useState(null); //edit food item\n\n  let [foodItemEdit, setFoodItemEdit] = useState({\n    //show data on modal\n    editItem: null,\n    propertyGroup: null,\n    //formData\n    item: null,\n    newPropertyGroups: null,\n    newFoodGroup: null,\n    removeProperty: false,\n    //special\n    isSpecial: false,\n    //image\n    imageUpdate: false,\n    newImage: null\n  }); //search result\n\n  let [searchedFoodItem, setSearchedFoodItem] = useState({\n    list: null,\n    searched: false\n  }); //useEffect == componentDidMount\n\n  useEffect(() => {}, []); //edit food item\n\n  const handleSetItemGroup = foodGroup => {\n    setFoodItemEdit({ ...foodItemEdit,\n      newFoodGroup: foodGroup\n    });\n  }; //on change input fields\n\n\n  const handleChange = e => {\n    setFoodItemEdit({ ...foodItemEdit,\n      item: { ...foodItemEdit.item,\n        [e.target.name]: e.target.value\n      }\n    });\n  }; //set image hook\n\n\n  const handleItemImage = e => {\n    setFoodItemEdit({ ...foodItemEdit,\n      newImage: e.target.files[0]\n    });\n  }; //set properties hook\n\n\n  const handleSetPropertes = property => {\n    setFoodItemEdit({ ...foodItemEdit,\n      newPropertyGroups: property\n    });\n  }; //submit edit food item request to server\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setVariations({ ...variations,\n      uploading: true\n    });\n    let formData = {\n      //item id\n      itemId: foodItemEdit.editItem.id,\n      //item group\n      itemNewFoodGroup: foodItemEdit.newFoodGroup !== null ? foodItemEdit.newFoodGroup : null,\n      //new name\n      name: foodItemEdit.item.name,\n      //new price\n      price: foodItemEdit.editItem.price ? foodItemEdit.item.price : null,\n      //to delete all property, boolean\n      deleteProperty: foodItemEdit.deleteProperty ? 1 : 0,\n      //isSpecial\n      isSpecial: foodItemEdit.isSpecial,\n      //new property groups\n      newPropertyGroups: foodItemEdit.newPropertyGroups !== null && foodItemEdit.newPropertyGroups.length > 0 ? foodItemEdit.newPropertyGroups : null\n    };\n    const url = BASE_URL + `/settings/update-food-item`;\n    return axios.post(url, formData, {\n      headers: {\n        Authorization: `Bearer ${getCookie()}`\n      }\n    }).then(res => {\n      setFoodList(res.data[0]);\n      setFoodForSearch(res.data[1]);\n      setSearchedFoodItem({ ...searchedFoodItem,\n        list: res.data[1]\n      }); //handling item in modal after item has been updated\n\n      let tempItem = res.data[1].find(item => {\n        return item.id === foodItemEdit.editItem.id;\n      });\n      let selectedGroups = [];\n\n      if (tempItem.property_groups) {\n        tempItem.property_groups.map(grpItem => {\n          propertyGroupForSearch.map(singlePropertyGroup => {\n            if (singlePropertyGroup.id === grpItem) {\n              selectedGroups.push(singlePropertyGroup);\n            }\n          });\n        });\n      }\n\n      setFoodItemEdit({\n        //show data on modal\n        editItem: tempItem,\n        propertyGroup: tempItem.property_groups ? selectedGroups : null,\n        //formData\n        item: tempItem,\n        newPropertyGroups: null,\n        newFoodGroup: null,\n        removeProperty: false,\n        isSpecial: false\n      });\n      setVariations({ ...variations,\n        uploading: false\n      });\n      toast.success(`${_t(t(\"Food item has been updated\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }).catch(() => {\n      setVariations({ ...variations,\n        uploading: false\n      });\n      toast.error(`${_t(t(\"Please try again\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    });\n  }; //submit image request to server\n\n\n  const handleSubmitImage = e => {\n    e.preventDefault();\n    setVariations({ ...variations,\n      uploading: true\n    });\n    let formData = new FormData();\n    formData.append(\"itemId\", foodItemEdit.editItem && foodItemEdit.editItem.id);\n    formData.append(\"image\", foodItemEdit.newImage);\n    const url = BASE_URL + `/settings/update-food-item`;\n    return axios.post(url, formData, {\n      headers: {\n        Authorization: `Bearer ${getCookie()}`\n      }\n    }).then(res => {\n      setFoodList(res.data[0]);\n      setFoodForSearch(res.data[1]);\n      setSearchedFoodItem({ ...searchedFoodItem,\n        list: res.data[1]\n      }); //handling item in modal after item has been updated\n\n      let tempItem = res.data[1].find(item => {\n        return item.id === foodItemEdit.editItem.id;\n      });\n      setFoodItemEdit({\n        //show data on modal\n        editItem: tempItem,\n        //formData\n        item: tempItem,\n        imageUpdate: true,\n        newImage: null\n      });\n      setVariations({ ...variations,\n        uploading: false\n      });\n      toast.success(`${_t(t(\"Image has been updated\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }).catch(error => {\n      setVariations({ ...variations,\n        uploading: false\n      });\n\n      if (error.response.data.errors.image) {\n        error.response.data.errors.image.forEach(item => {\n          if (item === \"Please select a valid image file\") {\n            toast.error(`${_t(t(\"Please select a valid image file\"))}`, {\n              position: \"bottom-center\",\n              autoClose: 10000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              className: \"text-center toast-notification\"\n            });\n          }\n\n          if (item === \"Please select a file less than 5MB\") {\n            toast.error(`${_t(t(\"Please select a file less than 5MB\"))}`, {\n              position: \"bottom-center\",\n              autoClose: 10000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              className: \"text-center toast-notification\"\n            });\n          }\n        });\n      }\n    });\n  }; //set variations hook\n\n\n  const handleSetVariations = variations => {\n    setNewVariation({ ...newVariation,\n      variations\n    });\n  }; //set each variation price\n\n\n  const handleVariationPrice = e => {\n    setPriceForVariations({ ...priceForVariations,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleEnableDisable = (slug, index) => {\n    console.log(slug);\n    let formData = {\n      slug: slug\n    };\n    const foodItemUpdateEnableDisableUrl = BASE_URL + `/settings/update-food-item-enable-disable`;\n    return axios.post(foodItemUpdateEnableDisableUrl, formData, {\n      headers: {\n        Authorization: `Bearer ${getCookie()}`\n      },\n      data: formData\n    }).then(res => {\n      // Update the data in your React component\n      const updatedData = [...foodList.data]; // Create a copy of the data array\n\n      updatedData[index].is_enabled = !updatedData[index].is_enabled; // Toggle the is_enabled property\n\n      setFoodList(prevState => ({ ...prevState,\n        data: updatedData\n      }));\n    }).catch(err => {\n      console.log(err);\n    });\n  }; //update variations here\n\n\n  const handleUpdateVariations = e => {\n    e.preventDefault();\n    setVariations({ ...variations,\n      uploading: true\n    });\n    let formData = {\n      foodItemId: variations.item.id,\n      deletedVariationsArray: variations.deletedVariations,\n      newPriceArray: variations.newPrice ? Object.entries(variations.newPrice) : null,\n      priceAfterAllVariationDelete: variations.priceAfterAllVariationDelete\n    };\n    const foodVariationUpdateUrl = BASE_URL + `/settings/update-food-item-variation`;\n    return axios.post(foodVariationUpdateUrl, formData, {\n      headers: {\n        Authorization: `Bearer ${getCookie()}`\n      }\n    }).then(res => {\n      setFoodList(res.data[0]);\n      setFoodForSearch(res.data[1]);\n      setSearchedFoodItem({ ...searchedFoodItem,\n        list: res.data[1]\n      }); //handling variations in modal after variations updated\n\n      let tempItem = res.data[1].find(item => {\n        return item.id === variations.item.id;\n      });\n      setVariations({ ...variations,\n        edit: false,\n        uploading: false,\n        item: tempItem,\n        list: tempItem.variations,\n        deletedVariations: null,\n        newPrice: null,\n        priceAfterAllVariationDelete: \"\"\n      });\n      toast.success(`${_t(t(\"Food variations has been updated\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }).catch(() => {\n      toast.error(`${_t(t(\"Please try again\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    });\n  }; //save new variations here\n\n\n  const handleSaveNewVariations = e => {\n    e.preventDefault();\n\n    if (newVariation.variations === null) {\n      toast.error(`${_t(t(\"Please select variations\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    } else {\n      if (newVariation.variations.length > 0) {\n        setVariations({ ...variations,\n          uploading: true\n        });\n        let formData = new FormData();\n        formData.append(\"foodItemId\", newVariation.item.id); //converting variations and prices to array\n\n        let slugArray = [];\n        newVariation.variations.map(newVarItem => {\n          slugArray.push(newVarItem.slug);\n        });\n        slugArray.map(slugItem => {\n          formData.append(\"slugOfVariations[]\", slugItem);\n        });\n        let tempData = Object.entries(priceForVariations);\n        tempData.map(item => {\n          formData.append(\"variations[]\", item);\n        });\n        const url = BASE_URL + \"/settings/new-food-item-variation\";\n        return axios.post(url, formData, {\n          headers: {\n            Authorization: `Bearer ${getCookie()}`\n          }\n        }).then(() => {\n          setNewVariation({\n            item: null,\n            variations: null\n          });\n          setPriceForVariations(null);\n          setVariations({ ...variations,\n            uploading: false\n          });\n          toast.success(`${_t(t(\"variations has been added\"))}`, {\n            position: \"bottom-center\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            className: \"text-center toast-notification\"\n          });\n        });\n      } else {\n        toast.error(`${_t(t(\"Please select variations\"))}`, {\n          position: \"bottom-center\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          className: \"text-center toast-notification\"\n        });\n      }\n    }\n  }; //search food here\n\n\n  const handleSearch = e => {\n    let searchInput = e.target.value.toLowerCase();\n\n    if (searchInput.length === 0) {\n      setSearchedFoodItem({ ...searchedFoodItem,\n        searched: false\n      });\n    } else {\n      let searchedList = foodForSearch.filter(item => {\n        let lowerCaseItemName = item.name.toLowerCase();\n        let lowerCaseItemGroup = item.food_group.toLowerCase();\n        return lowerCaseItemName.includes(searchInput) || lowerCaseItemGroup.includes(searchInput);\n      });\n      setSearchedFoodItem({ ...searchedFoodItem,\n        list: searchedList,\n        searched: true\n      });\n    }\n  }; //delete confirmation modal of food item\n\n\n  const handleDeleteConfirmation = slug => {\n    confirmAlert({\n      customUI: ({\n        onClose\n      }) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card card-body\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }\n        }, _t(t(\"Are you sure?\"))), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }\n        }, _t(t(\"You want to delete this?\"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex justify-content-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => {\n            handleDeleteFood(slug);\n            onClose();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 15\n          }\n        }, _t(t(\"Yes, delete it!\"))), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-success ml-2 px-3\",\n          onClick: onClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }\n        }, _t(t(\"No\")))));\n      }\n    });\n  }; //delete food here\n\n\n  const handleDeleteFood = slug => {\n    setLoading(true);\n    const url = BASE_URL + `/settings/delete-food-item/${slug}`;\n    return axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${getCookie()}`\n      }\n    }).then(res => {\n      setFoodList(res.data[0]);\n      setFoodForSearch(res.data[1]);\n      setSearchedFoodItem({ ...searchedFoodItem,\n        list: res.data[1]\n      });\n      setLoading(false);\n      toast.success(`${_t(t(\"Item has been deleted successfully\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }).catch(() => {\n      setLoading(false);\n      toast.error(`${_t(t(\"Please try again\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 9\n    }\n  }, _t(t(\"Food Items\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal fade\",\n    id: \"editFood\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog modal-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-sm-card__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"fk-sm-card__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 17\n    }\n  }, _t(t(\"Update\")), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 19\n    }\n  }, foodItemEdit.editItem && foodItemEdit.editItem.name))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 13\n    }\n  }, variations.uploading === false ? /*#__PURE__*/React.createElement(\"div\", {\n    key: \"fragment-food-group-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 17\n    }\n  }, foodItemEdit.imageUpdate ? /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmitImage,\n    className: \"mx-2 sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"image\",\n    className: \"control-label mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 27\n    }\n  }, _t(t(\"Image\")), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 29\n    }\n  }, \"(\", _t(t(\"300 x 300 Preferable\")), \")\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-language__flag\",\n    style: {\n      backgroundImage: `url(${foodItemEdit.editItem && foodItemEdit.editItem.image})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"form-control sm-text\",\n    id: \"image\",\n    name: \"image\",\n    onChange: handleItemImage,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 27\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary xsm-text text-uppercase px-3 py-2 my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 23\n    }\n  }, _t(t(\"Update\")))) : /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"mx-2 sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 21\n    }\n  }, foodGroupForSearch && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"itemGroup\",\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 29\n    }\n  }, _t(t(\"Food group\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-primary mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 31\n    }\n  }, \"(\", _t(t(\"Optional\")), \")\"))), foodItemEdit.editItem && /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group list-group-horizontal-sm row col-12 mb-2 ml-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item col-12 col-md-2 py-1 my-1 border-0 px-0 ml-3 ml-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 31\n    }\n  }, _t(t(\"Selected Group\")), \"-\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item col-12 col-md-3 bg-success rounded-sm py-1 px-2 mx-2 my-1 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 31\n    }\n  }, foodItemEdit.editItem.food_group)), /*#__PURE__*/React.createElement(Select, {\n    options: foodGroupForSearch,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    classNamePrefix: \"select\",\n    onChange: handleSetItemGroup,\n    maxMenuHeight: \"200px\",\n    placeholder: _t(t(\"Please select a food group\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 27\n    }\n  }, _t(t(\"Name\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 29\n    }\n  }, \"*\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"name\",\n    name: \"name\",\n    onChange: handleChange,\n    value: foodItemEdit.item && foodItemEdit.item.name,\n    placeholder: \"e.g. Spicy chicken burger\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 27\n    }\n  }))), foodItemEdit.editItem && foodItemEdit.editItem.price && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"price\",\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 29\n    }\n  }, _t(t(\"Price\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 31\n    }\n  }, \"* \"), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 31\n    }\n  }, \"(\", _t(t(\"Enter price in USD\")), \")\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"price\",\n    type: \"number\",\n    step: \"0.01\",\n    min: \"0\",\n    className: \"form-control\",\n    name: \"price\",\n    value: foodItemEdit.item.price,\n    onChange: handleChange,\n    placeholder: \"e.g. Type price of this item in 'US dollar'\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 27\n    }\n  }, _t(t(\"Property groups\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-primary mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 29\n    }\n  }, \"(\", _t(t(\"Optional\")), \")\"))), foodItemEdit.editItem && foodItemEdit.editItem.has_property === \"1\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check mt-2 ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    id: \"propertyCheck\",\n    checked: foodItemEdit.deleteProperty,\n    onChange: () => {\n      setFoodItemEdit({ ...foodItemEdit,\n        deleteProperty: !foodItemEdit.deleteProperty\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"propertyCheck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 31\n    }\n  }, _t(t(\"Remove all properties?\")))), foodItemEdit.propertyGroup && /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group list-group-horizontal-sm row col-12 mb-2 ml-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 27\n    }\n  }, foodItemEdit.propertyGroup.map(selectedItem => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"list-group-item col-12 col-md-3 bg-success rounded-sm py-1 px-2 mx-2 my-1 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 33\n      }\n    }, selectedItem.name);\n  })), !foodItemEdit.deleteProperty && /*#__PURE__*/React.createElement(Select, {\n    options: propertyGroupForSearch,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    className: \"basic-multi-select\",\n    classNamePrefix: \"select\",\n    isMulti: true,\n    maxMenuHeight: \"200px\",\n    onChange: handleSetPropertes,\n    placeholder: _t(t(\"Please select property groups\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 27\n    }\n  })), foodItemEdit.editItem && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    id: \"SpecialCheck\",\n    checked: foodItemEdit.isSpecial,\n    onChange: () => {\n      setFoodItemEdit({ ...foodItemEdit,\n        isSpecial: !foodItemEdit.isSpecial\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"SpecialCheck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 27\n    }\n  }, _t(t(\"Is Special?\")))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary xsm-text text-uppercase px-3 py-2 my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 23\n    }\n  }, _t(t(\"Update\"))))) : /*#__PURE__*/React.createElement(\"div\", {\n    key: \"fragment2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center text-primary font-weight-bold text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 19\n    }\n  }, _t(t(\"Please wait\"))), modalLoading(5)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal fade\",\n    id: \"foodVariations\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog modal-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-sm-card__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"fk-sm-card__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 17\n    }\n  }, !variations.edit ? [variations.item && variations.item.name] : [_t(t(\"Update variations of\")) + \" \" + [variations.item && variations.item.name]])), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 860,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 13\n    }\n  }, !variations.uploading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 870,\n      columnNumber: 17\n    }\n  }, variations.list && variations.list.length > 0 && /*#__PURE__*/React.createElement(\"button\", {\n    className: `btn btn-primary text-capitalize mb-3 sm-text px-4`,\n    onClick: () => {\n      //set variations which are selected to delete === null; if \"Cancel\" button is clicked,\n      //edit variation true if \"Edit\" button clicked\n      setVariations({ ...variations,\n        //items to delete\n        deletedVariations: variations.edit === true ? null : variations.deletedVariations,\n        //items to set new price\n        newPrice: variations.edit === true ? null : variations.newPrice,\n        //if all variation deleted\n        priceAfterAllVariationDelete: variations.edit === true ? null : variations.priceAfterAllVariationDelete,\n        edit: !variations.edit\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 872,\n      columnNumber: 21\n    }\n  }, !variations.edit ? _t(t(\"edit\")) : _t(t(\"cancel\")))), variations.edit === false ?\n  /*#__PURE__*/\n  // if variation edit is false- show table data\n  React.createElement(\"div\", {\n    key: \"fragment-food-group-1 table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 911,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-bordered table-hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 25\n    }\n  }, _t(t(\"S/L\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 922,\n      columnNumber: 25\n    }\n  }, _t(t(\"Variation name\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 928,\n      columnNumber: 25\n    }\n  }, _t(t(\"Price\"))))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 936,\n      columnNumber: 21\n    }\n  }, variations.list && variations.list.length > 0 ? [variations.list.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      scope: \"row\",\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 33\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 948,\n        columnNumber: 33\n      }\n    }, item.variation_name), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 951,\n        columnNumber: 33\n      }\n    }, currencySymbolLeft(), formatPrice(item.food_with_variation_price), currencySymbolRight()));\n  })] : /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 961,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"row\",\n    colSpan: \"6\",\n    className: \"xsm-text align-middle text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 962,\n      columnNumber: 27\n    }\n  }, _t(t(\"No data available\"))))))) :\n  /*#__PURE__*/\n  //variation edit is true here- show input box for price\n  React.createElement(\"div\", {\n    key: \"fragment2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 977,\n      columnNumber: 17\n    }\n  }, variations.uploading === false ?\n  /*#__PURE__*/\n  //show form if Update button not clicked\n  React.createElement(\"form\", {\n    className: \"table-responsive\",\n    onSubmit: handleUpdateVariations,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 981,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-bordered table-hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 985,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 986,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 987,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 988,\n      columnNumber: 29\n    }\n  }, _t(t(\"S/L\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 995,\n      columnNumber: 29\n    }\n  }, _t(t(\"Variation name\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1001,\n      columnNumber: 29\n    }\n  }, _t(t(\"Price\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1007,\n      columnNumber: 29\n    }\n  }, _t(t(\"New price\")), \" \", /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1012,\n      columnNumber: 31\n    }\n  }, \"(\", _t(t(\"optional\")), \")\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 29\n    }\n  }, _t(t(\"Action\"))))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1024,\n      columnNumber: 25\n    }\n  }, variations.list && variations.list.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      scope: \"row\",\n      className: `xsm-text align-middle text-center ${//text deleted css if food_with_variation id exist is array of variations to delete\n      variations.deletedVariations && variations.deletedVariations.includes(item.food_with_variation_id) ? \"text-deleted text-primary\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1029,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1041,\n        columnNumber: 35\n      }\n    }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1044,\n        columnNumber: 35\n      }\n    }, item.variation_name), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 35\n      }\n    }, currencySymbolLeft(), formatPrice(item.food_with_variation_price), currencySymbolRight()), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1054,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      step: \"0.01\",\n      min: \"0\",\n      name: item.food_with_variation_id,\n      onChange: e => {\n        setVariations({ //set new price for each variation\n          ...variations,\n          newPrice: { ...variations.newPrice,\n            [e.target.name]: e.target.value\n          }\n        });\n      },\n      className: \"form-control xsm-text text-center variation-min-price-input-width\",\n      placeholder: \"Type new price in us dollar\",\n      disabled: //disable input field of variation if item is selected to delete\n      variations.deletedVariations && variations.deletedVariations.includes(item.food_with_variation_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1055,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 35\n      }\n    }, variations.deletedVariations && variations.deletedVariations.includes(item.food_with_variation_id) ?\n    /*#__PURE__*/\n    //Undo button\n    React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success btn-sm py-0\",\n      onClick: () => {\n        //Remove variation item from-->(deleted variation array which will be sent to server to delete)\n        let deletedArray = [];\n\n        if (variations.deletedVariations) {\n          //Pushing all old items to an empty array\n          variations.deletedVariations.map(deletedItem => {\n            deletedArray.push(deletedItem);\n          });\n        } //removing the item from new array\n\n\n        let tempDeletedArray = deletedArray.filter(undoItem => {\n          return undoItem !== item.food_with_variation_id;\n        }); //set new array as array of variation items to delete-->(which will be sent to server to delete)\n\n        setVariations({ ...variations,\n          deletedVariations: tempDeletedArray\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1088,\n        columnNumber: 39\n      }\n    }, _t(t(\"Undo\"))) : /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary btn-sm py-0\",\n      onClick: () => {\n        //add variation item to-->(deleted variation array which will be sent to server to delete)\n        let deletedArray = [];\n\n        if (variations.deletedVariations) {\n          //Pushing all old items to an empty array\n          variations.deletedVariations.map(deletedItem => {\n            deletedArray.push(deletedItem);\n          });\n        } //adding the item to new array\n\n\n        deletedArray.push(item.food_with_variation_id); //set new array as array of variation items to delete-->(which will be sent to server to delete)\n\n        setVariations({ ...variations,\n          deletedVariations: deletedArray\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1121,\n        columnNumber: 39\n      }\n    }, _t(t(\"Delete\")))));\n  }))), variations.list && variations.deletedVariations && [variations.deletedVariations.length === variations.list.length ?\n  /*#__PURE__*/\n  //Check array.length to delete from food_with variations table === total variation of the items\n  React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1163,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"price\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1164,\n      columnNumber: 31\n    }\n  }, _t(t(\"Price of the food item\")), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1166,\n      columnNumber: 33\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    step: \"0.01\",\n    min: \"0\",\n    className: \"form-control\",\n    id: \"price\",\n    name: \"price\",\n    placeholder: \"Type price for this item in 'US dollar'\",\n    value: variations.priceAfterAllVariationDelete || \"\",\n    required: true,\n    onChange: e => {\n      //set price of all variation selected to delete\n      setVariations({ ...variations,\n        priceAfterAllVariationDelete: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1168,\n      columnNumber: 31\n    }\n  })) : \"\"], /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary sm-text px-4 mt-3 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1194,\n      columnNumber: 23\n    }\n  }, _t(t(\"Update\")))) :\n  /*#__PURE__*/\n  //show loading if update has been clicked\n  React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1203,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center text-primary font-weight-bold text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1204,\n      columnNumber: 23\n    }\n  }, _t(t(\"Please wait\"))), modalLoading(5))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal fade\",\n    id: \"addVariations\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1220,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog modal-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1221,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1222,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1223,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-sm-card__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1224,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"fk-sm-card__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1225,\n      columnNumber: 17\n    }\n  }, _t(t(\"Add variations for\")), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1227,\n      columnNumber: 19\n    }\n  }, newVariation.item && newVariation.item.name))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1232,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1239,\n      columnNumber: 13\n    }\n  }, variations.uploading === false ? /*#__PURE__*/React.createElement(\"div\", {\n    key: \"fragment-food-group-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1242,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSaveNewVariations,\n    className: \"mx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1243,\n      columnNumber: 19\n    }\n  }, variationForSearch && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1245,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1246,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1247,\n      columnNumber: 27\n    }\n  }, _t(t(\"Add variations\")))), /*#__PURE__*/React.createElement(Select, {\n    options: variationForSearch,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    className: \"basic-multi-select\",\n    classNamePrefix: \"select\",\n    isMulti: true,\n    maxMenuHeight: \"200px\",\n    onChange: handleSetVariations,\n    placeholder: _t(t(\"Please select variations\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1251,\n      columnNumber: 25\n    }\n  })), newVariation.variations !== null && [newVariation.variations.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card mt-3 p-3 custom-bg-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1267,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header t-bg-epsilon text-white rounded-sm text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1268,\n      columnNumber: 27\n    }\n  }, _t(t(\"Please enter price for each variation\"))), newVariation.variations.map(variationItem => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mt-4\",\n      key: variationItem.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1273,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1277,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: variationItem.slug,\n      className: \"control-label sm-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1278,\n        columnNumber: 35\n      }\n    }, _t(t(\"Total price of\")), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-primary text-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1283,\n        columnNumber: 37\n      }\n    }, variationItem.name), \" \", _t(t(\"variation\")), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1287,\n        columnNumber: 37\n      }\n    }, \"* \"), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1288,\n        columnNumber: 37\n      }\n    }, \"(\", _t(t(\"Enter price in USD\")), \")\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1293,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      step: \"0.01\",\n      min: \"0\",\n      className: \"form-control\",\n      id: variationItem.slug,\n      name: variationItem.slug,\n      onChange: handleVariationPrice,\n      placeholder: \"e.g. Type price of this item in 'US dollar'\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1294,\n        columnNumber: 35\n      }\n    })));\n  }))], /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary xsm-text text-uppercase px-3 py-2 my-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1312,\n      columnNumber: 21\n    }\n  }, _t(t(\"Save\"))))) : /*#__PURE__*/React.createElement(\"div\", {\n    key: \"fragment2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1321,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center text-primary font-weight-bold text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1322,\n      columnNumber: 19\n    }\n  }, _t(t(\"Please wait\"))), modalLoading(5)))))), /*#__PURE__*/React.createElement(\"main\", {\n    id: \"main\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1335,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1336,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row t-mt-10 gx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1337,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1339,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ManageSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1340,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1345,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1346,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-scroll--pos-menu\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1347,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-pl-15 t-pr-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1348,\n      columnNumber: 19\n    }\n  }, variations.uploading === true || loading === true ? tableLoading() : /*#__PURE__*/React.createElement(\"div\", {\n    key: \"fragment3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1353,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${dataPaginating && \"loading\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1355,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 align-items-center t-pt-15 t-pb-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1358,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-lg-5 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1359,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list fk-breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1360,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"fk-breadcrumb__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1361,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"t-link fk-breadcrumb__link text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1362,\n      columnNumber: 33\n    }\n  }, !searchedFoodItem.searched ? _t(t(\"Food Items List\")) : _t(t(\"Search Result\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-lg-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1370,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-3 align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1371,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-9 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1373,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1374,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1375,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control border-0 form-control--light-1 rounded-0\",\n    placeholder: _t(t(\"Search by name, group\")) + \"..\",\n    onChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1376,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1385,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-search\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1389,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3 text-md-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1398,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/dashboard/manage/food/add-new\",\n    className: \"btn btn-primary xsm-text text-uppercase btn-lg btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1399,\n      columnNumber: 33\n    }\n  }, _t(t(\"add new\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1410,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-bordered table-hover min-table-height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1411,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1412,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1413,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1414,\n      columnNumber: 33\n    }\n  }, _t(t(\"S/L\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1421,\n      columnNumber: 33\n    }\n  }, _t(t(\"Image\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1428,\n      columnNumber: 33\n    }\n  }, _t(t(\"Name\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1435,\n      columnNumber: 33\n    }\n  }, _t(t(\"Group\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1442,\n      columnNumber: 33\n    }\n  }, _t(t(\"Price\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1449,\n      columnNumber: 33\n    }\n  }, _t(t(\"Enable/Disable\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1456,\n      columnNumber: 33\n    }\n  }, _t(t(\"Action\"))))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1464,\n      columnNumber: 29\n    }\n  }, !searchedFoodItem.searched ? [foodList && [foodList.data.length === 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1470,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"row\",\n    colSpan: \"6\",\n    className: \"xsm-text align-middle text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1471,\n      columnNumber: 43\n    }\n  }, _t(t(\"No data available\")))) : foodList.data.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"align-middle\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1482,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1486,\n        columnNumber: 47\n      }\n    }, index + 1 + (foodList.current_page - 1) * foodList.per_page), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1496,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-img-large mx-auto\",\n      style: {\n        backgroundImage: `url(${item.image !== null ? item.image : \"/assets/img/def_food.png\"})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1497,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1509,\n        columnNumber: 47\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1513,\n        columnNumber: 47\n      }\n    }, item.food_group), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1517,\n        columnNumber: 47\n      }\n    }, item.price ? [`${currencySymbolLeft()}${formatPrice(item.price)}${currencySymbolRight()}`] : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm py-0\",\n      onClick: () => // set variations on button click\n      setVariations({ ...variations,\n        edit: false,\n        item: item,\n        list: item.variations,\n        deletedVariations: null,\n        newPrice: null,\n        uploading: false,\n        priceAfterAllVariationDelete: \"\"\n      }),\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#foodVariations\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1525,\n        columnNumber: 51\n      }\n    }, _t(t(\"check variations\")))), /*#__PURE__*/React.createElement(\"td\", {\n      className: `xsm-text text-capitalize align-middle text-center`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1549,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `badge bg-${!item.is_enabled ? \"success\" : \"danger\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1552,\n        columnNumber: 51\n      }\n    }, item.is_enabled ? \"Yes\" : \"No\")), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1565,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1566,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn t-bg-clear t-text-dark--light-40\",\n      type: \"button\",\n      \"data-toggle\": \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1567,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-ellipsis-h\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1572,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1574,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text\",\n      onClick: () => {\n        // hadle previously set form data\n        setPriceForVariations(null);\n        setNewVariation({ ...newVariation,\n          item: item,\n          variations: null\n        });\n      },\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#addVariations\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1575,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1591,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1592,\n        columnNumber: 57\n      }\n    })), _t(t(\"Add variation\"))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text text-capitalize\",\n      onClick: () => {\n        // hadle data for edit modal\n        setVariations({ ...variations,\n          uploading: true\n        }); //property groups\n\n        let selectedGroups = [];\n\n        if (item.property_groups) {\n          item.property_groups.map(grpItem => {\n            propertyGroupForSearch.map(singlePropertyGroup => {\n              if (singlePropertyGroup.id === grpItem) {\n                selectedGroups.push(singlePropertyGroup);\n              }\n            });\n          });\n        }\n\n        setFoodItemEdit({ ...foodItemEdit,\n          editItem: item,\n          item,\n          propertyGroup: item.property_groups ? selectedGroups : null,\n          newPropertyGroups: null,\n          newFoodGroup: null,\n          deleteProperty: false,\n          isSpecial: parseInt(item.is_special) === 1 ? true : false,\n          imageUpdate: false,\n          newImage: null\n        });\n        setTimeout(() => {\n          setVariations({ ...variations,\n            uploading: false\n          });\n        }, 500);\n      },\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#editFood\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1597,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1660,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1661,\n        columnNumber: 57\n      }\n    })), _t(t(\"Edit / View\"))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text\",\n      onClick: () => {\n        //handle image upload\n        setVariations({ ...variations,\n          uploading: true\n        });\n        setFoodItemEdit({ ...foodItemEdit,\n          editItem: item,\n          item,\n          imageUpdate: true,\n          newImage: null\n        });\n        setTimeout(() => {\n          setVariations({ ...variations,\n            uploading: false\n          });\n        }, 500);\n      },\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#editFood\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1666,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1693,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1694,\n        columnNumber: 57\n      }\n    })), _t(t(\"Image\"))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text text-capitalize\",\n      onClick: () => {\n        handleDeleteConfirmation(item.slug);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1699,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1707,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1708,\n        columnNumber: 57\n      }\n    })), _t(t(\"Delete\"))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text text-capitalize\",\n      onClick: () => {\n        handleEnableDisable(item.slug, index);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1712,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1721,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1722,\n        columnNumber: 57\n      }\n    })), _t(t(\"Enable / Disable\")))))));\n  })]] : [\n  /* searched data, logic === haveData*/\n  searchedFoodItem && [searchedFoodItem.list.length === 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1741,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"row\",\n    colSpan: \"6\",\n    className: \"xsm-text align-middle text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1742,\n      columnNumber: 43\n    }\n  }, _t(t(\"No data available\")))) : searchedFoodItem.list.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"align-middle\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1754,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1758,\n        columnNumber: 49\n      }\n    }, index + 1 + (foodList.current_page - 1) * foodList.per_page), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1769,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-img-large mx-auto\",\n      style: {\n        backgroundImage: `url(${item.image !== null ? item.image : \"/assets/img/def_food.png\"})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1770,\n        columnNumber: 51\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1782,\n        columnNumber: 49\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1786,\n        columnNumber: 49\n      }\n    }, item.food_group), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1790,\n        columnNumber: 49\n      }\n    }, item.price ? [`${currencySymbolLeft()}${formatPrice(item.price)}${currencySymbolRight()}`] : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm py-0\",\n      onClick: () => // set variations on button click\n      setVariations({ ...variations,\n        edit: false,\n        item: item,\n        list: item.variations,\n        deletedVariations: null,\n        newPrice: null,\n        uploading: false,\n        priceAfterAllVariationDelete: \"\"\n      }),\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#foodVariations\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1798,\n        columnNumber: 53\n      }\n    }, _t(t(\"check variations\")))), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1825,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1826,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn t-bg-clear t-text-dark--light-40\",\n      type: \"button\",\n      \"data-toggle\": \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1827,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-ellipsis-h\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1832,\n        columnNumber: 55\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1834,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text\",\n      onClick: () => {\n        // hadle previously set form data\n        setPriceForVariations(null);\n        setNewVariation({ ...newVariation,\n          item: item,\n          variations: null\n        });\n      },\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#addVariations\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1835,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1851,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1852,\n        columnNumber: 59\n      }\n    })), _t(t(\"Add variation\"))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text text-capitalize\",\n      onClick: () => {\n        // hadle data for edit modal\n        setVariations({ ...variations,\n          uploading: true\n        }); //property groups\n\n        let selectedGroups = [];\n\n        if (item.property_groups) {\n          item.property_groups.map(grpItem => {\n            propertyGroupForSearch.map(singlePropertyGroup => {\n              if (singlePropertyGroup.id === grpItem) {\n                selectedGroups.push(singlePropertyGroup);\n              }\n            });\n          });\n        }\n\n        setFoodItemEdit({ ...foodItemEdit,\n          editItem: item,\n          item,\n          propertyGroup: item.property_groups ? selectedGroups : null,\n          newPropertyGroups: null,\n          newFoodGroup: null,\n          deleteProperty: false,\n          imageUpdate: false,\n          newImage: null\n        });\n        setTimeout(() => {\n          setVariations({ ...variations,\n            uploading: false\n          });\n        }, 500);\n      },\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#editFood\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1857,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1916,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1917,\n        columnNumber: 59\n      }\n    })), _t(t(\"Edit / View\"))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text\",\n      onClick: () => {\n        //handle image upload\n        setVariations({ ...variations,\n          uploading: true\n        });\n        setFoodItemEdit({ ...foodItemEdit,\n          editItem: item,\n          item,\n          imageUpdate: true,\n          newImage: null\n        });\n        setTimeout(() => {\n          setVariations({ ...variations,\n            uploading: false\n          });\n        }, 500);\n      },\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#editFood\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1922,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1949,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1950,\n        columnNumber: 59\n      }\n    })), _t(t(\"Image\"))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text text-capitalize\",\n      onClick: () => {\n        handleDeleteConfirmation(item.slug);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1955,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1963,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1964,\n        columnNumber: 59\n      }\n    })), _t(t(\"Delete\")))))));\n  })]]))))))), variations.uploading === true || loading === true ? paginationLoading() : [// logic === !searched\n  !searchedFoodItem.searched ? /*#__PURE__*/React.createElement(\"div\", {\n    key: \"fragment4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1993,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-bg-white mt-1 t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1994,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center t-pl-15 t-pr-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1995,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-7 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1996,\n      columnNumber: 29\n    }\n  }, pagination(foodList, setPaginatedFood)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2000,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list d-flex justify-content-md-end align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2001,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"t-list__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2002,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-inline-block sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2003,\n      columnNumber: 35\n    }\n  }, showingData(foodList)))))))) :\n  /*#__PURE__*/\n  // if searched\n  React.createElement(\"div\", {\n    className: \"t-bg-white mt-1 t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2014,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center t-pl-15 t-pr-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2015,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-7 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2016,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2017,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"t-list__item no-pagination-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2018,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-sm\",\n    onClick: () => setSearchedFoodItem({ ...searchedFoodItem,\n      searched: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2019,\n      columnNumber: 33\n    }\n  }, _t(t(\"Clear Search\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2033,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list d-flex justify-content-md-end align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2034,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"t-list__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2035,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-inline-block sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2036,\n      columnNumber: 33\n    }\n  }, searchedShowingData(searchedFoodItem, foodForSearch)))))))])))));\n};\n\nexport default AllItemList;","map":{"version":3,"sources":["/Users/raza/Downloads/khadyo_source_code/client/src/resources/restaurant/auth/manage/food/AllItemList.js"],"names":["React","useState","useContext","useEffect","useHistory","NavLink","ManageSidebar","_t","getCookie","modalLoading","tableLoading","pagination","paginationLoading","showingData","searchedShowingData","formatPrice","currencySymbolLeft","currencySymbolRight","useTranslation","axios","BASE_URL","Helmet","confirmAlert","toast","Select","makeAnimated","FoodContext","AllItemList","t","history","loading","setLoading","foodGroupForSearch","propertyGroupForSearch","getFood","foodList","setFoodList","setPaginatedFood","foodForSearch","setFoodForSearch","variationForSearch","dataPaginating","variations","setVariations","edit","uploading","item","list","newPrice","deletedVariations","priceAfterAllVariationDelete","newVariation","setNewVariation","priceForVariations","setPriceForVariations","foodItemEdit","setFoodItemEdit","editItem","propertyGroup","newPropertyGroups","newFoodGroup","removeProperty","isSpecial","imageUpdate","newImage","searchedFoodItem","setSearchedFoodItem","searched","handleSetItemGroup","foodGroup","handleChange","e","target","name","value","handleItemImage","files","handleSetPropertes","property","handleSubmit","preventDefault","formData","itemId","id","itemNewFoodGroup","price","deleteProperty","length","url","post","headers","Authorization","then","res","data","tempItem","find","selectedGroups","property_groups","map","grpItem","singlePropertyGroup","push","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","className","catch","error","handleSubmitImage","FormData","append","response","errors","image","forEach","handleSetVariations","handleVariationPrice","handleEnableDisable","slug","index","console","log","foodItemUpdateEnableDisableUrl","updatedData","is_enabled","prevState","err","handleUpdateVariations","foodItemId","deletedVariationsArray","newPriceArray","Object","entries","foodVariationUpdateUrl","handleSaveNewVariations","slugArray","newVarItem","slugItem","tempData","handleSearch","searchInput","toLowerCase","searchedList","filter","lowerCaseItemName","lowerCaseItemGroup","food_group","includes","handleDeleteConfirmation","customUI","onClose","handleDeleteFood","get","backgroundImage","option","has_property","selectedItem","variation_name","food_with_variation_price","food_with_variation_id","deletedArray","deletedItem","tempDeletedArray","undoItem","variationItem","current_page","per_page","parseInt","is_special","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory, NavLink } from \"react-router-dom\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  pagination,\r\n  paginationLoading,\r\n  showingData,\r\n  searchedShowingData,\r\n  formatPrice,\r\n  currencySymbolLeft,\r\n  currencySymbolRight,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\n\r\n//context consumer\r\nimport { FoodContext } from \"../../../../../contexts/Food\";\r\n\r\nconst AllItemList = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n\r\n  //getting context values here\r\n  let {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n\r\n    //foodGroup\r\n    foodGroupForSearch,\r\n\r\n    //property group\r\n    propertyGroupForSearch,\r\n\r\n    //food\r\n    getFood,\r\n    foodList,\r\n    setFoodList,\r\n    setPaginatedFood,\r\n    foodForSearch,\r\n    setFoodForSearch,\r\n\r\n    //variations\r\n    variationForSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n  } = useContext(FoodContext);\r\n\r\n  // States hook here\r\n  let [variations, setVariations] = useState({\r\n    //common\r\n    edit: false,\r\n    uploading: false,\r\n\r\n    //food item === item\r\n    item: null,\r\n\r\n    //variation list === list\r\n    list: null,\r\n\r\n    //new price of variations\r\n    newPrice: null,\r\n\r\n    //variation to delete- id of food_with_variations table\r\n    deletedVariations: null,\r\n\r\n    //if all variation deleted\r\n    priceAfterAllVariationDelete: \"\",\r\n  });\r\n\r\n  //new variation\r\n  let [newVariation, setNewVariation] = useState({\r\n    //food item === item\r\n    item: null,\r\n    variations: null,\r\n  });\r\n  let [priceForVariations, setPriceForVariations] = useState(null);\r\n\r\n  //edit food item\r\n  let [foodItemEdit, setFoodItemEdit] = useState({\r\n    //show data on modal\r\n    editItem: null,\r\n    propertyGroup: null,\r\n\r\n    //formData\r\n    item: null,\r\n    newPropertyGroups: null,\r\n    newFoodGroup: null,\r\n    removeProperty: false,\r\n\r\n    //special\r\n    isSpecial: false,\r\n\r\n    //image\r\n    imageUpdate: false,\r\n    newImage: null,\r\n  });\r\n\r\n  //search result\r\n  let [searchedFoodItem, setSearchedFoodItem] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //edit food item\r\n  const handleSetItemGroup = (foodGroup) => {\r\n    setFoodItemEdit({\r\n      ...foodItemEdit,\r\n      newFoodGroup: foodGroup,\r\n    });\r\n  };\r\n\r\n  //on change input fields\r\n  const handleChange = (e) => {\r\n    setFoodItemEdit({\r\n      ...foodItemEdit,\r\n      item: { ...foodItemEdit.item, [e.target.name]: e.target.value },\r\n    });\r\n  };\r\n\r\n  //set image hook\r\n  const handleItemImage = (e) => {\r\n    setFoodItemEdit({\r\n      ...foodItemEdit,\r\n      newImage: e.target.files[0],\r\n    });\r\n  };\r\n\r\n  //set properties hook\r\n  const handleSetPropertes = (property) => {\r\n    setFoodItemEdit({\r\n      ...foodItemEdit,\r\n      newPropertyGroups: property,\r\n    });\r\n  };\r\n\r\n  //submit edit food item request to server\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setVariations({ ...variations, uploading: true });\r\n    let formData = {\r\n      //item id\r\n      itemId: foodItemEdit.editItem.id,\r\n      //item group\r\n      itemNewFoodGroup:\r\n        foodItemEdit.newFoodGroup !== null ? foodItemEdit.newFoodGroup : null,\r\n      //new name\r\n      name: foodItemEdit.item.name,\r\n      //new price\r\n      price: foodItemEdit.editItem.price ? foodItemEdit.item.price : null,\r\n      //to delete all property, boolean\r\n      deleteProperty: foodItemEdit.deleteProperty ? 1 : 0,\r\n      //isSpecial\r\n      isSpecial: foodItemEdit.isSpecial,\r\n      //new property groups\r\n      newPropertyGroups:\r\n        foodItemEdit.newPropertyGroups !== null &&\r\n        foodItemEdit.newPropertyGroups.length > 0\r\n          ? foodItemEdit.newPropertyGroups\r\n          : null,\r\n    };\r\n    const url = BASE_URL + `/settings/update-food-item`;\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setFoodList(res.data[0]);\r\n        setFoodForSearch(res.data[1]);\r\n        setSearchedFoodItem({\r\n          ...searchedFoodItem,\r\n          list: res.data[1],\r\n        });\r\n        //handling item in modal after item has been updated\r\n        let tempItem = res.data[1].find((item) => {\r\n          return item.id === foodItemEdit.editItem.id;\r\n        });\r\n        let selectedGroups = [];\r\n        if (tempItem.property_groups) {\r\n          tempItem.property_groups.map((grpItem) => {\r\n            propertyGroupForSearch.map((singlePropertyGroup) => {\r\n              if (singlePropertyGroup.id === grpItem) {\r\n                selectedGroups.push(singlePropertyGroup);\r\n              }\r\n            });\r\n          });\r\n        }\r\n        setFoodItemEdit({\r\n          //show data on modal\r\n          editItem: tempItem,\r\n          propertyGroup: tempItem.property_groups ? selectedGroups : null,\r\n\r\n          //formData\r\n          item: tempItem,\r\n          newPropertyGroups: null,\r\n          newFoodGroup: null,\r\n          removeProperty: false,\r\n          isSpecial: false,\r\n        });\r\n        setVariations({ ...variations, uploading: false });\r\n        toast.success(`${_t(t(\"Food item has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setVariations({ ...variations, uploading: false });\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //submit image request to server\r\n  const handleSubmitImage = (e) => {\r\n    e.preventDefault();\r\n    setVariations({ ...variations, uploading: true });\r\n    let formData = new FormData();\r\n    formData.append(\r\n      \"itemId\",\r\n      foodItemEdit.editItem && foodItemEdit.editItem.id\r\n    );\r\n    formData.append(\"image\", foodItemEdit.newImage);\r\n    const url = BASE_URL + `/settings/update-food-item`;\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setFoodList(res.data[0]);\r\n        setFoodForSearch(res.data[1]);\r\n        setSearchedFoodItem({\r\n          ...searchedFoodItem,\r\n          list: res.data[1],\r\n        });\r\n        //handling item in modal after item has been updated\r\n        let tempItem = res.data[1].find((item) => {\r\n          return item.id === foodItemEdit.editItem.id;\r\n        });\r\n        setFoodItemEdit({\r\n          //show data on modal\r\n          editItem: tempItem,\r\n          //formData\r\n          item: tempItem,\r\n          imageUpdate: true,\r\n          newImage: null,\r\n        });\r\n        setVariations({ ...variations, uploading: false });\r\n        toast.success(`${_t(t(\"Image has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setVariations({ ...variations, uploading: false });\r\n        if (error.response.data.errors.image) {\r\n          error.response.data.errors.image.forEach((item) => {\r\n            if (item === \"Please select a valid image file\") {\r\n              toast.error(`${_t(t(\"Please select a valid image file\"))}`, {\r\n                position: \"bottom-center\",\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n              });\r\n            }\r\n            if (item === \"Please select a file less than 5MB\") {\r\n              toast.error(`${_t(t(\"Please select a file less than 5MB\"))}`, {\r\n                position: \"bottom-center\",\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  //set variations hook\r\n  const handleSetVariations = (variations) => {\r\n    setNewVariation({ ...newVariation, variations });\r\n  };\r\n\r\n  //set each variation price\r\n  const handleVariationPrice = (e) => {\r\n    setPriceForVariations({\r\n      ...priceForVariations,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleEnableDisable = (slug, index) => {\r\n    console.log(slug);\r\n    let formData = {\r\n      slug: slug\r\n    };\r\n    const foodItemUpdateEnableDisableUrl =\r\n      BASE_URL + `/settings/update-food-item-enable-disable`;\r\n    return axios\r\n      .post(foodItemUpdateEnableDisableUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n        data: formData,\r\n      })\r\n      .then((res) => {\r\n        // Update the data in your React component\r\n        const updatedData = [...foodList.data]; // Create a copy of the data array\r\n        updatedData[index].is_enabled = !updatedData[index].is_enabled; // Toggle the is_enabled property\r\n\r\n        setFoodList((prevState) => ({\r\n          ...prevState,\r\n          data: updatedData,\r\n        }));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //update variations here\r\n  const handleUpdateVariations = (e) => {\r\n    e.preventDefault();\r\n    setVariations({ ...variations, uploading: true });\r\n    let formData = {\r\n      foodItemId: variations.item.id,\r\n      deletedVariationsArray: variations.deletedVariations,\r\n      newPriceArray: variations.newPrice\r\n        ? Object.entries(variations.newPrice)\r\n        : null,\r\n      priceAfterAllVariationDelete: variations.priceAfterAllVariationDelete,\r\n    };\r\n\r\n    const foodVariationUpdateUrl =\r\n      BASE_URL + `/settings/update-food-item-variation`;\r\n    return axios\r\n      .post(foodVariationUpdateUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setFoodList(res.data[0]);\r\n        setFoodForSearch(res.data[1]);\r\n        setSearchedFoodItem({\r\n          ...searchedFoodItem,\r\n          list: res.data[1],\r\n        });\r\n        //handling variations in modal after variations updated\r\n        let tempItem = res.data[1].find((item) => {\r\n          return item.id === variations.item.id;\r\n        });\r\n        setVariations({\r\n          ...variations,\r\n          edit: false,\r\n          uploading: false,\r\n          item: tempItem,\r\n          list: tempItem.variations,\r\n          deletedVariations: null,\r\n          newPrice: null,\r\n          priceAfterAllVariationDelete: \"\",\r\n        });\r\n        toast.success(`${_t(t(\"Food variations has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //save new variations here\r\n  const handleSaveNewVariations = (e) => {\r\n    e.preventDefault();\r\n    if (newVariation.variations === null) {\r\n      toast.error(`${_t(t(\"Please select variations\"))}`, {\r\n        position: \"bottom-center\",\r\n        autoClose: 10000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        className: \"text-center toast-notification\",\r\n      });\r\n    } else {\r\n      if (newVariation.variations.length > 0) {\r\n        setVariations({ ...variations, uploading: true });\r\n        let formData = new FormData();\r\n        formData.append(\"foodItemId\", newVariation.item.id);\r\n        //converting variations and prices to array\r\n        let slugArray = [];\r\n        newVariation.variations.map((newVarItem) => {\r\n          slugArray.push(newVarItem.slug);\r\n        });\r\n        slugArray.map((slugItem) => {\r\n          formData.append(\"slugOfVariations[]\", slugItem);\r\n        });\r\n\r\n        let tempData = Object.entries(priceForVariations);\r\n        tempData.map((item) => {\r\n          formData.append(\"variations[]\", item);\r\n        });\r\n\r\n        const url = BASE_URL + \"/settings/new-food-item-variation\";\r\n        return axios\r\n          .post(url, formData, {\r\n            headers: { Authorization: `Bearer ${getCookie()}` },\r\n          })\r\n          .then(() => {\r\n            setNewVariation({\r\n              item: null,\r\n              variations: null,\r\n            });\r\n            setPriceForVariations(null);\r\n            setVariations({ ...variations, uploading: false });\r\n            toast.success(`${_t(t(\"variations has been added\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          });\r\n      } else {\r\n        toast.error(`${_t(t(\"Please select variations\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  //search food here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedFoodItem({ ...searchedFoodItem, searched: false });\r\n    } else {\r\n      let searchedList = foodForSearch.filter((item) => {\r\n        let lowerCaseItemName = item.name.toLowerCase();\r\n        let lowerCaseItemGroup = item.food_group.toLowerCase();\r\n        return (\r\n          lowerCaseItemName.includes(searchInput) ||\r\n          lowerCaseItemGroup.includes(searchInput)\r\n        );\r\n      });\r\n      setSearchedFoodItem({\r\n        ...searchedFoodItem,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //delete confirmation modal of food item\r\n  const handleDeleteConfirmation = (slug) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleDeleteFood(slug);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //delete food here\r\n  const handleDeleteFood = (slug) => {\r\n    setLoading(true);\r\n    const url = BASE_URL + `/settings/delete-food-item/${slug}`;\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setFoodList(res.data[0]);\r\n        setFoodForSearch(res.data[1]);\r\n        setSearchedFoodItem({\r\n          ...searchedFoodItem,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Item has been deleted successfully\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Food Items\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* edit item modal */}\r\n      <div className=\"modal fade\" id=\"editFood\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"fk-sm-card__title\">\r\n                  {_t(t(\"Update\"))}{\" \"}\r\n                  <span className=\"text-capitalize\">\r\n                    {foodItemEdit.editItem && foodItemEdit.editItem.name}\r\n                  </span>\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {variations.uploading === false ? (\r\n                <div key=\"fragment-food-group-1\">\r\n                  {foodItemEdit.imageUpdate ? (\r\n                    <form onSubmit={handleSubmitImage} className=\"mx-2 sm-text\">\r\n                      <div className=\"form-group mt-4\">\r\n                        <div className=\"d-flex align-items-center mb-2\">\r\n                          <label htmlFor=\"image\" className=\"control-label mr-3\">\r\n                            {_t(t(\"Image\"))}\r\n                            <small className=\"text-secondary\">\r\n                              ({_t(t(\"300 x 300 Preferable\"))})\r\n                            </small>\r\n                          </label>\r\n                          <div\r\n                            className=\"fk-language__flag\"\r\n                            style={{\r\n                              backgroundImage: `url(${\r\n                                foodItemEdit.editItem &&\r\n                                foodItemEdit.editItem.image\r\n                              })`,\r\n                            }}\r\n                          ></div>\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <input\r\n                            type=\"file\"\r\n                            className=\"form-control sm-text\"\r\n                            id=\"image\"\r\n                            name=\"image\"\r\n                            onChange={handleItemImage}\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary xsm-text text-uppercase px-3 py-2 my-4\"\r\n                      >\r\n                        {_t(t(\"Update\"))}\r\n                      </button>\r\n                    </form>\r\n                  ) : (\r\n                    <form onSubmit={handleSubmit} className=\"mx-2 sm-text\">\r\n                      {foodGroupForSearch && (\r\n                        <div className=\"form-group mt-2\">\r\n                          <div className=\"mb-2\">\r\n                            <label\r\n                              htmlFor=\"itemGroup\"\r\n                              className=\"control-label\"\r\n                            >\r\n                              {_t(t(\"Food group\"))}\r\n                              <span className=\"text-primary mr-1\">\r\n                                ({_t(t(\"Optional\"))})\r\n                              </span>\r\n                            </label>\r\n                          </div>\r\n                          {foodItemEdit.editItem && (\r\n                            <ul className=\"list-group list-group-horizontal-sm row col-12 mb-2 ml-md-1\">\r\n                              <li className=\"list-group-item col-12 col-md-2 py-1 my-1 border-0 px-0 ml-3 ml-md-0\">\r\n                                {_t(t(\"Selected Group\"))}-\r\n                              </li>\r\n                              <li className=\"list-group-item col-12 col-md-3 bg-success rounded-sm py-1 px-2 mx-2 my-1 text-center\">\r\n                                {foodItemEdit.editItem.food_group}\r\n                              </li>\r\n                            </ul>\r\n                          )}\r\n                          <Select\r\n                            options={foodGroupForSearch}\r\n                            components={makeAnimated()}\r\n                            getOptionLabel={(option) => option.name}\r\n                            getOptionValue={(option) => option.name}\r\n                            classNamePrefix=\"select\"\r\n                            onChange={handleSetItemGroup}\r\n                            maxMenuHeight=\"200px\"\r\n                            placeholder={\r\n                              _t(t(\"Please select a food group\")) + \"..\"\r\n                            }\r\n                          />\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"form-group mt-3\">\r\n                        <div className=\"mb-2\">\r\n                          <label htmlFor=\"name\" className=\"control-label\">\r\n                            {_t(t(\"Name\"))}\r\n                            <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            onChange={handleChange}\r\n                            value={foodItemEdit.item && foodItemEdit.item.name}\r\n                            placeholder=\"e.g. Spicy chicken burger\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {foodItemEdit.editItem && foodItemEdit.editItem.price && (\r\n                        <div className=\"form-group mt-4\">\r\n                          <div className=\"mb-2\">\r\n                            <label htmlFor=\"price\" className=\"control-label\">\r\n                              {_t(t(\"Price\"))}\r\n                              <span className=\"text-primary\">* </span>\r\n                              <small className=\"text-secondary\">\r\n                                ({_t(t(\"Enter price in USD\"))})\r\n                              </small>\r\n                            </label>\r\n                          </div>\r\n                          <div className=\"mb-2\">\r\n                            <input\r\n                              id=\"price\"\r\n                              type=\"number\"\r\n                              step=\"0.01\"\r\n                              min=\"0\"\r\n                              className=\"form-control\"\r\n                              name=\"price\"\r\n                              value={foodItemEdit.item.price}\r\n                              onChange={handleChange}\r\n                              placeholder=\"e.g. Type price of this item in 'US dollar'\"\r\n                              required\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"form-group mt-3\">\r\n                        <div className=\"mb-2\">\r\n                          <label className=\"control-label\">\r\n                            {_t(t(\"Property groups\"))}\r\n                            <span className=\"text-primary mr-1\">\r\n                              ({_t(t(\"Optional\"))})\r\n                            </span>\r\n                          </label>\r\n                        </div>\r\n                        {/* delete all property chceckbox */}\r\n                        {foodItemEdit.editItem &&\r\n                          foodItemEdit.editItem.has_property === \"1\" && (\r\n                            <div className=\"form-check mt-2 ml-2\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id=\"propertyCheck\"\r\n                                checked={foodItemEdit.deleteProperty}\r\n                                onChange={() => {\r\n                                  setFoodItemEdit({\r\n                                    ...foodItemEdit,\r\n                                    deleteProperty:\r\n                                      !foodItemEdit.deleteProperty,\r\n                                  });\r\n                                }}\r\n                              />\r\n                              <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"propertyCheck\"\r\n                              >\r\n                                {_t(t(\"Remove all properties?\"))}\r\n                              </label>\r\n                            </div>\r\n                          )}\r\n                        {/* selected property group */}\r\n                        {foodItemEdit.propertyGroup && (\r\n                          <ul className=\"list-group list-group-horizontal-sm row col-12 mb-2 ml-md-1\">\r\n                            {foodItemEdit.propertyGroup.map((selectedItem) => {\r\n                              return (\r\n                                <li className=\"list-group-item col-12 col-md-3 bg-success rounded-sm py-1 px-2 mx-2 my-1 text-center\">\r\n                                  {selectedItem.name}\r\n                                </li>\r\n                              );\r\n                            })}\r\n                          </ul>\r\n                        )}\r\n                        {!foodItemEdit.deleteProperty && (\r\n                          <Select\r\n                            options={propertyGroupForSearch}\r\n                            components={makeAnimated()}\r\n                            getOptionLabel={(option) => option.name}\r\n                            getOptionValue={(option) => option.name}\r\n                            className=\"basic-multi-select\"\r\n                            classNamePrefix=\"select\"\r\n                            isMulti\r\n                            maxMenuHeight=\"200px\"\r\n                            onChange={handleSetPropertes}\r\n                            placeholder={\r\n                              _t(t(\"Please select property groups\")) + \"..\"\r\n                            }\r\n                          />\r\n                        )}\r\n                      </div>\r\n\r\n                      {foodItemEdit.editItem && (\r\n                        <div className=\"form-check mt-3\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id=\"SpecialCheck\"\r\n                            checked={foodItemEdit.isSpecial}\r\n                            onChange={() => {\r\n                              setFoodItemEdit({\r\n                                ...foodItemEdit,\r\n                                isSpecial: !foodItemEdit.isSpecial,\r\n                              });\r\n                            }}\r\n                          />\r\n                          <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor=\"SpecialCheck\"\r\n                          >\r\n                            {_t(t(\"Is Special?\"))}\r\n                          </label>\r\n                        </div>\r\n                      )}\r\n\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary xsm-text text-uppercase px-3 py-2 my-4\"\r\n                      >\r\n                        {_t(t(\"Update\"))}\r\n                      </button>\r\n                    </form>\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(5)}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* edit item modal Ends*/}\r\n\r\n      {/*update variations modal */}\r\n      <div className=\"modal fade\" id=\"foodVariations\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"fk-sm-card__title\">\r\n                  {/* food item name in variation modal */}\r\n                  {!variations.edit\r\n                    ? [variations.item && variations.item.name]\r\n                    : [\r\n                        _t(t(\"Update variations of\")) +\r\n                          \" \" +\r\n                          [variations.item && variations.item.name],\r\n                      ]}\r\n                  {/* food item name in variation modal ends */}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* showing this-> depending on update has been submitted or not */}\r\n              {!variations.uploading && (\r\n                <div className=\"text-right\">\r\n                  {variations.list && variations.list.length > 0 && (\r\n                    <button\r\n                      className={`btn btn-primary text-capitalize mb-3 sm-text px-4`}\r\n                      onClick={() => {\r\n                        //set variations which are selected to delete === null; if \"Cancel\" button is clicked,\r\n                        //edit variation true if \"Edit\" button clicked\r\n                        setVariations({\r\n                          ...variations,\r\n                          //items to delete\r\n                          deletedVariations:\r\n                            variations.edit === true\r\n                              ? null\r\n                              : variations.deletedVariations,\r\n\r\n                          //items to set new price\r\n                          newPrice:\r\n                            variations.edit === true\r\n                              ? null\r\n                              : variations.newPrice,\r\n\r\n                          //if all variation deleted\r\n                          priceAfterAllVariationDelete:\r\n                            variations.edit === true\r\n                              ? null\r\n                              : variations.priceAfterAllVariationDelete,\r\n\r\n                          edit: !variations.edit,\r\n                        });\r\n                      }}\r\n                    >\r\n                      {!variations.edit ? _t(t(\"edit\")) : _t(t(\"cancel\"))}\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              )}\r\n              {/* if update has been submitted or not ends here */}\r\n\r\n              {/* show table data / form / show modal loading */}\r\n              {variations.edit === false ? (\r\n                // if variation edit is false- show table data\r\n                <div key=\"fragment-food-group-1 table-responsive\">\r\n                  <table className=\"table table-bordered table-hover\">\r\n                    <thead className=\"align-middle\">\r\n                      <tr>\r\n                        <th\r\n                          scope=\"col\"\r\n                          className=\"sm-text align-middle text-center border-1 border\"\r\n                        >\r\n                          {_t(t(\"S/L\"))}\r\n                        </th>\r\n\r\n                        <th\r\n                          scope=\"col\"\r\n                          className=\"sm-text align-middle text-center border-1 border\"\r\n                        >\r\n                          {_t(t(\"Variation name\"))}\r\n                        </th>\r\n                        <th\r\n                          scope=\"col\"\r\n                          className=\"sm-text align-middle text-center border-1 border\"\r\n                        >\r\n                          {_t(t(\"Price\"))}\r\n                        </th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {variations.list && variations.list.length > 0 ? (\r\n                        [\r\n                          variations.list.map((item, index) => {\r\n                            return (\r\n                              <tr\r\n                                scope=\"row\"\r\n                                className=\"xsm-text align-middle text-center\"\r\n                              >\r\n                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                  {index + 1}\r\n                                </td>\r\n                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                  {item.variation_name}\r\n                                </td>\r\n                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                  {currencySymbolLeft()}\r\n                                  {formatPrice(item.food_with_variation_price)}\r\n                                  {currencySymbolRight()}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          }),\r\n                        ]\r\n                      ) : (\r\n                        <tr className=\"align-middle\">\r\n                          <td\r\n                            scope=\"row\"\r\n                            colSpan=\"6\"\r\n                            className=\"xsm-text align-middle text-center\"\r\n                          >\r\n                            {_t(t(\"No data available\"))}\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              ) : (\r\n                //variation edit is true here- show input box for price\r\n\r\n                <div key=\"fragment2\">\r\n                  {/* check if edit is true and update button clicked or not */}\r\n                  {variations.uploading === false ? (\r\n                    //show form if Update button not clicked\r\n                    <form\r\n                      className=\"table-responsive\"\r\n                      onSubmit={handleUpdateVariations}\r\n                    >\r\n                      <table className=\"table table-bordered table-hover\">\r\n                        <thead className=\"align-middle\">\r\n                          <tr>\r\n                            <th\r\n                              scope=\"col\"\r\n                              className=\"sm-text align-middle text-center border-1 border\"\r\n                            >\r\n                              {_t(t(\"S/L\"))}\r\n                            </th>\r\n\r\n                            <th\r\n                              scope=\"col\"\r\n                              className=\"sm-text align-middle text-center border-1 border\"\r\n                            >\r\n                              {_t(t(\"Variation name\"))}\r\n                            </th>\r\n                            <th\r\n                              scope=\"col\"\r\n                              className=\"sm-text align-middle text-center border-1 border\"\r\n                            >\r\n                              {_t(t(\"Price\"))}\r\n                            </th>\r\n                            <th\r\n                              scope=\"col\"\r\n                              className=\"sm-text align-middle text-center border-1 border\"\r\n                            >\r\n                              {_t(t(\"New price\"))}{\" \"}\r\n                              <small className=\"text-primary\">\r\n                                ({_t(t(\"optional\"))})\r\n                              </small>\r\n                            </th>\r\n                            <th\r\n                              scope=\"col\"\r\n                              className=\"sm-text align-middle text-center border-1 border\"\r\n                            >\r\n                              {_t(t(\"Action\"))}\r\n                            </th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {/* loop to show each variation item with input box of price */}\r\n                          {variations.list &&\r\n                            variations.list.map((item, index) => {\r\n                              return (\r\n                                <tr\r\n                                  scope=\"row\"\r\n                                  className={`xsm-text align-middle text-center ${\r\n                                    //text deleted css if food_with_variation id exist is array of variations to delete\r\n                                    variations.deletedVariations &&\r\n                                    variations.deletedVariations.includes(\r\n                                      item.food_with_variation_id\r\n                                    )\r\n                                      ? \"text-deleted text-primary\"\r\n                                      : \"\"\r\n                                  }`}\r\n                                >\r\n                                  <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                    {index + 1}\r\n                                  </td>\r\n                                  <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                    {item.variation_name}\r\n                                  </td>\r\n                                  <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                    {currencySymbolLeft()}\r\n                                    {formatPrice(\r\n                                      item.food_with_variation_price\r\n                                    )}\r\n                                    {currencySymbolRight()}\r\n                                  </td>\r\n                                  <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                    <input\r\n                                      type=\"number\"\r\n                                      step=\"0.01\"\r\n                                      min=\"0\"\r\n                                      name={item.food_with_variation_id}\r\n                                      onChange={(e) => {\r\n                                        setVariations({\r\n                                          //set new price for each variation\r\n                                          ...variations,\r\n                                          newPrice: {\r\n                                            ...variations.newPrice,\r\n                                            [e.target.name]: e.target.value,\r\n                                          },\r\n                                        });\r\n                                      }}\r\n                                      className=\"form-control xsm-text text-center variation-min-price-input-width\"\r\n                                      placeholder=\"Type new price in us dollar\"\r\n                                      disabled={\r\n                                        //disable input field of variation if item is selected to delete\r\n                                        variations.deletedVariations &&\r\n                                        variations.deletedVariations.includes(\r\n                                          item.food_with_variation_id\r\n                                        )\r\n                                      }\r\n                                    />\r\n                                  </td>\r\n                                  <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                    {/* Delete button or Undo button to display, show undo button if item is in array of variation to delete-->variations.deletedVariations */}\r\n                                    {variations.deletedVariations &&\r\n                                    variations.deletedVariations.includes(\r\n                                      item.food_with_variation_id\r\n                                    ) ? (\r\n                                      //Undo button\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-success btn-sm py-0\"\r\n                                        onClick={() => {\r\n                                          //Remove variation item from-->(deleted variation array which will be sent to server to delete)\r\n                                          let deletedArray = [];\r\n                                          if (variations.deletedVariations) {\r\n                                            //Pushing all old items to an empty array\r\n                                            variations.deletedVariations.map(\r\n                                              (deletedItem) => {\r\n                                                deletedArray.push(deletedItem);\r\n                                              }\r\n                                            );\r\n                                          }\r\n                                          //removing the item from new array\r\n                                          let tempDeletedArray =\r\n                                            deletedArray.filter((undoItem) => {\r\n                                              return (\r\n                                                undoItem !==\r\n                                                item.food_with_variation_id\r\n                                              );\r\n                                            });\r\n                                          //set new array as array of variation items to delete-->(which will be sent to server to delete)\r\n                                          setVariations({\r\n                                            ...variations,\r\n                                            deletedVariations: tempDeletedArray,\r\n                                          });\r\n                                        }}\r\n                                      >\r\n                                        {_t(t(\"Undo\"))}\r\n                                        {/* Undo button */}\r\n                                      </button>\r\n                                    ) : (\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary btn-sm py-0\"\r\n                                        onClick={() => {\r\n                                          //add variation item to-->(deleted variation array which will be sent to server to delete)\r\n                                          let deletedArray = [];\r\n                                          if (variations.deletedVariations) {\r\n                                            //Pushing all old items to an empty array\r\n                                            variations.deletedVariations.map(\r\n                                              (deletedItem) => {\r\n                                                deletedArray.push(deletedItem);\r\n                                              }\r\n                                            );\r\n                                          }\r\n                                          //adding the item to new array\r\n                                          deletedArray.push(\r\n                                            item.food_with_variation_id\r\n                                          );\r\n\r\n                                          //set new array as array of variation items to delete-->(which will be sent to server to delete)\r\n                                          setVariations({\r\n                                            ...variations,\r\n                                            deletedVariations: deletedArray,\r\n                                          });\r\n                                        }}\r\n                                      >\r\n                                        {_t(t(\"Delete\"))}\r\n                                      </button>\r\n                                    )}\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                        </tbody>\r\n                      </table>\r\n\r\n                      {/* input field for price if all variations has been deleted */}\r\n                      {variations.list &&\r\n                        variations.deletedVariations && [\r\n                          variations.deletedVariations.length ===\r\n                          variations.list.length ? (\r\n                            //Check array.length to delete from food_with variations table === total variation of the items\r\n                            <div className=\"mt-4\">\r\n                              <label htmlFor=\"price\" className=\"form-label\">\r\n                                {_t(t(\"Price of the food item\"))}\r\n                                <small className=\"text-primary\">*</small>\r\n                              </label>\r\n                              <input\r\n                                type=\"number\"\r\n                                step=\"0.01\"\r\n                                min=\"0\"\r\n                                className=\"form-control\"\r\n                                id=\"price\"\r\n                                name=\"price\"\r\n                                placeholder=\"Type price for this item in 'US dollar'\"\r\n                                value={\r\n                                  variations.priceAfterAllVariationDelete || \"\"\r\n                                }\r\n                                required\r\n                                onChange={(e) => {\r\n                                  //set price of all variation selected to delete\r\n                                  setVariations({\r\n                                    ...variations,\r\n                                    priceAfterAllVariationDelete:\r\n                                      e.target.value,\r\n                                  });\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          ) : (\r\n                            \"\"\r\n                          ),\r\n                        ]}\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary sm-text px-4 mt-3 mb-2\"\r\n                      >\r\n                        {_t(t(\"Update\"))}\r\n                      </button>\r\n                    </form>\r\n                  ) : (\r\n                    //show loading if update has been clicked\r\n                    <div>\r\n                      <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                        {_t(t(\"Please wait\"))}\r\n                      </div>\r\n                      {modalLoading(5)}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n              {/* show table data / form / show modal loading ends here*/}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/*update variations modal Ends*/}\r\n\r\n      {/* Add variation modal */}\r\n      <div className=\"modal fade\" id=\"addVariations\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"fk-sm-card__title\">\r\n                  {_t(t(\"Add variations for\"))}{\" \"}\r\n                  <span className=\"text-capitalize\">\r\n                    {newVariation.item && newVariation.item.name}\r\n                  </span>\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {variations.uploading === false ? (\r\n                <div key=\"fragment-food-group-1\">\r\n                  <form onSubmit={handleSaveNewVariations} className=\"mx-2\">\r\n                    {variationForSearch && (\r\n                      <div className=\"form-group\">\r\n                        <div className=\"mb-2\">\r\n                          <label className=\"control-label\">\r\n                            {_t(t(\"Add variations\"))}\r\n                          </label>\r\n                        </div>\r\n                        <Select\r\n                          options={variationForSearch}\r\n                          components={makeAnimated()}\r\n                          getOptionLabel={(option) => option.name}\r\n                          getOptionValue={(option) => option.name}\r\n                          className=\"basic-multi-select\"\r\n                          classNamePrefix=\"select\"\r\n                          isMulti\r\n                          maxMenuHeight=\"200px\"\r\n                          onChange={handleSetVariations}\r\n                          placeholder={_t(t(\"Please select variations\")) + \"..\"}\r\n                        />\r\n                      </div>\r\n                    )}\r\n                    {newVariation.variations !== null && [\r\n                      newVariation.variations.length > 0 && (\r\n                        <div className=\"card mt-3 p-3 custom-bg-secondary\">\r\n                          <div className=\"card-header t-bg-epsilon text-white rounded-sm text-center\">\r\n                            {_t(t(\"Please enter price for each variation\"))}\r\n                          </div>\r\n                          {newVariation.variations.map((variationItem) => {\r\n                            return (\r\n                              <div\r\n                                className=\"form-group mt-4\"\r\n                                key={variationItem.id}\r\n                              >\r\n                                <div className=\"mb-2\">\r\n                                  <label\r\n                                    htmlFor={variationItem.slug}\r\n                                    className=\"control-label sm-text\"\r\n                                  >\r\n                                    {_t(t(\"Total price of\"))}{\" \"}\r\n                                    <span className=\"text-primary text-bold\">\r\n                                      {variationItem.name}\r\n                                    </span>{\" \"}\r\n                                    {_t(t(\"variation\"))}\r\n                                    <span className=\"text-primary\">* </span>\r\n                                    <small className=\"text-secondary\">\r\n                                      ({_t(t(\"Enter price in USD\"))})\r\n                                    </small>\r\n                                  </label>\r\n                                </div>\r\n                                <div className=\"mb-2\">\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    step=\"0.01\"\r\n                                    min=\"0\"\r\n                                    className=\"form-control\"\r\n                                    id={variationItem.slug}\r\n                                    name={variationItem.slug}\r\n                                    onChange={handleVariationPrice}\r\n                                    placeholder=\"e.g. Type price of this item in 'US dollar'\"\r\n                                    required\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      ),\r\n                    ]}\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary xsm-text text-uppercase px-3 py-2 my-4\"\r\n                    >\r\n                      {_t(t(\"Save\"))}\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(5)}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Add variation modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* Loading effect */}\r\n                    {variations.uploading === true || loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"fragment3\">\r\n                        {/* next page data spin loading */}\r\n                        <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                        {/* spin loading ends */}\r\n\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {!searchedFoodItem.searched\r\n                                    ? _t(t(\"Food Items List\"))\r\n                                    : _t(t(\"Search Result\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\">\r\n                              {/* Search group */}\r\n                              <div className=\"col-md-9 t-mb-15 mb-md-0\">\r\n                                <div className=\"input-group\">\r\n                                  <div className=\"form-file\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                                      placeholder={\r\n                                        _t(t(\"Search by name, group\")) + \"..\"\r\n                                      }\r\n                                      onChange={handleSearch}\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                  >\r\n                                    <i\r\n                                      className=\"fa fa-search\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* Add group modal trigger button */}\r\n                              <div className=\"col-md-3 text-md-right\">\r\n                                <NavLink\r\n                                  to=\"/dashboard/manage/food/add-new\"\r\n                                  className=\"btn btn-primary xsm-text text-uppercase btn-lg btn-block\"\r\n                                >\r\n                                  {_t(t(\"add new\"))}\r\n                                </NavLink>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* Table */}\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-bordered table-hover min-table-height\">\r\n                            <thead className=\"align-middle\">\r\n                              <tr>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"S/L\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Image\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Name\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Group\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Price\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Enable/Disable\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Action\"))}\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"align-middle\">\r\n                              {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                              {!searchedFoodItem.searched\r\n                                ? [\r\n                                    foodList && [\r\n                                      foodList.data.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        foodList.data.map((item, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <th\r\n                                                scope=\"row\"\r\n                                                className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                              >\r\n                                                {index +\r\n                                                  1 +\r\n                                                  (foodList.current_page - 1) *\r\n                                                    foodList.per_page}\r\n                                              </th>\r\n\r\n                                              <td className=\"xsm-text\">\r\n                                                <div\r\n                                                  className=\"table-img-large mx-auto\"\r\n                                                  style={{\r\n                                                    backgroundImage: `url(${\r\n                                                      item.image !== null\r\n                                                        ? item.image\r\n                                                        : \"/assets/img/def_food.png\"\r\n                                                    })`,\r\n                                                  }}\r\n                                                ></div>\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.name}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.food_group}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.price ? (\r\n                                                  [\r\n                                                    `${currencySymbolLeft()}${formatPrice(\r\n                                                      item.price\r\n                                                    )}${currencySymbolRight()}`,\r\n                                                  ]\r\n                                                ) : (\r\n                                                  <button\r\n                                                    className=\"btn btn-primary btn-sm py-0\"\r\n                                                    onClick={() =>\r\n                                                      // set variations on button click\r\n                                                      setVariations({\r\n                                                        ...variations,\r\n                                                        edit: false,\r\n                                                        item: item,\r\n                                                        list: item.variations,\r\n                                                        deletedVariations: null,\r\n                                                        newPrice: null,\r\n                                                        uploading: false,\r\n                                                        priceAfterAllVariationDelete:\r\n                                                          \"\",\r\n                                                      })\r\n                                                    }\r\n                                                    data-toggle=\"modal\"\r\n                                                    data-target=\"#foodVariations\"\r\n                                                  >\r\n                                                    {_t(t(\"check variations\"))}\r\n                                                  </button>\r\n                                                )}\r\n                                              </td>\r\n\r\n                                              <td\r\n                                                  className={`xsm-text text-capitalize align-middle text-center`}\r\n                                                >\r\n                                                  <span\r\n                                                    className={`badge bg-${\r\n                                                      !item.is_enabled\r\n                                                        ? \"success\"\r\n                                                        : \"danger\"\r\n                                                    }`}\r\n                                                  >\r\n                                                    {item.is_enabled\r\n                                                      ? \"Yes\"\r\n                                                      : \"No\"}\r\n                                                  </span>\r\n                                                </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <div className=\"dropdown\">\r\n                                                  <button\r\n                                                    className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                    type=\"button\"\r\n                                                    data-toggle=\"dropdown\"\r\n                                                  >\r\n                                                    <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                  </button>\r\n                                                  <div className=\"dropdown-menu\">\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text\"\r\n                                                      onClick={() => {\r\n                                                        // hadle previously set form data\r\n                                                        setPriceForVariations(\r\n                                                          null\r\n                                                        );\r\n                                                        setNewVariation({\r\n                                                          ...newVariation,\r\n                                                          item: item,\r\n                                                          variations: null,\r\n                                                        });\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#addVariations\"\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-plus\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Add variation\"))}\r\n                                                    </button>\r\n\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        // hadle data for edit modal\r\n                                                        setVariations({\r\n                                                          ...variations,\r\n                                                          uploading: true,\r\n                                                        });\r\n                                                        //property groups\r\n                                                        let selectedGroups = [];\r\n                                                        if (\r\n                                                          item.property_groups\r\n                                                        ) {\r\n                                                          item.property_groups.map(\r\n                                                            (grpItem) => {\r\n                                                              propertyGroupForSearch.map(\r\n                                                                (\r\n                                                                  singlePropertyGroup\r\n                                                                ) => {\r\n                                                                  if (\r\n                                                                    singlePropertyGroup.id ===\r\n                                                                    grpItem\r\n                                                                  ) {\r\n                                                                    selectedGroups.push(\r\n                                                                      singlePropertyGroup\r\n                                                                    );\r\n                                                                  }\r\n                                                                }\r\n                                                              );\r\n                                                            }\r\n                                                          );\r\n                                                        }\r\n                                                        setFoodItemEdit({\r\n                                                          ...foodItemEdit,\r\n                                                          editItem: item,\r\n                                                          item,\r\n                                                          propertyGroup:\r\n                                                            item.property_groups\r\n                                                              ? selectedGroups\r\n                                                              : null,\r\n                                                          newPropertyGroups:\r\n                                                            null,\r\n                                                          newFoodGroup: null,\r\n                                                          deleteProperty: false,\r\n                                                          isSpecial:\r\n                                                            parseInt(\r\n                                                              item.is_special\r\n                                                            ) === 1\r\n                                                              ? true\r\n                                                              : false,\r\n                                                          imageUpdate: false,\r\n                                                          newImage: null,\r\n                                                        });\r\n                                                        setTimeout(() => {\r\n                                                          setVariations({\r\n                                                            ...variations,\r\n                                                            uploading: false,\r\n                                                          });\r\n                                                        }, 500);\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#editFood\"\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-pencil\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Edit / View\"))}\r\n                                                    </button>\r\n\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text\"\r\n                                                      onClick={() => {\r\n                                                        //handle image upload\r\n                                                        setVariations({\r\n                                                          ...variations,\r\n                                                          uploading: true,\r\n                                                        });\r\n\r\n                                                        setFoodItemEdit({\r\n                                                          ...foodItemEdit,\r\n                                                          editItem: item,\r\n                                                          item,\r\n                                                          imageUpdate: true,\r\n                                                          newImage: null,\r\n                                                        });\r\n\r\n                                                        setTimeout(() => {\r\n                                                          setVariations({\r\n                                                            ...variations,\r\n                                                            uploading: false,\r\n                                                          });\r\n                                                        }, 500);\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#editFood\"\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-file\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Image\"))}\r\n                                                    </button>\r\n\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        handleDeleteConfirmation(\r\n                                                          item.slug\r\n                                                        );\r\n                                                      }}\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-trash\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Delete\"))}\r\n                                                    </button>\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={()=>{\r\n                                                        handleEnableDisable(\r\n                                                        item.slug,\r\n                                                        index\r\n                                                      )\r\n                                                      }}\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-list\"></i>\r\n                                                      </span>\r\n                                                      {_t(\r\n                                                        t(\"Enable / Disable\")\r\n                                                      )}\r\n                                                    </button>\r\n                                                  </div>\r\n                                                </div>\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        })\r\n                                      ),\r\n                                    ],\r\n                                  ]\r\n                                : [\r\n                                    /* searched data, logic === haveData*/\r\n                                    searchedFoodItem && [\r\n                                      searchedFoodItem.list.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        searchedFoodItem.list.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (foodList.current_page -\r\n                                                      1) *\r\n                                                      foodList.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text\">\r\n                                                  <div\r\n                                                    className=\"table-img-large mx-auto\"\r\n                                                    style={{\r\n                                                      backgroundImage: `url(${\r\n                                                        item.image !== null\r\n                                                          ? item.image\r\n                                                          : \"/assets/img/def_food.png\"\r\n                                                      })`,\r\n                                                    }}\r\n                                                  ></div>\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.food_group}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.price ? (\r\n                                                    [\r\n                                                      `${currencySymbolLeft()}${formatPrice(\r\n                                                        item.price\r\n                                                      )}${currencySymbolRight()}`,\r\n                                                    ]\r\n                                                  ) : (\r\n                                                    <button\r\n                                                      className=\"btn btn-primary btn-sm py-0\"\r\n                                                      onClick={() =>\r\n                                                        // set variations on button click\r\n                                                        setVariations({\r\n                                                          ...variations,\r\n                                                          edit: false,\r\n                                                          item: item,\r\n                                                          list: item.variations,\r\n                                                          deletedVariations:\r\n                                                            null,\r\n                                                          newPrice: null,\r\n                                                          uploading: false,\r\n                                                          priceAfterAllVariationDelete:\r\n                                                            \"\",\r\n                                                        })\r\n                                                      }\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#foodVariations\"\r\n                                                    >\r\n                                                      {_t(\r\n                                                        t(\"check variations\")\r\n                                                      )}\r\n                                                    </button>\r\n                                                  )}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text\"\r\n                                                        onClick={() => {\r\n                                                          // hadle previously set form data\r\n                                                          setPriceForVariations(\r\n                                                            null\r\n                                                          );\r\n                                                          setNewVariation({\r\n                                                            ...newVariation,\r\n                                                            item: item,\r\n                                                            variations: null,\r\n                                                          });\r\n                                                        }}\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addVariations\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-plus\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Add variation\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          // hadle data for edit modal\r\n                                                          setVariations({\r\n                                                            ...variations,\r\n                                                            uploading: true,\r\n                                                          });\r\n                                                          //property groups\r\n                                                          let selectedGroups =\r\n                                                            [];\r\n                                                          if (\r\n                                                            item.property_groups\r\n                                                          ) {\r\n                                                            item.property_groups.map(\r\n                                                              (grpItem) => {\r\n                                                                propertyGroupForSearch.map(\r\n                                                                  (\r\n                                                                    singlePropertyGroup\r\n                                                                  ) => {\r\n                                                                    if (\r\n                                                                      singlePropertyGroup.id ===\r\n                                                                      grpItem\r\n                                                                    ) {\r\n                                                                      selectedGroups.push(\r\n                                                                        singlePropertyGroup\r\n                                                                      );\r\n                                                                    }\r\n                                                                  }\r\n                                                                );\r\n                                                              }\r\n                                                            );\r\n                                                          }\r\n                                                          setFoodItemEdit({\r\n                                                            ...foodItemEdit,\r\n                                                            editItem: item,\r\n                                                            item,\r\n                                                            propertyGroup:\r\n                                                              item.property_groups\r\n                                                                ? selectedGroups\r\n                                                                : null,\r\n                                                            newPropertyGroups:\r\n                                                              null,\r\n                                                            newFoodGroup: null,\r\n                                                            deleteProperty: false,\r\n\r\n                                                            imageUpdate: false,\r\n                                                            newImage: null,\r\n                                                          });\r\n                                                          setTimeout(() => {\r\n                                                            setVariations({\r\n                                                              ...variations,\r\n                                                              uploading: false,\r\n                                                            });\r\n                                                          }, 500);\r\n                                                        }}\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#editFood\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit / View\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text\"\r\n                                                        onClick={() => {\r\n                                                          //handle image upload\r\n                                                          setVariations({\r\n                                                            ...variations,\r\n                                                            uploading: true,\r\n                                                          });\r\n\r\n                                                          setFoodItemEdit({\r\n                                                            ...foodItemEdit,\r\n                                                            editItem: item,\r\n                                                            item,\r\n                                                            imageUpdate: true,\r\n                                                            newImage: null,\r\n                                                          });\r\n\r\n                                                          setTimeout(() => {\r\n                                                            setVariations({\r\n                                                              ...variations,\r\n                                                              uploading: false,\r\n                                                            });\r\n                                                          }, 500);\r\n                                                        }}\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#editFood\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-file\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Image\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete\"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* pagination loading effect */}\r\n              {variations.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedFoodItem.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(foodList, setPaginatedFood)}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(foodList)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedFoodItem({\r\n                                      ...searchedFoodItem,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedFoodItem,\r\n                                    foodForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllItemList;\r\n"]},"metadata":{},"sourceType":"module"}