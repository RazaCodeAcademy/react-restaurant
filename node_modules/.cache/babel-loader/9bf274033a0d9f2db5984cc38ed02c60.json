{"ast":null,"code":"var _jsxFileName = \"/Users/raza/Downloads/khadyo_source_code/client/src/resources/restaurant/auth/reports/StockDashboard.js\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"; //axios and base url\n\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../../../BaseUrl\"; //functions\n\nimport { _t, getCookie, formatPrice, tableLoading } from \"../../../../functions/Functions\";\nimport { useTranslation } from \"react-i18next\"; //3rd party packages\n\nimport { Helmet } from \"react-helmet\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport Chart from \"react-apexcharts\"; //pages & includes\n\nimport ReportSidebar from \"./ReportSidebar\"; //context consumer\n\nimport { SettingsContext } from \"../../../../contexts/Settings\";\n\nconst StockDashboard = () => {\n  const {\n    t\n  } = useTranslation();\n  const history = useHistory(); //getting context values here\n\n  let {\n    loading,\n    setLoading,\n    dataPaginating\n  } = useContext(SettingsContext); // States hook here\n  //donout chart\n\n  const [donoutWithPattern, setDonoutWithPattern] = useState({\n    series: [],\n    options: {\n      chart: {\n        width: 380,\n        type: \"donut\",\n        dropShadow: {\n          enabled: true,\n          color: \"#111\",\n          top: -1,\n          left: 3,\n          blur: 3,\n          opacity: 0.2\n        }\n      },\n      stroke: {\n        width: 0\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            labels: {\n              show: true,\n              total: {\n                showAlways: true,\n                show: true\n              }\n            }\n          }\n        }\n      },\n      labels: [],\n      dataLabels: {\n        dropShadow: {\n          blur: 3,\n          opacity: 0.8\n        }\n      },\n      fill: {\n        type: \"pattern\",\n        opacity: 1,\n        pattern: {\n          enabled: true,\n          style: [\"verticalLines\", \"squares\", \"horizontalLines\", \"circles\", \"slantedLines\"]\n        }\n      },\n      states: {\n        hover: {\n          filter: \"none\"\n        }\n      },\n      theme: {\n        palette: \"palette2\"\n      },\n      title: {\n        text: _t(t(\"Today's total revenue of all branches\"))\n      },\n      responsive: [{\n        breakpoint: 480,\n        options: {\n          chart: {\n            width: 200\n          },\n          legend: {\n            position: \"bottom\"\n          }\n        }\n      }]\n    }\n  }); //pie chart\n\n  const [options, setOptions] = useState({\n    series: [],\n    options: {\n      chart: {\n        width: 380,\n        type: \"pie\"\n      },\n      labels: [],\n      responsive: [{\n        breakpoint: 480,\n        options: {\n          chart: {\n            width: 200\n          },\n          legend: {\n            position: \"bottom\"\n          }\n        }\n      }],\n      title: {\n        text: _t(t(\"Today's revenue by food group\"))\n      }\n    }\n  }); //monthly branch\n\n  const [chart, setChart] = useState({\n    options: {\n      xaxis: {\n        categories: [],\n        labels: {\n          show: true\n        }\n      }\n    },\n    series: [{\n      name: _t(t(\"Amount\")),\n      data: []\n    }]\n  }); //monthly branch\n\n  const [chartitem, setChartItem] = useState({\n    options: {\n      xaxis: {\n        categories: [],\n        labels: {\n          show: false\n        }\n      }\n    },\n    series: [{\n      name: _t(t(\"Amount\")),\n      data: []\n    }]\n  }); //useEffect == componentDidMount()\n\n  useEffect(() => {\n    setLoading(true);\n    getReport();\n    setTimeout(() => {\n      setLoading(false);\n    }, 500);\n  }, []); //get reports\n\n  const getReport = () => {\n    const url = BASE_URL + \"/settings/report-dashboard\";\n    return axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${getCookie()}`\n      }\n    }).then(res => {\n      dailyBranch(res.data[0], res.data[1]);\n      monthlyBranch(res.data[2], res.data[3]);\n      dailyGroup(res.data[4], res.data[5]);\n      monthlyItems(res.data[6], res.data[7]);\n    }).catch(error => {});\n  }; //set daily branch\n\n\n  const dailyBranch = (name, amount) => {\n    let formattedAmount = amount.map(item => parseFloat(formatPrice(item)));\n    setDonoutWithPattern({\n      series: formattedAmount,\n      options: {\n        chart: {\n          width: 380,\n          type: \"donut\",\n          dropShadow: {\n            enabled: true,\n            color: \"#111\",\n            top: -1,\n            left: 3,\n            blur: 3,\n            opacity: 0.2\n          }\n        },\n        stroke: {\n          width: 0\n        },\n        plotOptions: {\n          pie: {\n            donut: {\n              labels: {\n                show: true,\n                total: {\n                  showAlways: true,\n                  show: true\n                }\n              }\n            }\n          }\n        },\n        labels: name,\n        dataLabels: {\n          dropShadow: {\n            blur: 3,\n            opacity: 0.8\n          }\n        },\n        fill: {\n          type: \"pattern\",\n          opacity: 1,\n          pattern: {\n            enabled: true,\n            style: [\"verticalLines\", \"squares\", \"horizontalLines\", \"circles\", \"slantedLines\"]\n          }\n        },\n        states: {\n          hover: {\n            filter: \"none\"\n          }\n        },\n        theme: {\n          palette: \"palette2\"\n        },\n        title: {\n          text: _t(t(\"Today's total revenue of all branches\"))\n        },\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200\n            },\n            legend: {\n              position: \"bottom\"\n            }\n          }\n        }]\n      }\n    });\n  }; //set daily foodgroup\n\n\n  const dailyGroup = (name, amount) => {\n    let formattedAmount = amount.map(item => parseFloat(formatPrice(item)));\n    setOptions({\n      series: formattedAmount,\n      options: {\n        chart: {\n          width: 380,\n          type: \"pie\"\n        },\n        labels: name,\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200\n            },\n            legend: {\n              position: \"bottom\"\n            }\n          }\n        }],\n        title: {\n          text: _t(t(\"Today's revenue by food group\"))\n        }\n      }\n    });\n  }; //set monthly branch\n\n\n  const monthlyBranch = (name, amount) => {\n    let formattedAmount = amount.map(item => parseFloat(formatPrice(item)));\n    setChart({ ...chart,\n      options: { ...chart.options,\n        xaxis: { ...chart.options.xaxis,\n          categories: name\n        }\n      },\n      series: [{\n        name: chart.series[0].name,\n        data: formattedAmount\n      }]\n    });\n  }; //set monthly items\n\n\n  const monthlyItems = (name, amount) => {\n    let formattedAmount = amount.map(item => parseFloat(formatPrice(item)));\n    setChartItem({ ...chartitem,\n      options: { ...chartitem.options,\n        xaxis: { ...chartitem.options.xaxis,\n          categories: name\n        }\n      },\n      series: [{\n        name: chartitem.series[0].name,\n        data: formattedAmount\n      }]\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }\n  }, _t(t(\"StockDashboard\")))), /*#__PURE__*/React.createElement(\"main\", {\n    id: \"main\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row t-mt-10 gx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReportSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-scroll--pos-menu table-bottom-info-hide\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-pl-15 t-pr-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${dataPaginating && \"loading\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 21\n    }\n  }), loading === true ? tableLoading() : /*#__PURE__*/React.createElement(\"div\", {\n    key: \"smtp-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 align-items-center t-pt-15 t-pb-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list fk-breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"fk-breadcrumb__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"t-link fk-breadcrumb__link text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 33\n    }\n  }, _t(t(\"StockDashboard\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 justify-content-center t-pt-15 t-pb-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-5 t-mb-15 mb-md-0 pie\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    options: donoutWithPattern.options,\n    series: donoutWithPattern.series,\n    type: \"donut\",\n    width: \"380\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-5 t-mb-15 mb-md-0 pie\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    options: options.options,\n    series: options.series,\n    type: \"pie\",\n    width: \"380\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 justify-content-start ml-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"py-1 font-weight-bold text-dark sm-text rounded-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 29\n    }\n  }, _t(t(\"Last month's revenue of each branch\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 justify-content-center t-pt-15 t-pb-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    options: chart.options,\n    series: chart.series,\n    type: \"bar\",\n    width: \"100%\",\n    height: \"300\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"py-1 sm-text text-center rounded-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 29\n    }\n  }, _t(t(\"AMOUNT / BRANCH\"))))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 justify-content-start ml-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"py-1 font-weight-bold text-dark sm-text rounded-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 29\n    }\n  }, _t(t(\"Last month's item wise revenue\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 justify-content-center t-pt-15 t-pb-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    options: chartitem.options,\n    series: chartitem.series,\n    type: \"line\",\n    width: \"100%\",\n    height: \"300\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pb-3 sm-text text-center rounded-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 29\n    }\n  }, _t(t(\"AMOUNT / BRANCH\"))))))))))))));\n};\n\nexport default StockDashboard;","map":{"version":3,"sources":["/Users/raza/Downloads/khadyo_source_code/client/src/resources/restaurant/auth/reports/StockDashboard.js"],"names":["React","useEffect","useContext","useState","useHistory","axios","BASE_URL","_t","getCookie","formatPrice","tableLoading","useTranslation","Helmet","toast","Select","makeAnimated","Chart","ReportSidebar","SettingsContext","StockDashboard","t","history","loading","setLoading","dataPaginating","donoutWithPattern","setDonoutWithPattern","series","options","chart","width","type","dropShadow","enabled","color","top","left","blur","opacity","stroke","plotOptions","pie","donut","labels","show","total","showAlways","dataLabels","fill","pattern","style","states","hover","filter","theme","palette","title","text","responsive","breakpoint","legend","position","setOptions","setChart","xaxis","categories","name","data","chartitem","setChartItem","getReport","setTimeout","url","get","headers","Authorization","then","res","dailyBranch","monthlyBranch","dailyGroup","monthlyItems","catch","error","amount","formattedAmount","map","item","parseFloat"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  formatPrice,\r\n  tableLoading,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\n//pages & includes\r\nimport ReportSidebar from \"./ReportSidebar\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\n\r\nconst StockDashboard = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let { loading, setLoading, dataPaginating } = useContext(SettingsContext);\r\n\r\n  // States hook here\r\n  //donout chart\r\n  const [donoutWithPattern, setDonoutWithPattern] = useState({\r\n    series: [],\r\n    options: {\r\n      chart: {\r\n        width: 380,\r\n        type: \"donut\",\r\n        dropShadow: {\r\n          enabled: true,\r\n          color: \"#111\",\r\n          top: -1,\r\n          left: 3,\r\n          blur: 3,\r\n          opacity: 0.2,\r\n        },\r\n      },\r\n      stroke: {\r\n        width: 0,\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n          donut: {\r\n            labels: {\r\n              show: true,\r\n              total: {\r\n                showAlways: true,\r\n                show: true,\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      labels: [],\r\n      dataLabels: {\r\n        dropShadow: {\r\n          blur: 3,\r\n          opacity: 0.8,\r\n        },\r\n      },\r\n      fill: {\r\n        type: \"pattern\",\r\n        opacity: 1,\r\n        pattern: {\r\n          enabled: true,\r\n          style: [\r\n            \"verticalLines\",\r\n            \"squares\",\r\n            \"horizontalLines\",\r\n            \"circles\",\r\n            \"slantedLines\",\r\n          ],\r\n        },\r\n      },\r\n      states: {\r\n        hover: {\r\n          filter: \"none\",\r\n        },\r\n      },\r\n      theme: {\r\n        palette: \"palette2\",\r\n      },\r\n\r\n      title: {\r\n        text: _t(t(\"Today's total revenue of all branches\")),\r\n      },\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200,\r\n            },\r\n            legend: {\r\n              position: \"bottom\",\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  });\r\n\r\n  //pie chart\r\n  const [options, setOptions] = useState({\r\n    series: [],\r\n    options: {\r\n      chart: {\r\n        width: 380,\r\n        type: \"pie\",\r\n      },\r\n      labels: [],\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200,\r\n            },\r\n            legend: {\r\n              position: \"bottom\",\r\n            },\r\n          },\r\n        },\r\n      ],\r\n\r\n      title: {\r\n        text: _t(t(\"Today's revenue by food group\")),\r\n      },\r\n    },\r\n  });\r\n\r\n  //monthly branch\r\n  const [chart, setChart] = useState({\r\n    options: {\r\n      xaxis: {\r\n        categories: [],\r\n        labels: { show: true },\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: _t(t(\"Amount\")),\r\n        data: [],\r\n      },\r\n    ],\r\n  });\r\n\r\n  //monthly branch\r\n  const [chartitem, setChartItem] = useState({\r\n    options: {\r\n      xaxis: {\r\n        categories: [],\r\n        labels: { show: false },\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: _t(t(\"Amount\")),\r\n        data: [],\r\n      },\r\n    ],\r\n  });\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getReport();\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 500);\r\n  }, []);\r\n\r\n  //get reports\r\n  const getReport = () => {\r\n    const url = BASE_URL + \"/settings/report-dashboard\";\r\n    return axios\r\n      .get(url, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        dailyBranch(res.data[0], res.data[1]);\r\n        monthlyBranch(res.data[2], res.data[3]);\r\n        dailyGroup(res.data[4], res.data[5]);\r\n        monthlyItems(res.data[6], res.data[7]);\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\n  //set daily branch\r\n  const dailyBranch = (name, amount) => {\r\n    let formattedAmount = amount.map((item) => parseFloat(formatPrice(item)));\r\n    setDonoutWithPattern({\r\n      series: formattedAmount,\r\n      options: {\r\n        chart: {\r\n          width: 380,\r\n          type: \"donut\",\r\n          dropShadow: {\r\n            enabled: true,\r\n            color: \"#111\",\r\n            top: -1,\r\n            left: 3,\r\n            blur: 3,\r\n            opacity: 0.2,\r\n          },\r\n        },\r\n        stroke: {\r\n          width: 0,\r\n        },\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              labels: {\r\n                show: true,\r\n                total: {\r\n                  showAlways: true,\r\n                  show: true,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        labels: name,\r\n        dataLabels: {\r\n          dropShadow: {\r\n            blur: 3,\r\n            opacity: 0.8,\r\n          },\r\n        },\r\n        fill: {\r\n          type: \"pattern\",\r\n          opacity: 1,\r\n          pattern: {\r\n            enabled: true,\r\n            style: [\r\n              \"verticalLines\",\r\n              \"squares\",\r\n              \"horizontalLines\",\r\n              \"circles\",\r\n              \"slantedLines\",\r\n            ],\r\n          },\r\n        },\r\n        states: {\r\n          hover: {\r\n            filter: \"none\",\r\n          },\r\n        },\r\n        theme: {\r\n          palette: \"palette2\",\r\n        },\r\n\r\n        title: {\r\n          text: _t(t(\"Today's total revenue of all branches\")),\r\n        },\r\n        responsive: [\r\n          {\r\n            breakpoint: 480,\r\n            options: {\r\n              chart: {\r\n                width: 200,\r\n              },\r\n              legend: {\r\n                position: \"bottom\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    });\r\n  };\r\n\r\n  //set daily foodgroup\r\n  const dailyGroup = (name, amount) => {\r\n    let formattedAmount = amount.map((item) => parseFloat(formatPrice(item)));\r\n\r\n    setOptions({\r\n      series: formattedAmount,\r\n      options: {\r\n        chart: {\r\n          width: 380,\r\n          type: \"pie\",\r\n        },\r\n        labels: name,\r\n        responsive: [\r\n          {\r\n            breakpoint: 480,\r\n            options: {\r\n              chart: {\r\n                width: 200,\r\n              },\r\n              legend: {\r\n                position: \"bottom\",\r\n              },\r\n            },\r\n          },\r\n        ],\r\n\r\n        title: {\r\n          text: _t(t(\"Today's revenue by food group\")),\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  //set monthly branch\r\n  const monthlyBranch = (name, amount) => {\r\n    let formattedAmount = amount.map((item) => parseFloat(formatPrice(item)));\r\n    setChart({\r\n      ...chart,\r\n      options: {\r\n        ...chart.options,\r\n        xaxis: { ...chart.options.xaxis, categories: name },\r\n      },\r\n      series: [{ name: chart.series[0].name, data: formattedAmount }],\r\n    });\r\n  };\r\n\r\n  //set monthly items\r\n  const monthlyItems = (name, amount) => {\r\n    let formattedAmount = amount.map((item) => parseFloat(formatPrice(item)));\r\n    setChartItem({\r\n      ...chartitem,\r\n      options: {\r\n        ...chartitem.options,\r\n        xaxis: { ...chartitem.options.xaxis, categories: name },\r\n      },\r\n      series: [{ name: chartitem.series[0].name, data: formattedAmount }],\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"StockDashboard\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ReportSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div\r\n                  className=\"fk-scroll--pos-menu table-bottom-info-hide\"\r\n                  data-simplebar\r\n                >\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {_t(t(\"StockDashboard\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row gx-2 justify-content-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 col-md-5 t-mb-15 mb-md-0 pie\">\r\n                            <Chart\r\n                              options={donoutWithPattern.options}\r\n                              series={donoutWithPattern.series}\r\n                              type=\"donut\"\r\n                              width=\"380\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"col-12 col-md-5 t-mb-15 mb-md-0 pie\">\r\n                            <Chart\r\n                              options={options.options}\r\n                              series={options.series}\r\n                              type=\"pie\"\r\n                              width=\"380\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"row gx-2 justify-content-start ml-3\">\r\n                          <div className=\"col-4 t-mb-15 mb-md-0\">\r\n                            <h4 className=\"py-1 font-weight-bold text-dark sm-text rounded-sm\">\r\n                              {_t(t(\"Last month's revenue of each branch\"))}\r\n                            </h4>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"row gx-2 justify-content-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 t-mb-15 mb-md-0\">\r\n                            <Chart\r\n                              options={chart.options}\r\n                              series={chart.series}\r\n                              type=\"bar\"\r\n                              width=\"100%\"\r\n                              height=\"300\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"row gx-2 justify-content-center\">\r\n                          <div className=\"col-4 t-mb-15 mb-md-0\">\r\n                            <div className=\"py-1 sm-text text-center rounded-sm\">\r\n                              {_t(t(\"AMOUNT / BRANCH\"))}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <hr />\r\n\r\n                        <div className=\"row gx-2 justify-content-start ml-3\">\r\n                          <div className=\"col-4 t-mb-15 mb-md-0\">\r\n                            <h4 className=\"py-1 font-weight-bold text-dark sm-text rounded-sm\">\r\n                              {_t(t(\"Last month's item wise revenue\"))}\r\n                            </h4>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"row gx-2 justify-content-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-12 t-mb-15 mb-md-0\">\r\n                            <Chart\r\n                              options={chartitem.options}\r\n                              series={chartitem.series}\r\n                              type=\"line\"\r\n                              width=\"100%\"\r\n                              height=\"300\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row gx-2 justify-content-center\">\r\n                          <div className=\"col-4 t-mb-15 mb-md-0\">\r\n                            <div className=\"pb-3 sm-text text-center rounded-sm\">\r\n                              {_t(t(\"AMOUNT / BRANCH\"))}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StockDashboard;\r\n"]},"metadata":{},"sourceType":"module"}