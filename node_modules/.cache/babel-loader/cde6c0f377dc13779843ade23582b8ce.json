{"ast":null,"code":"var _jsxFileName = \"/Users/raza/Downloads/khadyo_source_code/client/src/resources/restaurant/auth/customer/Customers.js\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\"; //axios and base url\n\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../../../BaseUrl\"; //functions\n\nimport { _t, getCookie, modalLoading, pageLoading, paginationLoading, pagination, showingData, searchedShowingData } from \"../../../../functions/Functions\";\nimport { useTranslation } from \"react-i18next\"; //3rd party packages\n\nimport { Helmet } from \"react-helmet\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\"; //importing context consumer here\n\nimport { UserContext } from \"../../../../contexts/User\";\nimport { SettingsContext } from \"../../../../contexts/Settings\";\nimport { RestaurantContext } from \"../../../../contexts/Restaurant\";\n\nconst Customers = () => {\n  //getting context values here\n  const {\n    //common\n    loading,\n    setLoading\n  } = useContext(SettingsContext);\n  const {\n    authUserInfo,\n    //customer\n    getCustomer,\n    customerList,\n    setCustomerList,\n    setPaginatedCustomer,\n    customerForSearch,\n    setCustomerForSearch,\n    //pagination\n    dataPaginating\n  } = useContext(UserContext);\n  const {\n    //branch\n    branchForSearch\n  } = useContext(RestaurantContext);\n  const {\n    t\n  } = useTranslation(); // States hook here\n  //new customer\n\n  let [newCustomer, setNewCustomer] = useState({\n    name: \"\",\n    email: \"\",\n    phn_no: \"\",\n    address: \"\",\n    branch: null,\n    selectedBranch: null,\n    edit: false,\n    editSlug: null,\n    uploading: false\n  }); //search result\n\n  let [searchedCustomer, setSearchedCustomer] = useState({\n    list: null,\n    searched: false\n  }); //useEffect == componentDidMount\n\n  useEffect(() => {}, []); //set name, phn no hook\n\n  const handleSetNewCustomer = e => {\n    setNewCustomer({ ...newCustomer,\n      [e.target.name]: e.target.value\n    });\n  }; //set branch hook\n\n\n  const handleSetBranch = branch => {\n    setNewCustomer({ ...newCustomer,\n      branch\n    });\n  }; //Save New customer\n\n\n  const handleSaveNewCustomer = e => {\n    e.preventDefault();\n    let checkBranch = false;\n\n    if (authUserInfo.details !== null && authUserInfo.details.user_type !== \"staff\") {\n      checkBranch = true;\n    }\n\n    if (checkBranch) {\n      if (newCustomer.branch !== null) {\n        setNewCustomer({ ...newCustomer,\n          uploading: true\n        });\n        const customerUrl = BASE_URL + `/settings/new-customer`;\n        let formData = new FormData();\n        formData.append(\"name\", newCustomer.name);\n        formData.append(\"phn_no\", newCustomer.phn_no);\n        formData.append(\"email\", newCustomer.email);\n        formData.append(\"address\", newCustomer.address);\n        formData.append(\"branch_id\", newCustomer.branch.id);\n        return axios.post(customerUrl, formData, {\n          headers: {\n            Authorization: `Bearer ${getCookie()}`\n          }\n        }).then(res => {\n          setNewCustomer({\n            name: \"\",\n            email: \"\",\n            phn_no: \"\",\n            address: \"\",\n            branch: null,\n            selectedBranch: null,\n            edit: false,\n            editSlug: null,\n            uploading: false\n          });\n          setCustomerList(res.data[0]);\n          setCustomerForSearch(res.data[1]);\n          setLoading(false);\n          toast.success(`${_t(t(\"Customer has been added\"))}`, {\n            position: \"bottom-center\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            className: \"text-center toast-notification\"\n          });\n        }).catch(error => {\n          setLoading(false);\n          setNewCustomer({ ...newCustomer,\n            uploading: false\n          });\n\n          if (error && error.response.data.errors) {\n            if (error.response.data.errors.phn_no) {\n              error.response.data.errors.phn_no.forEach(item => {\n                if (item === \"A customer exists with this phone number\") {\n                  toast.error(`${_t(t(\"A customer exists with this phone number\"))}`, {\n                    position: \"bottom-center\",\n                    autoClose: 10000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    className: \"text-center toast-notification\"\n                  });\n                }\n              });\n            }\n          }\n        });\n      } else {\n        toast.error(`${_t(t(\"Please select a branch\"))}`, {\n          position: \"bottom-center\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          className: \"text-center toast-notification\"\n        });\n      }\n    } else {\n      setNewCustomer({ ...newCustomer,\n        uploading: true\n      });\n      const customerUrl = BASE_URL + `/settings/new-customer`;\n      let formData = new FormData();\n      formData.append(\"name\", newCustomer.name);\n      formData.append(\"phn_no\", newCustomer.phn_no);\n      formData.append(\"email\", newCustomer.email);\n      formData.append(\"address\", newCustomer.address);\n\n      if (authUserInfo.details !== null) {\n        formData.append(\"branch_id\", authUserInfo.details.branch_id);\n      }\n\n      return axios.post(customerUrl, formData, {\n        headers: {\n          Authorization: `Bearer ${getCookie()}`\n        }\n      }).then(res => {\n        setNewCustomer({\n          name: \"\",\n          email: \"\",\n          phn_no: \"\",\n          address: \"\",\n          branch: null,\n          selectedBranch: null,\n          edit: false,\n          editSlug: null,\n          uploading: false\n        });\n        setCustomerList(res.data[0]);\n        setCustomerForSearch(res.data[1]);\n        setLoading(false);\n        toast.success(`${_t(t(\"Customer has been added\"))}`, {\n          position: \"bottom-center\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          className: \"text-center toast-notification\"\n        });\n      }).catch(error => {\n        setLoading(false);\n        setNewCustomer({ ...newCustomer,\n          uploading: false\n        });\n\n        if (error && error.response.data.errors) {\n          if (error.response.data.errors.phn_no) {\n            error.response.data.errors.phn_no.forEach(item => {\n              if (item === \"A customer exists with this phone number\") {\n                toast.error(`${_t(t(\"A customer exists with this phone number\"))}`, {\n                  position: \"bottom-center\",\n                  autoClose: 10000,\n                  hideProgressBar: false,\n                  closeOnClick: true,\n                  pauseOnHover: true,\n                  className: \"text-center toast-notification\"\n                });\n              }\n            });\n          }\n        }\n      });\n    }\n  }; //set edit true & values\n\n\n  const handleSetEdit = slug => {\n    let customer = customerForSearch.filter(item => {\n      return item.slug === slug;\n    });\n    let selectedOptionForBranch = null;\n\n    if (authUserInfo.details !== null && authUserInfo.details.user_type !== \"staff\") {\n      if (customer[0].branch_id) {\n        selectedOptionForBranch = branchForSearch.filter(branchItem => {\n          return branchItem.id === parseInt(customer[0].branch_id);\n        });\n      }\n    }\n\n    setNewCustomer({ ...newCustomer,\n      name: customer[0].name,\n      email: customer[0].email,\n      phn_no: customer[0].phn_no,\n      address: customer[0].address,\n      selectedBranch: selectedOptionForBranch ? selectedOptionForBranch[0] : null,\n      editSlug: customer[0].slug,\n      edit: true\n    });\n  }; //update customer\n\n\n  const handleUpdateCustomer = e => {\n    e.preventDefault();\n    setNewCustomer({ ...newCustomer,\n      uploading: true\n    });\n    const customerUrl = BASE_URL + `/settings/update-customer`;\n    let formData = new FormData();\n    formData.append(\"name\", newCustomer.name);\n    formData.append(\"phn_no\", newCustomer.phn_no);\n    formData.append(\"email\", newCustomer.email);\n    formData.append(\"address\", newCustomer.address);\n\n    if (newCustomer.branch !== null) {\n      formData.append(\"branch_id\", newCustomer.branch.id);\n    }\n\n    formData.append(\"editSlug\", newCustomer.editSlug);\n    return axios.post(customerUrl, formData, {\n      headers: {\n        Authorization: `Bearer ${getCookie()}`\n      }\n    }).then(res => {\n      setNewCustomer({\n        name: \"\",\n        email: \"\",\n        phn_no: \"\",\n        address: \"\",\n        branch: null,\n        selectedBranch: null,\n        edit: false,\n        editSlug: null,\n        uploading: false\n      });\n      setCustomerList(res.data[0]);\n      setCustomerForSearch(res.data[1]);\n      setSearchedCustomer({ ...searchedCustomer,\n        list: res.data[1]\n      });\n      setLoading(false);\n      toast.success(`${_t(t(\"Customer has been updated\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }).catch(error => {\n      setLoading(false);\n      setNewCustomer({ ...newCustomer,\n        uploading: false\n      });\n\n      if (error && error.response.data.errors) {\n        if (error.response.data.errors.phn_no) {\n          error.response.data.errors.phn_no.forEach(item => {\n            if (item === \"A customer exists with this phone number\") {\n              toast.error(`${_t(t(\"A customer exists with this phone number\"))}`, {\n                position: \"bottom-center\",\n                autoClose: 10000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                className: \"text-center toast-notification\"\n              });\n            }\n          });\n        }\n      }\n    });\n  }; //search customers here\n\n\n  const handleSearch = e => {\n    let searchInput = e.target.value.toLowerCase();\n\n    if (searchInput.length === 0) {\n      setSearchedCustomer({ ...searchedCustomer,\n        searched: false\n      });\n    } else {\n      let searchedList = customerForSearch.filter(item => {\n        //name\n        let lowerCaseItemName = item.name.toLowerCase(); //email\n\n        let lowerCaseItemEmail = item.email !== null && item.email.toLowerCase(); //phn no\n\n        let lowerCaseItemPhnNo = item.phn_no !== null && item.phn_no.toLowerCase(); //address\n\n        let lowerCaseItemAddress = item.address !== null && item.address.toLowerCase(); //branch\n\n        let lowerCaseItemBranch = item.branch_name !== null && item.branch_name.toLowerCase();\n        return lowerCaseItemName.includes(searchInput) || lowerCaseItemEmail && lowerCaseItemEmail.includes(searchInput) || lowerCaseItemPhnNo && lowerCaseItemPhnNo.includes(searchInput) || lowerCaseItemAddress && lowerCaseItemAddress.includes(searchInput) || lowerCaseItemBranch && lowerCaseItemBranch.includes(searchInput);\n      });\n      setSearchedCustomer({ ...searchedCustomer,\n        list: searchedList,\n        searched: true\n      });\n    }\n  }; //delete confirmation modal of waiter\n\n\n  const handleDeleteConfirmation = slug => {\n    confirmAlert({\n      customUI: ({\n        onClose\n      }) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card card-body\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }\n        }, _t(t(\"Are you sure?\"))), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }\n        }, _t(t(\"You want to delete this?\"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex justify-content-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => {\n            handleDeleteCustomer(slug);\n            onClose();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }\n        }, _t(t(\"Yes, delete it!\"))), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-success ml-2 px-3\",\n          onClick: onClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }\n        }, _t(t(\"No\")))));\n      }\n    });\n  }; //delete customer here\n\n\n  const handleDeleteCustomer = slug => {\n    setLoading(true);\n    const customerUrl = BASE_URL + `/settings/delete-customer/${slug}`;\n    return axios.get(customerUrl, {\n      headers: {\n        Authorization: `Bearer ${getCookie()}`\n      }\n    }).then(res => {\n      setCustomerList(res.data[0]);\n      setCustomerForSearch(res.data[1]);\n      setSearchedCustomer({ ...searchedCustomer,\n        list: res.data[1]\n      });\n      setLoading(false);\n      toast.success(`${_t(t(\"Customer has been deleted successfully\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }).catch(() => {\n      setLoading(false);\n      toast.error(`${_t(t(\"Please try again\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 9\n    }\n  }, _t(t(\"Customers\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal fade\",\n    id: \"addCustomer\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog modal-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-sm-card__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-capitalize fk-sm-card__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 17\n    }\n  }, !newCustomer.edit ? _t(t(\"Add new customer\")) : _t(t(\"Update customer\")))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 13\n    }\n  }, newCustomer.uploading === false ? /*#__PURE__*/React.createElement(\"div\", {\n    key: \"fragment-customer-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: !newCustomer.edit ? handleSaveNewCustomer : handleUpdateCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 23\n    }\n  }, _t(t(\"Name\")), \" \", /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 25\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"name\",\n    name: \"name\",\n    placeholder: \"e.g. Mr. John\",\n    value: newCustomer.name || \"\",\n    required: true,\n    onChange: handleSetNewCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 23\n    }\n  })), authUserInfo.details !== null && authUserInfo.details.user_type !== \"staff\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-label mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 27\n    }\n  }, _t(t(\"Select a branch\")), \" \", newCustomer.edit ? /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 31\n    }\n  }, \"( \", _t(t(\"Leave empty if you do not want to change branch\")), \" )\") : /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 31\n    }\n  }, \"*\")), newCustomer.edit && newCustomer.selectedBranch !== null && /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group list-group-horizontal-sm row col-12 mb-2 ml-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item col-12 col-md-3 bg-success rounded-sm py-1 px-2 my-1 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 33\n    }\n  }, newCustomer.selectedBranch.name)), /*#__PURE__*/React.createElement(Select, {\n    options: branchForSearch,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    className: \"basic-multi-select mt-2\",\n    classNamePrefix: \"select\",\n    onChange: handleSetBranch,\n    placeholder: _t(t(\"Please select a branch\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 23\n    }\n  }, _t(t(\"Email\"))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-control\",\n    id: \"email\",\n    name: \"email\",\n    placeholder: \"e.g. customer@example.com\",\n    value: newCustomer.email || \"\",\n    onChange: handleSetNewCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"phn_no\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 23\n    }\n  }, _t(t(\"Phone number\"))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"phn_no\",\n    name: \"phn_no\",\n    placeholder: \"e.g. 01xxx xxx xxx\",\n    value: newCustomer.phn_no || \"\",\n    onChange: handleSetNewCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"address\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 23\n    }\n  }, _t(t(\"Address\"))), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"address\",\n    name: \"address\",\n    placeholder: \"Type customer address\",\n    value: newCustomer.address || \"\",\n    onChange: handleSetNewCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success w-100 xsm-text text-uppercase t-width-max\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 27\n    }\n  }, !newCustomer.edit ? _t(t(\"Save\")) : _t(t(\"Update\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary w-100 xsm-text text-uppercase t-width-max\",\n    \"data-dismiss\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 27\n    }\n  }, _t(t(\"Close\")))))))) : /*#__PURE__*/React.createElement(\"div\", {\n    key: \"fragment2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center text-primary font-weight-bold text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 19\n    }\n  }, _t(t(\"Please wait\"))), modalLoading(3), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-success w-100 xsm-text text-uppercase t-width-max\",\n    onClick: e => {\n      e.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 25\n    }\n  }, !newCustomer.edit ? _t(t(\"Save\")) : _t(t(\"Update\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary w-100 xsm-text text-uppercase t-width-max\",\n    \"data-dismiss\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 25\n    }\n  }, _t(t(\"Close\"))))))))))), /*#__PURE__*/React.createElement(\"main\", {\n    id: \"main\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row t-mt-10 gx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 t-mb-30 mb-lg-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 13\n    }\n  }, newCustomer.uploading === true || loading === true ? pageLoading() : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-bg-white \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${dataPaginating && \"loading\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 align-items-center t-pt-15 t-pb-15 t-pl-15 t-pr-15 t-shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 t-mb-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list fk-breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"fk-breadcrumb__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"t-link fk-breadcrumb__link text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 27\n    }\n  }, !searchedCustomer.searched ? _t(t(\"Customers\")) : _t(t(\"Search Result\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-lg-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-search\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control border-0 form-control--light-1 rounded-0\",\n    placeholder: _t(t(\"Search\")) + \"..\",\n    onChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/dashboard/online-customers\",\n    className: \"btn btn-transparent btn-primary ml-2 sm-text text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 25\n    }\n  }, _t(t(\"Online Customers\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-lg-7 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-5 ml-auto mt-2 mt-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list fk-sort align-items-center justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"fk-sort__list mb-0 flex-grow-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"w-100 btn btn-secondary sm-text text-uppercase\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#addCustomer\",\n    onClick: () => {\n      setNewCustomer({ ...newCustomer,\n        branch: null,\n        edit: false,\n        uploading: false\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 31\n    }\n  }, _t(t(\"add new\"))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-scroll--order-history\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-pl-15 t-pr-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-bordered table-hover min-table-height mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 31\n    }\n  }, _t(t(\"S/L\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 31\n    }\n  }, _t(t(\"Name\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 31\n    }\n  }, _t(t(\"email\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 31\n    }\n  }, _t(t(\"Phn no\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 31\n    }\n  }, _t(t(\"Address\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 31\n    }\n  }, _t(t(\"Branch\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 31\n    }\n  }, _t(t(\"Action\"))))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 27\n    }\n  }, !searchedCustomer.searched ? [customerList && [customerList.data.length === 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"row\",\n    colSpan: \"7\",\n    className: \"xsm-text align-middle text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 41\n    }\n  }, _t(t(\"No data available\")))) : customerList.data.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"align-middle\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 45\n      }\n    }, index + 1 + (customerList.current_page - 1) * customerList.per_page), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 45\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 45\n      }\n    }, item.email || \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 45\n      }\n    }, item.phn_no ? /*#__PURE__*/React.createElement(\"a\", {\n      href: `tel:${item.phn_no}`,\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 49\n      }\n    }, item.phn_no) : \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 45\n      }\n    }, item.address || \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 45\n      }\n    }, item.branch_name || \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn t-bg-clear t-text-dark--light-40\",\n      type: \"button\",\n      \"data-toggle\": \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-ellipsis-h\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 51\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 866,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text text-capitalize\",\n      onClick: () => {\n        setNewCustomer({ ...newCustomer,\n          branch: null\n        });\n        handleSetEdit(item.slug);\n      },\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#addCustomer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 880,\n        columnNumber: 55\n      }\n    })), _t(t(\"Edit\"))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text text-capitalize\",\n      onClick: () => {\n        handleDeleteConfirmation(item.slug);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 893,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 55\n      }\n    })), _t(t(\"Delete\")))))));\n  })]] : [\n  /* searched data, logic === haveData*/\n  searchedCustomer && [searchedCustomer.list.length === 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 911,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"row\",\n    colSpan: \"7\",\n    className: \"xsm-text align-middle text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 41\n    }\n  }, _t(t(\"No data available\")))) : searchedCustomer.list.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"align-middle\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 928,\n        columnNumber: 47\n      }\n    }, index + 1 + (customerList.current_page - 1) * customerList.per_page), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939,\n        columnNumber: 47\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 943,\n        columnNumber: 47\n      }\n    }, item.email || \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 47\n      }\n    }, item.phn_no ? /*#__PURE__*/React.createElement(\"a\", {\n      href: `tel:${item.phn_no}`,\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 51\n      }\n    }, item.phn_no) : \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 959,\n        columnNumber: 47\n      }\n    }, item.address || \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 963,\n        columnNumber: 47\n      }\n    }, item.branch_name || \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn t-bg-clear t-text-dark--light-40\",\n      type: \"button\",\n      \"data-toggle\": \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 969,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-ellipsis-h\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 974,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text text-capitalize\",\n      onClick: () => {\n        setNewCustomer({ ...newCustomer,\n          branch: null\n        });\n        handleSetEdit(item.slug);\n      },\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#addCustomer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 977,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 991,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 992,\n        columnNumber: 57\n      }\n    })), _t(t(\"Edit\"))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text text-capitalize\",\n      onClick: () => {\n        handleDeleteConfirmation(item.slug);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 997,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1005,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1006,\n        columnNumber: 57\n      }\n    })), _t(t(\"Delete\")))))));\n  })]])))))), newCustomer.uploading === true || loading === true ? paginationLoading() : [// logic === !searched\n  !searchedCustomer.searched ? /*#__PURE__*/React.createElement(\"div\", {\n    key: \"fragment4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1033,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-bg-white mt-1 t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1034,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center t-pl-15 t-pr-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1035,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-7 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 29\n    }\n  }, pagination(customerList, setPaginatedCustomer)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1040,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list d-flex justify-content-md-end align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1041,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"t-list__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1042,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-inline-block sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 35\n    }\n  }, showingData(customerList)))))))) :\n  /*#__PURE__*/\n  // if searched\n  React.createElement(\"div\", {\n    className: \"t-bg-white mt-1 t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1054,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center t-pl-15 t-pr-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1055,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-7 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1056,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1057,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"t-list__item no-pagination-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1058,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-sm\",\n    onClick: () => setSearchedCustomer({ ...searchedCustomer,\n      searched: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1059,\n      columnNumber: 33\n    }\n  }, _t(t(\"Clear Search\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1073,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list d-flex justify-content-md-end align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1074,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"t-list__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1075,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-inline-block sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1076,\n      columnNumber: 33\n    }\n  }, searchedShowingData(searchedCustomer, customerForSearch)))))))])))));\n};\n\nexport default Customers;","map":{"version":3,"sources":["/Users/raza/Downloads/khadyo_source_code/client/src/resources/restaurant/auth/customer/Customers.js"],"names":["React","useEffect","useContext","useState","NavLink","axios","BASE_URL","_t","getCookie","modalLoading","pageLoading","paginationLoading","pagination","showingData","searchedShowingData","useTranslation","Helmet","Select","makeAnimated","confirmAlert","toast","UserContext","SettingsContext","RestaurantContext","Customers","loading","setLoading","authUserInfo","getCustomer","customerList","setCustomerList","setPaginatedCustomer","customerForSearch","setCustomerForSearch","dataPaginating","branchForSearch","t","newCustomer","setNewCustomer","name","email","phn_no","address","branch","selectedBranch","edit","editSlug","uploading","searchedCustomer","setSearchedCustomer","list","searched","handleSetNewCustomer","e","target","value","handleSetBranch","handleSaveNewCustomer","preventDefault","checkBranch","details","user_type","customerUrl","formData","FormData","append","id","post","headers","Authorization","then","res","data","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","className","catch","error","response","errors","forEach","item","branch_id","handleSetEdit","slug","customer","filter","selectedOptionForBranch","branchItem","parseInt","handleUpdateCustomer","handleSearch","searchInput","toLowerCase","length","searchedList","lowerCaseItemName","lowerCaseItemEmail","lowerCaseItemPhnNo","lowerCaseItemAddress","lowerCaseItemBranch","branch_name","includes","handleDeleteConfirmation","customUI","onClose","handleDeleteCustomer","get","option","map","index","current_page","per_page"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  pageLoading,\r\n  paginationLoading,\r\n  pagination,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//importing context consumer here\r\nimport { UserContext } from \"../../../../contexts/User\";\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\nimport { RestaurantContext } from \"../../../../contexts/Restaurant\";\r\n\r\nconst Customers = () => {\r\n  //getting context values here\r\n  const {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n  } = useContext(SettingsContext);\r\n\r\n  const {\r\n    authUserInfo,\r\n\r\n    //customer\r\n    getCustomer,\r\n    customerList,\r\n    setCustomerList,\r\n    setPaginatedCustomer,\r\n    customerForSearch,\r\n    setCustomerForSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n  } = useContext(UserContext);\r\n\r\n  const {\r\n    //branch\r\n    branchForSearch,\r\n  } = useContext(RestaurantContext);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // States hook here\r\n  //new customer\r\n  let [newCustomer, setNewCustomer] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phn_no: \"\",\r\n    address: \"\",\r\n    branch: null,\r\n    selectedBranch: null,\r\n    edit: false,\r\n    editSlug: null,\r\n    uploading: false,\r\n  });\r\n\r\n  //search result\r\n  let [searchedCustomer, setSearchedCustomer] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //set name, phn no hook\r\n  const handleSetNewCustomer = (e) => {\r\n    setNewCustomer({ ...newCustomer, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //set branch hook\r\n  const handleSetBranch = (branch) => {\r\n    setNewCustomer({ ...newCustomer, branch });\r\n  };\r\n\r\n  //Save New customer\r\n  const handleSaveNewCustomer = (e) => {\r\n    e.preventDefault();\r\n    let checkBranch = false;\r\n    if (\r\n      authUserInfo.details !== null &&\r\n      authUserInfo.details.user_type !== \"staff\"\r\n    ) {\r\n      checkBranch = true;\r\n    }\r\n    if (checkBranch) {\r\n      if (newCustomer.branch !== null) {\r\n        setNewCustomer({\r\n          ...newCustomer,\r\n          uploading: true,\r\n        });\r\n        const customerUrl = BASE_URL + `/settings/new-customer`;\r\n        let formData = new FormData();\r\n        formData.append(\"name\", newCustomer.name);\r\n        formData.append(\"phn_no\", newCustomer.phn_no);\r\n        formData.append(\"email\", newCustomer.email);\r\n        formData.append(\"address\", newCustomer.address);\r\n        formData.append(\"branch_id\", newCustomer.branch.id);\r\n        return axios\r\n          .post(customerUrl, formData, {\r\n            headers: { Authorization: `Bearer ${getCookie()}` },\r\n          })\r\n          .then((res) => {\r\n            setNewCustomer({\r\n              name: \"\",\r\n              email: \"\",\r\n              phn_no: \"\",\r\n              address: \"\",\r\n              branch: null,\r\n              selectedBranch: null,\r\n              edit: false,\r\n              editSlug: null,\r\n              uploading: false,\r\n            });\r\n            setCustomerList(res.data[0]);\r\n            setCustomerForSearch(res.data[1]);\r\n            setLoading(false);\r\n            toast.success(`${_t(t(\"Customer has been added\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            setLoading(false);\r\n            setNewCustomer({\r\n              ...newCustomer,\r\n              uploading: false,\r\n            });\r\n            if (error && error.response.data.errors) {\r\n              if (error.response.data.errors.phn_no) {\r\n                error.response.data.errors.phn_no.forEach((item) => {\r\n                  if (item === \"A customer exists with this phone number\") {\r\n                    toast.error(\r\n                      `${_t(t(\"A customer exists with this phone number\"))}`,\r\n                      {\r\n                        position: \"bottom-center\",\r\n                        autoClose: 10000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        className: \"text-center toast-notification\",\r\n                      }\r\n                    );\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          });\r\n      } else {\r\n        toast.error(`${_t(t(\"Please select a branch\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      }\r\n    } else {\r\n      setNewCustomer({\r\n        ...newCustomer,\r\n        uploading: true,\r\n      });\r\n      const customerUrl = BASE_URL + `/settings/new-customer`;\r\n      let formData = new FormData();\r\n      formData.append(\"name\", newCustomer.name);\r\n      formData.append(\"phn_no\", newCustomer.phn_no);\r\n      formData.append(\"email\", newCustomer.email);\r\n      formData.append(\"address\", newCustomer.address);\r\n      if (authUserInfo.details !== null) {\r\n        formData.append(\"branch_id\", authUserInfo.details.branch_id);\r\n      }\r\n      return axios\r\n        .post(customerUrl, formData, {\r\n          headers: { Authorization: `Bearer ${getCookie()}` },\r\n        })\r\n        .then((res) => {\r\n          setNewCustomer({\r\n            name: \"\",\r\n            email: \"\",\r\n            phn_no: \"\",\r\n            address: \"\",\r\n            branch: null,\r\n            selectedBranch: null,\r\n            edit: false,\r\n            editSlug: null,\r\n            uploading: false,\r\n          });\r\n          setCustomerList(res.data[0]);\r\n          setCustomerForSearch(res.data[1]);\r\n          setLoading(false);\r\n          toast.success(`${_t(t(\"Customer has been added\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          setNewCustomer({\r\n            ...newCustomer,\r\n            uploading: false,\r\n          });\r\n          if (error && error.response.data.errors) {\r\n            if (error.response.data.errors.phn_no) {\r\n              error.response.data.errors.phn_no.forEach((item) => {\r\n                if (item === \"A customer exists with this phone number\") {\r\n                  toast.error(\r\n                    `${_t(t(\"A customer exists with this phone number\"))}`,\r\n                    {\r\n                      position: \"bottom-center\",\r\n                      autoClose: 10000,\r\n                      hideProgressBar: false,\r\n                      closeOnClick: true,\r\n                      pauseOnHover: true,\r\n                      className: \"text-center toast-notification\",\r\n                    }\r\n                  );\r\n                }\r\n              });\r\n            }\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  //set edit true & values\r\n  const handleSetEdit = (slug) => {\r\n    let customer = customerForSearch.filter((item) => {\r\n      return item.slug === slug;\r\n    });\r\n\r\n    let selectedOptionForBranch = null;\r\n    if (\r\n      authUserInfo.details !== null &&\r\n      authUserInfo.details.user_type !== \"staff\"\r\n    ) {\r\n      if (customer[0].branch_id) {\r\n        selectedOptionForBranch = branchForSearch.filter((branchItem) => {\r\n          return branchItem.id === parseInt(customer[0].branch_id);\r\n        });\r\n      }\r\n    }\r\n    setNewCustomer({\r\n      ...newCustomer,\r\n      name: customer[0].name,\r\n      email: customer[0].email,\r\n      phn_no: customer[0].phn_no,\r\n      address: customer[0].address,\r\n      selectedBranch: selectedOptionForBranch\r\n        ? selectedOptionForBranch[0]\r\n        : null,\r\n      editSlug: customer[0].slug,\r\n      edit: true,\r\n    });\r\n  };\r\n\r\n  //update customer\r\n  const handleUpdateCustomer = (e) => {\r\n    e.preventDefault();\r\n    setNewCustomer({\r\n      ...newCustomer,\r\n      uploading: true,\r\n    });\r\n    const customerUrl = BASE_URL + `/settings/update-customer`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newCustomer.name);\r\n    formData.append(\"phn_no\", newCustomer.phn_no);\r\n    formData.append(\"email\", newCustomer.email);\r\n    formData.append(\"address\", newCustomer.address);\r\n    if (newCustomer.branch !== null) {\r\n      formData.append(\"branch_id\", newCustomer.branch.id);\r\n    }\r\n    formData.append(\"editSlug\", newCustomer.editSlug);\r\n    return axios\r\n      .post(customerUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewCustomer({\r\n          name: \"\",\r\n          email: \"\",\r\n          phn_no: \"\",\r\n          address: \"\",\r\n          branch: null,\r\n          selectedBranch: null,\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setCustomerList(res.data[0]);\r\n        setCustomerForSearch(res.data[1]);\r\n        setSearchedCustomer({\r\n          ...searchedCustomer,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Customer has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setNewCustomer({\r\n          ...newCustomer,\r\n          uploading: false,\r\n        });\r\n        if (error && error.response.data.errors) {\r\n          if (error.response.data.errors.phn_no) {\r\n            error.response.data.errors.phn_no.forEach((item) => {\r\n              if (item === \"A customer exists with this phone number\") {\r\n                toast.error(\r\n                  `${_t(t(\"A customer exists with this phone number\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //search customers here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedCustomer({ ...searchedCustomer, searched: false });\r\n    } else {\r\n      let searchedList = customerForSearch.filter((item) => {\r\n        //name\r\n        let lowerCaseItemName = item.name.toLowerCase();\r\n\r\n        //email\r\n        let lowerCaseItemEmail =\r\n          item.email !== null && item.email.toLowerCase();\r\n\r\n        //phn no\r\n        let lowerCaseItemPhnNo =\r\n          item.phn_no !== null && item.phn_no.toLowerCase();\r\n\r\n        //address\r\n        let lowerCaseItemAddress =\r\n          item.address !== null && item.address.toLowerCase();\r\n\r\n        //branch\r\n        let lowerCaseItemBranch =\r\n          item.branch_name !== null && item.branch_name.toLowerCase();\r\n        return (\r\n          lowerCaseItemName.includes(searchInput) ||\r\n          (lowerCaseItemEmail && lowerCaseItemEmail.includes(searchInput)) ||\r\n          (lowerCaseItemPhnNo && lowerCaseItemPhnNo.includes(searchInput)) ||\r\n          (lowerCaseItemAddress &&\r\n            lowerCaseItemAddress.includes(searchInput)) ||\r\n          (lowerCaseItemBranch && lowerCaseItemBranch.includes(searchInput))\r\n        );\r\n      });\r\n      setSearchedCustomer({\r\n        ...searchedCustomer,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //delete confirmation modal of waiter\r\n  const handleDeleteConfirmation = (slug) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleDeleteCustomer(slug);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //delete customer here\r\n  const handleDeleteCustomer = (slug) => {\r\n    setLoading(true);\r\n    const customerUrl = BASE_URL + `/settings/delete-customer/${slug}`;\r\n    return axios\r\n      .get(customerUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setCustomerList(res.data[0]);\r\n        setCustomerForSearch(res.data[1]);\r\n        setSearchedCustomer({\r\n          ...searchedCustomer,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Customer has been deleted successfully\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Customers\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Add modal */}\r\n      <div className=\"modal fade\" id=\"addCustomer\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {!newCustomer.edit\r\n                    ? _t(t(\"Add new customer\"))\r\n                    : _t(t(\"Update customer\"))}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {newCustomer.uploading === false ? (\r\n                <div key=\"fragment-customer-1\">\r\n                  <form\r\n                    onSubmit={\r\n                      !newCustomer.edit\r\n                        ? handleSaveNewCustomer\r\n                        : handleUpdateCustomer\r\n                    }\r\n                  >\r\n                    <div>\r\n                      <label htmlFor=\"name\" className=\"form-label\">\r\n                        {_t(t(\"Name\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"e.g. Mr. John\"\r\n                        value={newCustomer.name || \"\"}\r\n                        required\r\n                        onChange={handleSetNewCustomer}\r\n                      />\r\n                    </div>\r\n\r\n                    {authUserInfo.details !== null &&\r\n                      authUserInfo.details.user_type !== \"staff\" && (\r\n                        <div className=\"mt-3\">\r\n                          <label className=\"form-label mb-0\">\r\n                            {_t(t(\"Select a branch\"))}{\" \"}\r\n                            {newCustomer.edit ? (\r\n                              <small className=\"text-primary\">\r\n                                {\"( \"}\r\n                                {_t(\r\n                                  t(\r\n                                    \"Leave empty if you do not want to change branch\"\r\n                                  )\r\n                                )}\r\n                                {\" )\"}\r\n                              </small>\r\n                            ) : (\r\n                              <small className=\"text-primary\">*</small>\r\n                            )}\r\n                          </label>\r\n                          {newCustomer.edit &&\r\n                            newCustomer.selectedBranch !== null && (\r\n                              <ul className=\"list-group list-group-horizontal-sm row col-12 mb-2 ml-md-1\">\r\n                                <li className=\"list-group-item col-12 col-md-3 bg-success rounded-sm py-1 px-2 my-1 text-center\">\r\n                                  {newCustomer.selectedBranch.name}\r\n                                </li>\r\n                              </ul>\r\n                            )}\r\n                          <Select\r\n                            options={branchForSearch}\r\n                            components={makeAnimated()}\r\n                            getOptionLabel={(option) => option.name}\r\n                            getOptionValue={(option) => option.name}\r\n                            className=\"basic-multi-select mt-2\"\r\n                            classNamePrefix=\"select\"\r\n                            onChange={handleSetBranch}\r\n                            placeholder={_t(t(\"Please select a branch\"))}\r\n                          />\r\n                        </div>\r\n                      )}\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label htmlFor=\"email\" className=\"form-label\">\r\n                        {_t(t(\"Email\"))}\r\n                      </label>\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"e.g. customer@example.com\"\r\n                        value={newCustomer.email || \"\"}\r\n                        onChange={handleSetNewCustomer}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label htmlFor=\"phn_no\" className=\"form-label\">\r\n                        {_t(t(\"Phone number\"))}\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"phn_no\"\r\n                        name=\"phn_no\"\r\n                        placeholder=\"e.g. 01xxx xxx xxx\"\r\n                        value={newCustomer.phn_no || \"\"}\r\n                        onChange={handleSetNewCustomer}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label htmlFor=\"address\" className=\"form-label\">\r\n                        {_t(t(\"Address\"))}\r\n                      </label>\r\n                      <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"address\"\r\n                        name=\"address\"\r\n                        placeholder=\"Type customer address\"\r\n                        value={newCustomer.address || \"\"}\r\n                        onChange={handleSetNewCustomer}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          >\r\n                            {!newCustomer.edit\r\n                              ? _t(t(\"Save\"))\r\n                              : _t(t(\"Update\"))}\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                            data-dismiss=\"modal\"\r\n                          >\r\n                            {_t(t(\"Close\"))}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(3)}\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          {!newCustomer.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                          data-dismiss=\"modal\"\r\n                        >\r\n                          {_t(t(\"Close\"))}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Add modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            <div className=\"col-12 t-mb-30 mb-lg-0\">\r\n              {newCustomer.uploading === true || loading === true ? (\r\n                pageLoading()\r\n              ) : (\r\n                <div className=\"t-bg-white \">\r\n                  {/* next page data spin loading */}\r\n                  <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                  {/* spin loading ends */}\r\n                  <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15 t-pl-15 t-pr-15 t-shadow\">\r\n                    <div className=\"col-12 t-mb-15\">\r\n                      <ul className=\"t-list fk-breadcrumb\">\r\n                        <li className=\"fk-breadcrumb__list\">\r\n                          <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                            {!searchedCustomer.searched\r\n                              ? _t(t(\"Customers\"))\r\n                              : _t(t(\"Search Result\"))}\r\n                          </span>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-5\">\r\n                      <div className=\"input-group\">\r\n                        <button className=\"btn btn-primary\" type=\"button\">\r\n                          <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <div className=\"form-file\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                            placeholder={_t(t(\"Search\")) + \"..\"}\r\n                            onChange={handleSearch}\r\n                          />\r\n                        </div>\r\n                        <NavLink\r\n                          to=\"/dashboard/online-customers\"\r\n                          className=\"btn btn-transparent btn-primary ml-2 sm-text text-uppercase\"\r\n                        >\r\n                          {_t(t(\"Online Customers\"))}\r\n                        </NavLink>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-7 t-mb-15 mb-md-0\">\r\n                      <div className=\"row gx-2 align-items-center\">\r\n                        <div className=\"col-12 col-md-5 ml-auto mt-2 mt-md-0\">\r\n                          <ul className=\"t-list fk-sort align-items-center justify-content-center\">\r\n                            <li className=\"fk-sort__list mb-0 flex-grow-1\">\r\n                              <button\r\n                                className=\"w-100 btn btn-secondary sm-text text-uppercase\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#addCustomer\"\r\n                                onClick={() => {\r\n                                  setNewCustomer({\r\n                                    ...newCustomer,\r\n                                    branch: null,\r\n                                    edit: false,\r\n                                    uploading: false,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {_t(t(\"add new\"))}\r\n                              </button>\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"fk-scroll--order-history\" data-simplebar>\r\n                    <div className=\"t-pl-15 t-pr-15\">\r\n                      <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered table-hover min-table-height mt-4\">\r\n                          <thead className=\"align-middle\">\r\n                            <tr>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"S/L\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Name\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"email\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Phn no\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Address\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Branch\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Action\"))}\r\n                              </th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody className=\"align-middle\">\r\n                            {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                            {!searchedCustomer.searched\r\n                              ? [\r\n                                  customerList && [\r\n                                    customerList.data.length === 0 ? (\r\n                                      <tr className=\"align-middle\">\r\n                                        <td\r\n                                          scope=\"row\"\r\n                                          colSpan=\"7\"\r\n                                          className=\"xsm-text align-middle text-center\"\r\n                                        >\r\n                                          {_t(t(\"No data available\"))}\r\n                                        </td>\r\n                                      </tr>\r\n                                    ) : (\r\n                                      customerList.data.map((item, index) => {\r\n                                        return (\r\n                                          <tr\r\n                                            className=\"align-middle\"\r\n                                            key={index}\r\n                                          >\r\n                                            <th\r\n                                              scope=\"row\"\r\n                                              className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                            >\r\n                                              {index +\r\n                                                1 +\r\n                                                (customerList.current_page -\r\n                                                  1) *\r\n                                                  customerList.per_page}\r\n                                            </th>\r\n\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                              {item.name}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.email || \"-\"}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                              {item.phn_no ? (\r\n                                                <a\r\n                                                  href={`tel:${item.phn_no}`}\r\n                                                  rel=\"noopener noreferrer\"\r\n                                                >\r\n                                                  {item.phn_no}\r\n                                                </a>\r\n                                              ) : (\r\n                                                \"-\"\r\n                                              )}\r\n                                            </td>\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                              {item.address || \"-\"}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.branch_name || \"-\"}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                              <div className=\"dropdown\">\r\n                                                <button\r\n                                                  className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                  type=\"button\"\r\n                                                  data-toggle=\"dropdown\"\r\n                                                >\r\n                                                  <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                </button>\r\n                                                <div className=\"dropdown-menu\">\r\n                                                  <button\r\n                                                    className=\"dropdown-item sm-text text-capitalize\"\r\n                                                    onClick={() => {\r\n                                                      setNewCustomer({\r\n                                                        ...newCustomer,\r\n                                                        branch: null,\r\n                                                      });\r\n                                                      handleSetEdit(item.slug);\r\n                                                    }}\r\n                                                    data-toggle=\"modal\"\r\n                                                    data-target=\"#addCustomer\"\r\n                                                  >\r\n                                                    <span className=\"t-mr-8\">\r\n                                                      <i className=\"fa fa-pencil\"></i>\r\n                                                    </span>\r\n                                                    {_t(t(\"Edit\"))}\r\n                                                  </button>\r\n\r\n                                                  <button\r\n                                                    className=\"dropdown-item sm-text text-capitalize\"\r\n                                                    onClick={() => {\r\n                                                      handleDeleteConfirmation(\r\n                                                        item.slug\r\n                                                      );\r\n                                                    }}\r\n                                                  >\r\n                                                    <span className=\"t-mr-8\">\r\n                                                      <i className=\"fa fa-trash\"></i>\r\n                                                    </span>\r\n                                                    {_t(t(\"Delete\"))}\r\n                                                  </button>\r\n                                                </div>\r\n                                              </div>\r\n                                            </td>\r\n                                          </tr>\r\n                                        );\r\n                                      })\r\n                                    ),\r\n                                  ],\r\n                                ]\r\n                              : [\r\n                                  /* searched data, logic === haveData*/\r\n                                  searchedCustomer && [\r\n                                    searchedCustomer.list.length === 0 ? (\r\n                                      <tr className=\"align-middle\">\r\n                                        <td\r\n                                          scope=\"row\"\r\n                                          colSpan=\"7\"\r\n                                          className=\"xsm-text align-middle text-center\"\r\n                                        >\r\n                                          {_t(t(\"No data available\"))}\r\n                                        </td>\r\n                                      </tr>\r\n                                    ) : (\r\n                                      searchedCustomer.list.map(\r\n                                        (item, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <th\r\n                                                scope=\"row\"\r\n                                                className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                              >\r\n                                                {index +\r\n                                                  1 +\r\n                                                  (customerList.current_page -\r\n                                                    1) *\r\n                                                    customerList.per_page}\r\n                                              </th>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.name}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.email || \"-\"}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.phn_no ? (\r\n                                                  <a\r\n                                                    href={`tel:${item.phn_no}`}\r\n                                                    rel=\"noopener noreferrer\"\r\n                                                  >\r\n                                                    {item.phn_no}\r\n                                                  </a>\r\n                                                ) : (\r\n                                                  \"-\"\r\n                                                )}\r\n                                              </td>\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.address || \"-\"}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.branch_name || \"-\"}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <div className=\"dropdown\">\r\n                                                  <button\r\n                                                    className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                    type=\"button\"\r\n                                                    data-toggle=\"dropdown\"\r\n                                                  >\r\n                                                    <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                  </button>\r\n                                                  <div className=\"dropdown-menu\">\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        setNewCustomer({\r\n                                                          ...newCustomer,\r\n                                                          branch: null,\r\n                                                        });\r\n                                                        handleSetEdit(\r\n                                                          item.slug\r\n                                                        );\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#addCustomer\"\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-pencil\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Edit\"))}\r\n                                                    </button>\r\n\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        handleDeleteConfirmation(\r\n                                                          item.slug\r\n                                                        );\r\n                                                      }}\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-trash\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Delete\"))}\r\n                                                    </button>\r\n                                                  </div>\r\n                                                </div>\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        }\r\n                                      )\r\n                                    ),\r\n                                  ],\r\n                                ]}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {/* pagination loading effect */}\r\n              {newCustomer.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedCustomer.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(customerList, setPaginatedCustomer)}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(customerList)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedCustomer({\r\n                                      ...searchedCustomer,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedCustomer,\r\n                                    customerForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Customers;\r\n"]},"metadata":{},"sourceType":"module"}