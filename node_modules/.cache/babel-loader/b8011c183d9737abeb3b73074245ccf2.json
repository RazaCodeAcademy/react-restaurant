{"ast":null,"code":"var _jsxFileName = \"/Users/raza/Downloads/khadyo_source_code/client/src/resources/restaurant/auth/manage/stock/IngredientPurchase.js\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"; //axios and base url\n\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../../../../BaseUrl\"; //functions\n\nimport { _t, getCookie, tableLoading, currencySymbolLeft, formatPrice, currencySymbolRight } from \"../../../../../functions/Functions\";\nimport { useTranslation } from \"react-i18next\"; //3rd party packages\n\nimport { Helmet } from \"react-helmet\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\"; //pages & includes\n\nimport ManageSidebar from \"../ManageSidebar\"; //context consumer\n\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\nimport { RestaurantContext } from \"../../../../../contexts/Restaurant\";\nimport { UserContext } from \"../../../../../contexts/User\";\nimport { FoodContext } from \"../../../../../contexts/Food\";\n\nconst IngredientPurchase = () => {\n  const {\n    t\n  } = useTranslation();\n  const history = useHistory(); //getting context values here\n\n  let {\n    loading,\n    setLoading,\n    branchForSearch,\n    getIngredientItem,\n    ingredientItemForSearch,\n    ingredientItemStock,\n    getWorkPeriod,\n    dataPaginating\n  } = useContext(RestaurantContext);\n  let {\n    getSupplier,\n    supplierForSearch\n  } = useContext(UserContext);\n  let {\n    workPeriodWeb,\n    getFoodWeb\n  } = useContext(FoodContext); // States hook here\n  //new item\n\n  let [newItem, setNewItem] = useState({\n    branch: null,\n    supplier: null,\n    invoice: \"\",\n    description: \"\",\n    paymentType: \"\",\n    items: null,\n    paid: null,\n    total: null,\n    due: null\n  }); //datepicker\n\n  const [purchaseDate, setPurchaseDate] = useState(null); //qty and rate\n\n  let [qtyOfItem, setQtyOfItem] = useState(null);\n  let [rateOfItem, setRateOfItem] = useState(null); //useEffect == componentDidMount()\n\n  useEffect(() => {\n    getFoodWeb();\n    getSupplier();\n    getIngredientItem();\n  }, []); //on change input field\n\n  const handleChange = e => {\n    setNewItem({ ...newItem,\n      [e.target.name]: e.target.value\n    });\n  }; //set items hook\n\n\n  const handleSetItems = item => {\n    setNewItem({ ...newItem,\n      items: item\n    });\n  }; //stock\n\n\n  const handleGetStock = id => {\n    if (newItem.branch === null) {\n      return 0;\n    }\n\n    let stock = ingredientItemStock.find(item => {\n      return item.ingredient_id === parseInt(id) && item.branch_id === newItem.branch.id;\n    });\n\n    if (stock === undefined) {\n      return 0;\n    }\n\n    return stock.qty;\n  }; //subtotal\n\n\n  const handleGetSubTotal = slug => {\n    let qty = 0;\n    let rate = 0;\n\n    if (qtyOfItem !== null && qtyOfItem[slug]) {\n      qty = qtyOfItem[slug];\n    }\n\n    if (rateOfItem !== null && rateOfItem[slug]) {\n      rate = rateOfItem[slug];\n    }\n\n    return rate * qty;\n  }; //total\n\n\n  const handleGetTotal = () => {\n    let total = 0;\n\n    if (newItem.items !== null) {\n      newItem.items.map(item => {\n        if (qtyOfItem && rateOfItem && qtyOfItem[item.slug] && rateOfItem[item.slug]) {\n          total = total + qtyOfItem[item.slug] * rateOfItem[item.slug];\n        }\n      });\n    }\n\n    return total;\n  }; //set each item qty\n\n\n  const handleItemQty = e => {\n    setQtyOfItem({ ...qtyOfItem,\n      [e.target.name]: e.target.value\n    });\n  }; //set each item qty\n\n\n  const handleItemRate = e => {\n    setRateOfItem({ ...rateOfItem,\n      [e.target.name]: e.target.value\n    });\n  }; //handle Set branch hook\n\n\n  const handleSetBranch = branch => {\n    let theWorkPeriod = workPeriodWeb && workPeriodWeb.find(thisItem => {\n      return parseInt(thisItem.branch_id) === parseInt(branch.id);\n    });\n\n    if (theWorkPeriod !== undefined) {\n      setNewItem({ ...newItem,\n        branch\n      });\n    } else {\n      setNewItem({ ...newItem,\n        branch: null\n      });\n    }\n  }; //handle Set supplier hook\n\n\n  const handleSetSupplier = supplier => {\n    setNewItem({ ...newItem,\n      supplier\n    });\n  }; //post req of food item add\n\n\n  const ingredientItemAxios = () => {\n    setLoading(true);\n    let date = new Date(purchaseDate).getFullYear() + \"-\" + (new Date(purchaseDate).getMonth() + 1) + \"-\" + new Date(purchaseDate).getDate();\n    let formData = new FormData();\n    formData.append(\"branch_id\", newItem.branch.id);\n    formData.append(\"supplier_id\", newItem.supplier.id);\n    formData.append(\"invoice_number\", newItem.invoice);\n    formData.append(\"purchase_date\", date);\n    formData.append(\"desc\", newItem.description);\n    formData.append(\"payment_type\", newItem.paymentType);\n    formData.append(\"paid_amount\", newItem.paid);\n    formData.append(\"total_bill\", handleGetTotal()); //converting items and prices to array\n\n    let slugArray = [];\n    newItem.items.map(newIngredientItem => {\n      slugArray.push(newIngredientItem.slug);\n    });\n    slugArray.map(slugItem => {\n      formData.append(\"slugOfIngredients[]\", slugItem);\n\n      if (qtyOfItem[slugItem]) {\n        formData.append(\"qtys[]\", qtyOfItem[slugItem]);\n      }\n\n      if (rateOfItem[slugItem]) {\n        formData.append(\"rates[]\", rateOfItem[slugItem]);\n      }\n    });\n    const url = BASE_URL + \"/settings/new-ingredient_purchase\";\n    return axios.post(url, formData, {\n      headers: {\n        Authorization: `Bearer ${getCookie()}`\n      }\n    }).then(res => {\n      getIngredientItem();\n      setNewItem({\n        branch: null,\n        supplier: null,\n        invoice: \"\",\n        description: \"\",\n        paymentType: \"\",\n        items: null,\n        paid: null,\n        total: null,\n        due: null\n      });\n      setQtyOfItem(null);\n      setRateOfItem(null);\n      setLoading(false);\n      toast.success(`${_t(t(\"Purchase has been added\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }).catch(error => {\n      setLoading(false);\n      toast.error(`${_t(t(\"Please try again later\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    });\n  }; //send to server\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (newItem.branch !== null && newItem.supplier !== null && newItem.items !== null && newItem.items.length > 0 && newItem.purchaseDate !== null) {\n      ingredientItemAxios();\n    } else {\n      toast.error(`${_t(t(\"Please fill all the required fields\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  }, _t(t(\"Add Purchase\")))), /*#__PURE__*/React.createElement(\"main\", {\n    id: \"main\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row t-mt-10 gx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ManageSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-scroll--pos-menu table-bottom-info-hide\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-pl-15 t-pr-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${dataPaginating && \"loading\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  }), loading === true ? tableLoading() : /*#__PURE__*/React.createElement(\"div\", {\n    key: \"smtp-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 align-items-center t-pt-15 t-pb-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-lg-5 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list fk-breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"fk-breadcrumb__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"t-link fk-breadcrumb__link text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 33\n    }\n  }, _t(t(\"Add new purchase\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-lg-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-3 align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"row card p-2 mx-3 mb-5 sm-text\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 27\n    }\n  }, branchForSearch && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"branch\",\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 35\n    }\n  }, _t(t(\"Branch\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 37\n    }\n  }, \"*\"), newItem.branch === null && /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 39\n    }\n  }, \" (\", _t(t(\"please check if workperiod of the selected branch is started\")), \")\"))), /*#__PURE__*/React.createElement(Select, {\n    options: branchForSearch,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    classNamePrefix: \"select\",\n    onChange: handleSetBranch,\n    maxMenuHeight: \"200px\",\n    placeholder: _t(t(\"Please select a branch\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 33\n    }\n  })), supplierForSearch && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"branch\",\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 35\n    }\n  }, _t(t(\"Supplier\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 37\n    }\n  }, \"*\"))), /*#__PURE__*/React.createElement(Select, {\n    options: supplierForSearch,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    classNamePrefix: \"select\",\n    onChange: handleSetSupplier,\n    maxMenuHeight: \"200px\",\n    placeholder: _t(t(\"Please select a supplier\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-8 mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"invoice\",\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 35\n    }\n  }, _t(t(\"Invoice\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 37\n    }\n  }, \"*\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"invoice\",\n    name: \"invoice\",\n    onChange: handleChange,\n    value: newItem.invoice,\n    placeholder: \"e.g. 123\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 35\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-4 text-right mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2 ml-4 text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"purchaseDate\",\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 35\n    }\n  }, _t(t(\"Purchase Date\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 37\n    }\n  }, \"*\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    selected: purchaseDate,\n    onChange: date => setPurchaseDate(date),\n    peekNextMonth: true,\n    showMonthDropdown: true,\n    showYearDropdown: true,\n    dropdownMode: \"select\",\n    className: \"form-control\",\n    placeholderText: _t(t(\"Purchase date\")),\n    shouldCloseOnSelect: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 35\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 33\n    }\n  }, _t(t(\"Description\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"description\",\n    name: \"description\",\n    onChange: handleChange,\n    value: newItem.description,\n    placeholder: \"Short description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"paymentType\",\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 33\n    }\n  }, _t(t(\"Payment Type\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 35\n    }\n  }, \"*\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"paymentType\",\n    name: \"paymentType\",\n    onChange: handleChange,\n    value: newItem.paymentType,\n    placeholder: \"e.g. Cash, Bank payment..\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 33\n    }\n  }))), ingredientItemForSearch && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"branch\",\n    className: \"control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 35\n    }\n  }, _t(t(\"Ingredient Items\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 37\n    }\n  }, \"*\"))), /*#__PURE__*/React.createElement(Select, {\n    options: ingredientItemForSearch,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    classNamePrefix: \"select\",\n    onChange: handleSetItems,\n    maxMenuHeight: \"200px\",\n    isMulti: true,\n    isDisabled: newItem.branch === null,\n    placeholder: _t(t(\"Please select items\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 33\n    }\n  })), newItem.items !== null && [newItem.items.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-bordered table-hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 41\n    }\n  }, _t(t(\"Name\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 41\n    }\n  }, _t(t(\"stock\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 41\n    }\n  }, _t(t(\"Qty\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 41\n    }\n  }, _t(t(\"Rate\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 41\n    }\n  }, _t(t(\"Total\"))))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 37\n    }\n  }, newItem.items.map((ingredientItem, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"align-middle\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 47\n      }\n    }, ingredientItem.name), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 47\n      }\n    }, handleGetStock(ingredientItem.id)), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      step: \"0.01\",\n      min: \"0\",\n      className: \"form-control text-center\",\n      id: ingredientItem.slug,\n      name: ingredientItem.slug,\n      onChange: handleItemQty,\n      placeholder: \"Qty\",\n      required: true,\n      disabled: newItem.branch === null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      step: \"0.01\",\n      min: \"0\",\n      className: \"form-control text-center\",\n      id: ingredientItem.slug,\n      name: ingredientItem.slug,\n      onChange: handleItemRate,\n      placeholder: \"Price in usd\",\n      required: true,\n      disabled: newItem.branch === null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 47\n      }\n    }, currencySymbolLeft(), formatPrice(handleGetSubTotal(ingredientItem.slug)), currencySymbolRight()));\n  })), /*#__PURE__*/React.createElement(\"tfoot\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    colSpan: \"3\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 41\n    }\n  }, _t(t(\"Total Bill\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 41\n    }\n  }, currencySymbolLeft(), formatPrice(handleGetTotal()), currencySymbolRight())), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    colSpan: \"3\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 41\n    }\n  }, _t(t(\"Paid\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    step: \"0.01\",\n    min: \"0\",\n    className: \"form-control p-0 text-center\",\n    name: \"paid\",\n    value: newItem.paid,\n    onChange: handleChange,\n    placeholder: \"In usd\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 43\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    colSpan: \"3\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 41\n    }\n  }, _t(t(\"Due\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 41\n    }\n  }, currencySymbolLeft(), formatPrice(handleGetTotal() - newItem.paid), currencySymbolRight())))))], /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mt-4 pb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary px-5\",\n    type: \"submit\",\n    disabled: newItem.branch === null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 33\n    }\n  }, _t(t(\"Save\"))))))))))))))));\n};\n\nexport default IngredientPurchase;","map":{"version":3,"sources":["/Users/raza/Downloads/khadyo_source_code/client/src/resources/restaurant/auth/manage/stock/IngredientPurchase.js"],"names":["React","useEffect","useContext","useState","useHistory","axios","BASE_URL","_t","getCookie","tableLoading","currencySymbolLeft","formatPrice","currencySymbolRight","useTranslation","Helmet","toast","Select","makeAnimated","DatePicker","ManageSidebar","SettingsContext","RestaurantContext","UserContext","FoodContext","IngredientPurchase","t","history","loading","setLoading","branchForSearch","getIngredientItem","ingredientItemForSearch","ingredientItemStock","getWorkPeriod","dataPaginating","getSupplier","supplierForSearch","workPeriodWeb","getFoodWeb","newItem","setNewItem","branch","supplier","invoice","description","paymentType","items","paid","total","due","purchaseDate","setPurchaseDate","qtyOfItem","setQtyOfItem","rateOfItem","setRateOfItem","handleChange","e","target","name","value","handleSetItems","item","handleGetStock","id","stock","find","ingredient_id","parseInt","branch_id","undefined","qty","handleGetSubTotal","slug","rate","handleGetTotal","map","handleItemQty","handleItemRate","handleSetBranch","theWorkPeriod","thisItem","handleSetSupplier","ingredientItemAxios","date","Date","getFullYear","getMonth","getDate","formData","FormData","append","slugArray","newIngredientItem","push","slugItem","url","post","headers","Authorization","then","res","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","className","catch","error","handleSubmit","preventDefault","length","option","ingredientItem","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  tableLoading,\r\n  currencySymbolLeft,\r\n  formatPrice,\r\n  currencySymbolRight,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\r\nimport { RestaurantContext } from \"../../../../../contexts/Restaurant\";\r\nimport { UserContext } from \"../../../../../contexts/User\";\r\nimport { FoodContext } from \"../../../../../contexts/Food\";\r\n\r\nconst IngredientPurchase = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let {\r\n    loading,\r\n    setLoading,\r\n    branchForSearch,\r\n    getIngredientItem,\r\n    ingredientItemForSearch,\r\n    ingredientItemStock,\r\n    getWorkPeriod,\r\n    dataPaginating,\r\n  } = useContext(RestaurantContext);\r\n  let { getSupplier, supplierForSearch } = useContext(UserContext);\r\n  let { workPeriodWeb, getFoodWeb } = useContext(FoodContext);\r\n  // States hook here\r\n  //new item\r\n  let [newItem, setNewItem] = useState({\r\n    branch: null,\r\n    supplier: null,\r\n    invoice: \"\",\r\n    description: \"\",\r\n    paymentType: \"\",\r\n    items: null,\r\n    paid: null,\r\n    total: null,\r\n    due: null,\r\n  });\r\n\r\n  //datepicker\r\n  const [purchaseDate, setPurchaseDate] = useState(null);\r\n\r\n  //qty and rate\r\n  let [qtyOfItem, setQtyOfItem] = useState(null);\r\n  let [rateOfItem, setRateOfItem] = useState(null);\r\n\r\n  //useEffect == componentDidMount()\r\n  useEffect(() => {\r\n    getFoodWeb();\r\n    getSupplier();\r\n    getIngredientItem();\r\n  }, []);\r\n\r\n  //on change input field\r\n  const handleChange = (e) => {\r\n    setNewItem({ ...newItem, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //set items hook\r\n  const handleSetItems = (item) => {\r\n    setNewItem({\r\n      ...newItem,\r\n      items: item,\r\n    });\r\n  };\r\n\r\n  //stock\r\n  const handleGetStock = (id) => {\r\n    if (newItem.branch === null) {\r\n      return 0;\r\n    }\r\n    let stock = ingredientItemStock.find((item) => {\r\n      return (\r\n        item.ingredient_id === parseInt(id) &&\r\n        item.branch_id === newItem.branch.id\r\n      );\r\n    });\r\n    if (stock === undefined) {\r\n      return 0;\r\n    }\r\n    return stock.qty;\r\n  };\r\n  //subtotal\r\n  const handleGetSubTotal = (slug) => {\r\n    let qty = 0;\r\n    let rate = 0;\r\n    if (qtyOfItem !== null && qtyOfItem[slug]) {\r\n      qty = qtyOfItem[slug];\r\n    }\r\n    if (rateOfItem !== null && rateOfItem[slug]) {\r\n      rate = rateOfItem[slug];\r\n    }\r\n    return rate * qty;\r\n  };\r\n\r\n  //total\r\n  const handleGetTotal = () => {\r\n    let total = 0;\r\n    if (newItem.items !== null) {\r\n      newItem.items.map((item) => {\r\n        if (\r\n          qtyOfItem &&\r\n          rateOfItem &&\r\n          qtyOfItem[item.slug] &&\r\n          rateOfItem[item.slug]\r\n        ) {\r\n          total = total + qtyOfItem[item.slug] * rateOfItem[item.slug];\r\n        }\r\n      });\r\n    }\r\n    return total;\r\n  };\r\n\r\n  //set each item qty\r\n  const handleItemQty = (e) => {\r\n    setQtyOfItem({\r\n      ...qtyOfItem,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //set each item qty\r\n  const handleItemRate = (e) => {\r\n    setRateOfItem({\r\n      ...rateOfItem,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //handle Set branch hook\r\n  const handleSetBranch = (branch) => {\r\n    let theWorkPeriod =\r\n      workPeriodWeb &&\r\n      workPeriodWeb.find((thisItem) => {\r\n        return parseInt(thisItem.branch_id) === parseInt(branch.id);\r\n      });\r\n    if (theWorkPeriod !== undefined) {\r\n      setNewItem({ ...newItem, branch });\r\n    } else {\r\n      setNewItem({ ...newItem, branch: null });\r\n    }\r\n  };\r\n\r\n  //handle Set supplier hook\r\n  const handleSetSupplier = (supplier) => {\r\n    setNewItem({ ...newItem, supplier });\r\n  };\r\n\r\n  //post req of food item add\r\n  const ingredientItemAxios = () => {\r\n    setLoading(true);\r\n    let date =\r\n      new Date(purchaseDate).getFullYear() +\r\n      \"-\" +\r\n      (new Date(purchaseDate).getMonth() + 1) +\r\n      \"-\" +\r\n      new Date(purchaseDate).getDate();\r\n    let formData = new FormData();\r\n    formData.append(\"branch_id\", newItem.branch.id);\r\n    formData.append(\"supplier_id\", newItem.supplier.id);\r\n    formData.append(\"invoice_number\", newItem.invoice);\r\n    formData.append(\"purchase_date\", date);\r\n    formData.append(\"desc\", newItem.description);\r\n    formData.append(\"payment_type\", newItem.paymentType);\r\n    formData.append(\"paid_amount\", newItem.paid);\r\n    formData.append(\"total_bill\", handleGetTotal());\r\n\r\n    //converting items and prices to array\r\n    let slugArray = [];\r\n    newItem.items.map((newIngredientItem) => {\r\n      slugArray.push(newIngredientItem.slug);\r\n    });\r\n    slugArray.map((slugItem) => {\r\n      formData.append(\"slugOfIngredients[]\", slugItem);\r\n      if (qtyOfItem[slugItem]) {\r\n        formData.append(\"qtys[]\", qtyOfItem[slugItem]);\r\n      }\r\n      if (rateOfItem[slugItem]) {\r\n        formData.append(\"rates[]\", rateOfItem[slugItem]);\r\n      }\r\n    });\r\n\r\n    const url = BASE_URL + \"/settings/new-ingredient_purchase\";\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        getIngredientItem();\r\n        setNewItem({\r\n          branch: null,\r\n          supplier: null,\r\n          invoice: \"\",\r\n          description: \"\",\r\n          paymentType: \"\",\r\n          items: null,\r\n          paid: null,\r\n          total: null,\r\n          due: null,\r\n        });\r\n        setQtyOfItem(null);\r\n        setRateOfItem(null);\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Purchase has been added\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again later\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //send to server\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      newItem.branch !== null &&\r\n      newItem.supplier !== null &&\r\n      newItem.items !== null &&\r\n      newItem.items.length > 0 &&\r\n      newItem.purchaseDate !== null\r\n    ) {\r\n      ingredientItemAxios();\r\n    } else {\r\n      toast.error(`${_t(t(\"Please fill all the required fields\"))}`, {\r\n        position: \"bottom-center\",\r\n        autoClose: 10000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        className: \"text-center toast-notification\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Add Purchase\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div\r\n                  className=\"fk-scroll--pos-menu table-bottom-info-hide\"\r\n                  data-simplebar\r\n                >\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* next page data spin loading */}\r\n                    <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                    {/* spin loading ends */}\r\n\r\n                    {/* Loading effect */}\r\n                    {loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"smtp-form\">\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {_t(t(\"Add new purchase\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\"></div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Form starts here */}\r\n                        <form\r\n                          className=\"row card p-2 mx-3 mb-5 sm-text\"\r\n                          onSubmit={handleSubmit}\r\n                        >\r\n                          <div className=\"col-12\">\r\n                            {branchForSearch && (\r\n                              <div className=\"form-group mt-2\">\r\n                                <div className=\"mb-2\">\r\n                                  <label\r\n                                    htmlFor=\"branch\"\r\n                                    className=\"control-label\"\r\n                                  >\r\n                                    {_t(t(\"Branch\"))}\r\n                                    <span className=\"text-danger\">*</span>\r\n                                    {newItem.branch === null && (\r\n                                      <small className=\"text-secondary\">\r\n                                        {\" (\"}\r\n                                        {_t(\r\n                                          t(\r\n                                            \"please check if workperiod of the selected branch is started\"\r\n                                          )\r\n                                        )}\r\n                                        )\r\n                                      </small>\r\n                                    )}\r\n                                  </label>\r\n                                </div>\r\n                                <Select\r\n                                  options={branchForSearch}\r\n                                  components={makeAnimated()}\r\n                                  getOptionLabel={(option) => option.name}\r\n                                  getOptionValue={(option) => option.name}\r\n                                  classNamePrefix=\"select\"\r\n                                  onChange={handleSetBranch}\r\n                                  maxMenuHeight=\"200px\"\r\n                                  placeholder={\r\n                                    _t(t(\"Please select a branch\")) + \"..\"\r\n                                  }\r\n                                />\r\n                              </div>\r\n                            )}\r\n\r\n                            {supplierForSearch && (\r\n                              <div className=\"form-group mt-3\">\r\n                                <div className=\"mb-2\">\r\n                                  <label\r\n                                    htmlFor=\"branch\"\r\n                                    className=\"control-label\"\r\n                                  >\r\n                                    {_t(t(\"Supplier\"))}\r\n                                    <span className=\"text-danger\">*</span>\r\n                                  </label>\r\n                                </div>\r\n                                <Select\r\n                                  options={supplierForSearch}\r\n                                  components={makeAnimated()}\r\n                                  getOptionLabel={(option) => option.name}\r\n                                  getOptionValue={(option) => option.name}\r\n                                  classNamePrefix=\"select\"\r\n                                  onChange={handleSetSupplier}\r\n                                  maxMenuHeight=\"200px\"\r\n                                  placeholder={\r\n                                    _t(t(\"Please select a supplier\")) + \"..\"\r\n                                  }\r\n                                />\r\n                              </div>\r\n                            )}\r\n                            <div className=\"row\">\r\n                              <div className=\"form-group col-8 mt-3\">\r\n                                <div className=\"mb-2\">\r\n                                  <label\r\n                                    htmlFor=\"invoice\"\r\n                                    className=\"control-label\"\r\n                                  >\r\n                                    {_t(t(\"Invoice\"))}\r\n                                    <span className=\"text-danger\">*</span>\r\n                                  </label>\r\n                                </div>\r\n                                <div className=\"mb-2\">\r\n                                  <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"invoice\"\r\n                                    name=\"invoice\"\r\n                                    onChange={handleChange}\r\n                                    value={newItem.invoice}\r\n                                    placeholder=\"e.g. 123\"\r\n                                    required\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"form-group col-4 text-right mt-3\">\r\n                                <div className=\"mb-2 ml-4 text-left\">\r\n                                  <label\r\n                                    htmlFor=\"purchaseDate\"\r\n                                    className=\"control-label\"\r\n                                  >\r\n                                    {_t(t(\"Purchase Date\"))}\r\n                                    <span className=\"text-danger\">*</span>\r\n                                  </label>\r\n                                </div>\r\n                                <div className=\"mb-2\">\r\n                                  <DatePicker\r\n                                    selected={purchaseDate}\r\n                                    onChange={(date) => setPurchaseDate(date)}\r\n                                    peekNextMonth\r\n                                    showMonthDropdown\r\n                                    showYearDropdown\r\n                                    dropdownMode=\"select\"\r\n                                    className=\"form-control\"\r\n                                    placeholderText={_t(t(\"Purchase date\"))}\r\n                                    shouldCloseOnSelect={false}\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mt-3\">\r\n                              <div className=\"mb-2\">\r\n                                <label\r\n                                  htmlFor=\"description\"\r\n                                  className=\"control-label\"\r\n                                >\r\n                                  {_t(t(\"Description\"))}\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"mb-2\">\r\n                                <textarea\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  id=\"description\"\r\n                                  name=\"description\"\r\n                                  onChange={handleChange}\r\n                                  value={newItem.description}\r\n                                  placeholder=\"Short description\"\r\n                                />\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group mt-3\">\r\n                              <div className=\"mb-2\">\r\n                                <label\r\n                                  htmlFor=\"paymentType\"\r\n                                  className=\"control-label\"\r\n                                >\r\n                                  {_t(t(\"Payment Type\"))}\r\n                                  <span className=\"text-danger\">*</span>\r\n                                </label>\r\n                              </div>\r\n                              <div className=\"mb-2\">\r\n                                <input\r\n                                  type=\"text\"\r\n                                  className=\"form-control\"\r\n                                  id=\"paymentType\"\r\n                                  name=\"paymentType\"\r\n                                  onChange={handleChange}\r\n                                  value={newItem.paymentType}\r\n                                  placeholder=\"e.g. Cash, Bank payment..\"\r\n                                  required\r\n                                />\r\n                              </div>\r\n                            </div>\r\n\r\n                            {ingredientItemForSearch && (\r\n                              <div className=\"form-group mt-3\">\r\n                                <div className=\"mb-2\">\r\n                                  <label\r\n                                    htmlFor=\"branch\"\r\n                                    className=\"control-label\"\r\n                                  >\r\n                                    {_t(t(\"Ingredient Items\"))}\r\n                                    <span className=\"text-danger\">*</span>\r\n                                  </label>\r\n                                </div>\r\n                                <Select\r\n                                  options={ingredientItemForSearch}\r\n                                  components={makeAnimated()}\r\n                                  getOptionLabel={(option) => option.name}\r\n                                  getOptionValue={(option) => option.name}\r\n                                  classNamePrefix=\"select\"\r\n                                  onChange={handleSetItems}\r\n                                  maxMenuHeight=\"200px\"\r\n                                  isMulti\r\n                                  isDisabled={newItem.branch === null}\r\n                                  placeholder={\r\n                                    _t(t(\"Please select items\")) + \"..\"\r\n                                  }\r\n                                />\r\n                              </div>\r\n                            )}\r\n\r\n                            {newItem.items !== null && [\r\n                              newItem.items.length > 0 && (\r\n                                <div className=\"table-responsive mt-3\">\r\n                                  <table className=\"table table-bordered table-hover\">\r\n                                    <thead className=\"align-middle\">\r\n                                      <tr>\r\n                                        <th\r\n                                          scope=\"col\"\r\n                                          className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                        >\r\n                                          {_t(t(\"Name\"))}\r\n                                        </th>\r\n                                        <th\r\n                                          scope=\"col\"\r\n                                          className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                        >\r\n                                          {_t(t(\"stock\"))}\r\n                                        </th>\r\n                                        <th\r\n                                          scope=\"col\"\r\n                                          className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                        >\r\n                                          {_t(t(\"Qty\"))}\r\n                                        </th>\r\n                                        <th\r\n                                          scope=\"col\"\r\n                                          className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                        >\r\n                                          {_t(t(\"Rate\"))}\r\n                                        </th>\r\n\r\n                                        <th\r\n                                          scope=\"col\"\r\n                                          className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                        >\r\n                                          {_t(t(\"Total\"))}\r\n                                        </th>\r\n                                      </tr>\r\n                                    </thead>\r\n\r\n                                    <tbody className=\"align-middle\">\r\n                                      {newItem.items.map(\r\n                                        (ingredientItem, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {ingredientItem.name}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {handleGetStock(\r\n                                                  ingredientItem.id\r\n                                                )}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <input\r\n                                                  type=\"number\"\r\n                                                  step=\"0.01\"\r\n                                                  min=\"0\"\r\n                                                  className=\"form-control text-center\"\r\n                                                  id={ingredientItem.slug}\r\n                                                  name={ingredientItem.slug}\r\n                                                  onChange={handleItemQty}\r\n                                                  placeholder=\"Qty\"\r\n                                                  required\r\n                                                  disabled={\r\n                                                    newItem.branch === null\r\n                                                  }\r\n                                                />\r\n                                              </td>\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <input\r\n                                                  type=\"number\"\r\n                                                  step=\"0.01\"\r\n                                                  min=\"0\"\r\n                                                  className=\"form-control text-center\"\r\n                                                  id={ingredientItem.slug}\r\n                                                  name={ingredientItem.slug}\r\n                                                  onChange={handleItemRate}\r\n                                                  placeholder=\"Price in usd\"\r\n                                                  required\r\n                                                  disabled={\r\n                                                    newItem.branch === null\r\n                                                  }\r\n                                                />\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {currencySymbolLeft()}\r\n                                                {formatPrice(\r\n                                                  handleGetSubTotal(\r\n                                                    ingredientItem.slug\r\n                                                  )\r\n                                                )}\r\n                                                {currencySymbolRight()}\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        }\r\n                                      )}\r\n                                    </tbody>\r\n                                    <tfoot className=\"align-middle\">\r\n                                      <tr>\r\n                                        <th\r\n                                          scope=\"col\"\r\n                                          colSpan=\"3\"\r\n                                          className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                        ></th>\r\n\r\n                                        <th\r\n                                          scope=\"col\"\r\n                                          className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                        >\r\n                                          {_t(t(\"Total Bill\"))}\r\n                                        </th>\r\n\r\n                                        <th\r\n                                          scope=\"col\"\r\n                                          className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                        >\r\n                                          {currencySymbolLeft()}\r\n                                          {formatPrice(handleGetTotal())}\r\n                                          {currencySymbolRight()}\r\n                                        </th>\r\n                                      </tr>\r\n                                      <tr>\r\n                                        <th\r\n                                          scope=\"col\"\r\n                                          colSpan=\"3\"\r\n                                          className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                        ></th>\r\n                                        <th\r\n                                          scope=\"col\"\r\n                                          className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                        >\r\n                                          {_t(t(\"Paid\"))}\r\n                                        </th>\r\n\r\n                                        <th\r\n                                          scope=\"col\"\r\n                                          className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                        >\r\n                                          <input\r\n                                            type=\"number\"\r\n                                            step=\"0.01\"\r\n                                            min=\"0\"\r\n                                            className=\"form-control p-0 text-center\"\r\n                                            name=\"paid\"\r\n                                            value={newItem.paid}\r\n                                            onChange={handleChange}\r\n                                            placeholder=\"In usd\"\r\n                                            required\r\n                                          />\r\n                                        </th>\r\n                                      </tr>\r\n                                      <tr>\r\n                                        <th\r\n                                          scope=\"col\"\r\n                                          colSpan=\"3\"\r\n                                          className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                        ></th>\r\n                                        <th\r\n                                          scope=\"col\"\r\n                                          className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                        >\r\n                                          {_t(t(\"Due\"))}\r\n                                        </th>\r\n\r\n                                        <th\r\n                                          scope=\"col\"\r\n                                          className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                        >\r\n                                          {currencySymbolLeft()}\r\n                                          {formatPrice(\r\n                                            handleGetTotal() - newItem.paid\r\n                                          )}\r\n                                          {currencySymbolRight()}\r\n                                        </th>\r\n                                      </tr>\r\n                                    </tfoot>\r\n                                  </table>\r\n                                </div>\r\n                              ),\r\n                            ]}\r\n\r\n                            <div className=\"form-group mt-4 pb-2\">\r\n                              <div className=\"col-lg-12\">\r\n                                <button\r\n                                  className=\"btn btn-primary px-5\"\r\n                                  type=\"submit\"\r\n                                  disabled={newItem.branch === null}\r\n                                >\r\n                                  {_t(t(\"Save\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IngredientPurchase;\r\n"]},"metadata":{},"sourceType":"module"}