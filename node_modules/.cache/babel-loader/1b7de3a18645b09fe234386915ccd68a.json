{"ast":null,"code":"var _jsxFileName = \"/Users/raza/Downloads/khadyo_source_code/client/src/resources/restaurant/auth/workPeriod/WorkPeriod.js\";\nimport React, { useEffect, useContext, useState } from \"react\"; //axios and base url\n\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../../../BaseUrl\"; //functions\n\nimport { _t, getCookie, pageLoading, paginationLoading, pagination, showingData, searchedShowingData } from \"../../../../functions/Functions\";\nimport { useTranslation } from \"react-i18next\"; //3rd party packages\n\nimport { Helmet } from \"react-helmet\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Moment from \"react-moment\"; //importing context consumer here\n\nimport { UserContext } from \"../../../../contexts/User\";\nimport { SettingsContext } from \"../../../../contexts/Settings\";\nimport { RestaurantContext } from \"../../../../contexts/Restaurant\";\nimport { NavLink } from \"react-router-dom\";\n\nconst WorkPeriod = () => {\n  var weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  var month = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]; //getting context values here\n\n  const {\n    //common\n    loading,\n    setLoading,\n    dataPaginating,\n    showManageStock\n  } = useContext(SettingsContext);\n  const {\n    authUserInfo\n  } = useContext(UserContext);\n  const {\n    //branch\n    branchForSearch,\n    //work period\n    getWorkPeriod,\n    workPeriodList,\n    setWorkPeriodList,\n    setPaginatedWorkPeriod,\n    workPeriodForSearch,\n    setWorkPeriodListForSearch\n  } = useContext(RestaurantContext);\n  const {\n    t\n  } = useTranslation(); //new unit\n\n  let [newWorkPeriod, setNewWorkPeriod] = useState({\n    user_type: null,\n    branch_id: null,\n    uploading: false\n  }); //search result\n\n  let [searchedWorkPeriod, setSearchedWorkPeriod] = useState({\n    list: null,\n    searched: false\n  }); //useEffect == componentDidMount\n\n  useEffect(() => {\n    authUserInfo.details && setNewWorkPeriod({\n      branch_id: authUserInfo.details.branch_id ? authUserInfo.details.branch_id : null,\n      user_type: authUserInfo.details.user_type\n    });\n  }, []); //set branch id\n\n  const handleSetBranchId = branch => {\n    setNewWorkPeriod({ ...newWorkPeriod,\n      branch_id: branch.id\n    });\n  }; //search work periods here\n\n\n  const handleSearch = e => {\n    let searchInput = e.target.value.toLowerCase();\n\n    if (searchInput.length === 0) {\n      setSearchedWorkPeriod({ ...searchedWorkPeriod,\n        searched: false\n      });\n    } else {\n      let searchedList = workPeriodForSearch.filter(item => {\n        let lowerCaseItemBranchName = item.branch_name.toLowerCase();\n        let lowerCaseItemUserName = item.started_by.toLowerCase();\n        let lowerCaseItemDate = item.date.toLowerCase();\n        let lowerCaseItemUserName2 = item.ended_by && item.ended_by.toLowerCase();\n        return lowerCaseItemBranchName.includes(searchInput) || lowerCaseItemUserName.includes(searchInput) || lowerCaseItemDate.includes(searchInput) || lowerCaseItemUserName2 && lowerCaseItemUserName2.includes(searchInput);\n      });\n      setSearchedWorkPeriod({ ...searchedWorkPeriod,\n        list: searchedList,\n        searched: true\n      });\n    }\n  }; //Save New work period\n\n\n  const handleSaveNewWorkPeriod = e => {\n    e.preventDefault();\n\n    if (newWorkPeriod.branch_id) {\n      setNewWorkPeriod({ ...newWorkPeriod,\n        uploading: true\n      });\n      const url = BASE_URL + `/settings/new-work-period`;\n      let date = weekday[new Date().getDay()] + \", \" + new Date().getDate() + \" \" + month[new Date().getMonth()] + \", \" + new Date().getFullYear();\n      let time = new Date().getTime();\n      let formData = {\n        date: date,\n        branch_id: newWorkPeriod.branch_id,\n        started_at: time\n      };\n      return axios.post(url, formData, {\n        headers: {\n          Authorization: `Bearer ${getCookie()}`\n        }\n      }).then(res => {\n        if (res.data === \"exist\") {\n          authUserInfo.details && setNewWorkPeriod({\n            branch_id: authUserInfo.details.branch_id ? authUserInfo.details.branch_id : null,\n            user_type: authUserInfo.details.user_type,\n            uploading: false\n          });\n          toast.error(`${_t(t(\"Please end the started work period first\"))}`, {\n            position: \"bottom-center\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            className: \"text-center toast-notification\"\n          });\n        } else {\n          authUserInfo.details && setNewWorkPeriod({\n            branch_id: authUserInfo.details.branch_id ? authUserInfo.details.branch_id : null,\n            user_type: authUserInfo.details.user_type,\n            uploading: false\n          });\n          setWorkPeriodList(res.data[0]);\n          setWorkPeriodListForSearch(res.data[1]);\n          setSearchedWorkPeriod({ ...searchedWorkPeriod,\n            list: res.data[1]\n          });\n          setLoading(false);\n          toast.success(`${_t(t(\"Work period has been started\"))}`, {\n            position: \"bottom-center\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            className: \"text-center toast-notification\"\n          });\n        }\n      }).catch(() => {\n        setLoading(false);\n        setNewWorkPeriod({ ...newWorkPeriod,\n          uploading: false\n        });\n        toast.error(`${_t(t(\"Please try again\"))}`, {\n          position: \"bottom-center\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          className: \"text-center toast-notification\"\n        });\n      });\n    } else {\n      toast.error(`${_t(t(\"Please select a branch\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }\n  }; //milisec to hour min\n\n\n  const millisToMinutesAndHours = millis => {\n    var minutes = Math.floor(millis / 60000);\n    var hours = Math.floor(minutes / 60);\n    minutes = Math.floor(minutes % 60);\n    var seconds = (millis % 60000 / 1000).toFixed(0);\n    return `${hours} ${_t(t(\"hr\"))} - ${minutes} ${_t(t(\"min\"))} - ${seconds < 10 ? \"0\" : \"\"}${seconds} ${_t(t(\"sec\"))}`;\n  }; //end confirmation modal of workPeriod\n\n\n  const handleDeleteConfirmation = id => {\n    confirmAlert({\n      customUI: ({\n        onClose\n      }) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card card-body\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }\n        }, _t(t(\"Are you sure?\"))), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }\n        }, _t(t(\"You want to end now?\"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex justify-content-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => {\n            handleEndWorkPeriod(id);\n            onClose();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }\n        }, _t(t(\"Yes, end work period!\"))), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-success ml-2 px-3\",\n          onClick: onClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }\n        }, _t(t(\"No\")))));\n      }\n    });\n  }; //end here\n\n\n  const handleEndWorkPeriod = id => {\n    setNewWorkPeriod({ ...newWorkPeriod,\n      uploading: true\n    });\n    const url = BASE_URL + `/settings/update-work-period`;\n    let time = new Date().getTime();\n    let formData = {\n      id: id,\n      ended_at: time\n    };\n    return axios.post(url, formData, {\n      headers: {\n        Authorization: `Bearer ${getCookie()}`\n      }\n    }).then(res => {\n      if (res.data !== \"orderExist\" && res.data !== \"addClosing\") {\n        authUserInfo.details && setNewWorkPeriod({\n          branch_id: authUserInfo.details.branch_id ? authUserInfo.details.branch_id : null,\n          user_type: authUserInfo.details.user_type,\n          uploading: false\n        });\n        setWorkPeriodList(res.data[0]);\n        setWorkPeriodListForSearch(res.data[1]);\n        setSearchedWorkPeriod({ ...searchedWorkPeriod,\n          list: res.data[1]\n        });\n        setLoading(false);\n        toast.success(`${_t(t(\"Work period has been ended\"))}`, {\n          position: \"bottom-center\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          className: \"text-center toast-notification\"\n        });\n      } else {\n        if (res.data === \"addClosing\") {\n          toast.error(`${_t(t(\"Add closing stock of ingredients\"))}`, {\n            position: \"bottom-center\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            className: \"text-center toast-notification\"\n          });\n        } else {\n          toast.error(`${_t(t(\"All submitted orders need to be settled to end workperiod\"))}`, {\n            position: \"bottom-center\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            className: \"text-center toast-notification\"\n          });\n        }\n\n        setLoading(false);\n        setNewWorkPeriod({ ...newWorkPeriod,\n          uploading: false\n        });\n      }\n    }).catch(() => {\n      setLoading(false);\n      setNewWorkPeriod({ ...newWorkPeriod,\n        uploading: false\n      });\n      toast.error(`${_t(t(\"Please try again\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 9\n    }\n  }, _t(t(\"Work Periods\")))), /*#__PURE__*/React.createElement(\"main\", {\n    id: \"main\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row t-mt-10 gx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 t-mb-30 mb-lg-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 13\n    }\n  }, newWorkPeriod.uploading === true || loading === true ? pageLoading() : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-bg-white \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${dataPaginating && \"loading\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 align-items-center t-pt-15 t-pb-15 t-pl-15 t-pr-15 t-shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 t-mb-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list fk-breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"fk-breadcrumb__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"t-link fk-breadcrumb__link text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 27\n    }\n  }, !searchedWorkPeriod.searched ? _t(t(\"Work periods\")) : _t(t(\"Search Result\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-lg-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-search\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control border-0 form-control--light-1 rounded-0\",\n    placeholder: _t(t(\"Search by branch, date, user\")) + \"..\",\n    onChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 27\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-lg-7 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 23\n    }\n  }, authUserInfo.details !== null && authUserInfo.details.user_type !== \"staff\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-7 t-mb-15 mb-md-0 mt-3 mt-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: branchForSearch && branchForSearch,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    classNamePrefix: \"select\",\n    className: \"xsm-text\",\n    onChange: handleSetBranchId,\n    maxMenuHeight: \"200px\",\n    placeholder: _t(t(\"Please select a branch\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list fk-sort align-items-center justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"fk-sort__list mb-0 flex-grow-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSaveNewWorkPeriod,\n    className: \"w-100 btn btn-secondary sm-text text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 35\n    }\n  }, _t(t(\"start work period\"))))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-5 ml-auto mt-2 mt-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list fk-sort align-items-center justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"fk-sort__list mb-0 flex-grow-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSaveNewWorkPeriod,\n    className: \"w-100 btn btn-secondary sm-text text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 33\n    }\n  }, _t(t(\"start work period\"))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-scroll--order-history\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-pl-15 t-pr-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-bordered table-hover min-table-height mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 31\n    }\n  }, _t(t(\"S/L\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 31\n    }\n  }, _t(t(\"Branch\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 31\n    }\n  }, _t(t(\"Started by\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 31\n    }\n  }, _t(t(\"Date\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 31\n    }\n  }, _t(t(\"Started at\"))), showManageStock ? /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 50\n    }\n  }, _t(t(\"Stock\"))) : null, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 31\n    }\n  }, _t(t(\"Ended at\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 31\n    }\n  }, _t(t(\"Ended by\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 31\n    }\n  }, _t(t(\"Total time\"))))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 27\n    }\n  }, !searchedWorkPeriod.searched ? [workPeriodList && [workPeriodList.data.length === 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"row\",\n    colSpan: \"8\",\n    className: \"xsm-text align-middle text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 39\n    }\n  }, _t(t(\"No data available\")))) : workPeriodList.data.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"align-middle\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 43\n      }\n    }, index + 1 + (workPeriodList.current_page - 1) * workPeriodList.per_page), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center text-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 43\n      }\n    }, item.branch_name), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 43\n      }\n    }, item.started_by), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 43\n      }\n    }, item.date), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center text-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      format: \"LT\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 45\n      }\n    }, new Date(item.created_at))), showManageStock ? /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 62\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: `btn xxsm-text ${item.ended_at === null ? \"btn-secondary\" : \"btn-success\"} btn-sm p-1`,\n      to: `/dashboard/closing-stock/` + item.started_at,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 45\n      }\n    }, _t(t(\"Closing Stock\")))) : null, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 43\n      }\n    }, item.ended_at ? /*#__PURE__*/React.createElement(Moment, {\n      format: \"LT\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 47\n      }\n    }, new Date(item.updated_at)) : \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 43\n      }\n    }, item.ended_at ? item.ended_by : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm py-0 px-4\",\n      onClick: () => {\n        handleDeleteConfirmation(item.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 47\n      }\n    }, _t(t(\"End\")))), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 43\n      }\n    }, item.ended_at ? millisToMinutesAndHours(parseInt(item.ended_at - item.started_at)) : \"-\"));\n  })]] : [\n  /* searched data, logic === haveData*/\n  searchedWorkPeriod && [searchedWorkPeriod.list.length === 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"row\",\n    colSpan: \"9\",\n    className: \"xsm-text align-middle text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 39\n    }\n  }, _t(t(\"No data available\")))) : searchedWorkPeriod.list.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"align-middle\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 45\n      }\n    }, index + 1 + (workPeriodList.current_page - 1) * workPeriodList.per_page), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center text-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 45\n      }\n    }, item.branch_name), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 45\n      }\n    }, item.started_by), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 45\n      }\n    }, item.date), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      format: \"LT\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 47\n      }\n    }, new Date(item.created_at))), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 45\n      }\n    }, item.ended_at ? /*#__PURE__*/React.createElement(Moment, {\n      format: \"LT\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 49\n      }\n    }, new Date(item.updated_at)) : \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 45\n      }\n    }, item.ended_at ? item.ended_by : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm py-0 px-4\",\n      onClick: () => {\n        handleDeleteConfirmation(item.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 49\n      }\n    }, _t(t(\"End\")))), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 45\n      }\n    }, item.ended_at ? millisToMinutesAndHours(parseInt(item.ended_at - item.started_at)) : \"-\"));\n  })]])))))), newWorkPeriod.uploading === true || loading === true ? paginationLoading() : [// logic === !searched\n  !searchedWorkPeriod.searched ? /*#__PURE__*/React.createElement(\"div\", {\n    key: \"fragment4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-bg-white mt-1 t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center t-pl-15 t-pr-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-7 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 27\n    }\n  }, pagination(workPeriodList, setPaginatedWorkPeriod)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list d-flex justify-content-md-end align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"t-list__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-inline-block sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 33\n    }\n  }, showingData(workPeriodList)))))))) :\n  /*#__PURE__*/\n  // if searched\n  React.createElement(\"div\", {\n    className: \"t-bg-white mt-1 t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center t-pl-15 t-pr-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 795,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-7 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"t-list__item no-pagination-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-sm\",\n    onClick: () => setSearchedWorkPeriod({ ...searchedWorkPeriod,\n      searched: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 31\n    }\n  }, _t(t(\"Clear Search\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list d-flex justify-content-md-end align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"t-list__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-inline-block sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 31\n    }\n  }, searchedShowingData(searchedWorkPeriod, workPeriodForSearch)))))))])))));\n};\n\nexport default WorkPeriod;","map":{"version":3,"sources":["/Users/raza/Downloads/khadyo_source_code/client/src/resources/restaurant/auth/workPeriod/WorkPeriod.js"],"names":["React","useEffect","useContext","useState","axios","BASE_URL","_t","getCookie","pageLoading","paginationLoading","pagination","showingData","searchedShowingData","useTranslation","Helmet","Select","makeAnimated","confirmAlert","toast","Moment","UserContext","SettingsContext","RestaurantContext","NavLink","WorkPeriod","weekday","month","loading","setLoading","dataPaginating","showManageStock","authUserInfo","branchForSearch","getWorkPeriod","workPeriodList","setWorkPeriodList","setPaginatedWorkPeriod","workPeriodForSearch","setWorkPeriodListForSearch","t","newWorkPeriod","setNewWorkPeriod","user_type","branch_id","uploading","searchedWorkPeriod","setSearchedWorkPeriod","list","searched","details","handleSetBranchId","branch","id","handleSearch","e","searchInput","target","value","toLowerCase","length","searchedList","filter","item","lowerCaseItemBranchName","branch_name","lowerCaseItemUserName","started_by","lowerCaseItemDate","date","lowerCaseItemUserName2","ended_by","includes","handleSaveNewWorkPeriod","preventDefault","url","Date","getDay","getDate","getMonth","getFullYear","time","getTime","formData","started_at","post","headers","Authorization","then","res","data","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","className","success","catch","millisToMinutesAndHours","millis","minutes","Math","floor","hours","seconds","toFixed","handleDeleteConfirmation","customUI","onClose","handleEndWorkPeriod","ended_at","option","name","map","index","current_page","per_page","created_at","updated_at","parseInt"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  pageLoading,\r\n  paginationLoading,\r\n  pagination,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Moment from \"react-moment\";\r\n\r\n//importing context consumer here\r\nimport { UserContext } from \"../../../../contexts/User\";\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\nimport { RestaurantContext } from \"../../../../contexts/Restaurant\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst WorkPeriod = () => {\r\n  var weekday = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  var month = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  //getting context values here\r\n  const {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n    dataPaginating,\r\n    showManageStock,\r\n  } = useContext(SettingsContext);\r\n\r\n  const { authUserInfo } = useContext(UserContext);\r\n\r\n  const {\r\n    //branch\r\n    branchForSearch,\r\n\r\n    //work period\r\n    getWorkPeriod,\r\n    workPeriodList,\r\n    setWorkPeriodList,\r\n    setPaginatedWorkPeriod,\r\n    workPeriodForSearch,\r\n    setWorkPeriodListForSearch,\r\n  } = useContext(RestaurantContext);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  //new unit\r\n  let [newWorkPeriod, setNewWorkPeriod] = useState({\r\n    user_type: null,\r\n    branch_id: null,\r\n    uploading: false,\r\n  });\r\n\r\n  //search result\r\n  let [searchedWorkPeriod, setSearchedWorkPeriod] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {\r\n    authUserInfo.details &&\r\n      setNewWorkPeriod({\r\n        branch_id: authUserInfo.details.branch_id\r\n          ? authUserInfo.details.branch_id\r\n          : null,\r\n        user_type: authUserInfo.details.user_type,\r\n      });\r\n  }, []);\r\n\r\n  //set branch id\r\n  const handleSetBranchId = (branch) => {\r\n    setNewWorkPeriod({\r\n      ...newWorkPeriod,\r\n      branch_id: branch.id,\r\n    });\r\n  };\r\n\r\n  //search work periods here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedWorkPeriod({ ...searchedWorkPeriod, searched: false });\r\n    } else {\r\n      let searchedList = workPeriodForSearch.filter((item) => {\r\n        let lowerCaseItemBranchName = item.branch_name.toLowerCase();\r\n        let lowerCaseItemUserName = item.started_by.toLowerCase();\r\n        let lowerCaseItemDate = item.date.toLowerCase();\r\n        let lowerCaseItemUserName2 =\r\n          item.ended_by && item.ended_by.toLowerCase();\r\n        return (\r\n          lowerCaseItemBranchName.includes(searchInput) ||\r\n          lowerCaseItemUserName.includes(searchInput) ||\r\n          lowerCaseItemDate.includes(searchInput) ||\r\n          (lowerCaseItemUserName2 &&\r\n            lowerCaseItemUserName2.includes(searchInput))\r\n        );\r\n      });\r\n      setSearchedWorkPeriod({\r\n        ...searchedWorkPeriod,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //Save New work period\r\n  const handleSaveNewWorkPeriod = (e) => {\r\n    e.preventDefault();\r\n    if (newWorkPeriod.branch_id) {\r\n      setNewWorkPeriod({\r\n        ...newWorkPeriod,\r\n        uploading: true,\r\n      });\r\n      const url = BASE_URL + `/settings/new-work-period`;\r\n      let date =\r\n        weekday[new Date().getDay()] +\r\n        \", \" +\r\n        new Date().getDate() +\r\n        \" \" +\r\n        month[new Date().getMonth()] +\r\n        \", \" +\r\n        new Date().getFullYear();\r\n\r\n      let time = new Date().getTime();\r\n\r\n      let formData = {\r\n        date: date,\r\n        branch_id: newWorkPeriod.branch_id,\r\n        started_at: time,\r\n      };\r\n      return axios\r\n        .post(url, formData, {\r\n          headers: { Authorization: `Bearer ${getCookie()}` },\r\n        })\r\n        .then((res) => {\r\n          if (res.data === \"exist\") {\r\n            authUserInfo.details &&\r\n              setNewWorkPeriod({\r\n                branch_id: authUserInfo.details.branch_id\r\n                  ? authUserInfo.details.branch_id\r\n                  : null,\r\n                user_type: authUserInfo.details.user_type,\r\n\r\n                uploading: false,\r\n              });\r\n            toast.error(\r\n              `${_t(t(\"Please end the started work period first\"))}`,\r\n              {\r\n                position: \"bottom-center\",\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n              }\r\n            );\r\n          } else {\r\n            authUserInfo.details &&\r\n              setNewWorkPeriod({\r\n                branch_id: authUserInfo.details.branch_id\r\n                  ? authUserInfo.details.branch_id\r\n                  : null,\r\n                user_type: authUserInfo.details.user_type,\r\n\r\n                uploading: false,\r\n              });\r\n            setWorkPeriodList(res.data[0]);\r\n            setWorkPeriodListForSearch(res.data[1]);\r\n            setSearchedWorkPeriod({\r\n              ...searchedWorkPeriod,\r\n              list: res.data[1],\r\n            });\r\n            setLoading(false);\r\n            toast.success(`${_t(t(\"Work period has been started\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setLoading(false);\r\n          setNewWorkPeriod({\r\n            ...newWorkPeriod,\r\n            uploading: false,\r\n          });\r\n          toast.error(`${_t(t(\"Please try again\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        });\r\n    } else {\r\n      toast.error(`${_t(t(\"Please select a branch\"))}`, {\r\n        position: \"bottom-center\",\r\n        autoClose: 10000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        className: \"text-center toast-notification\",\r\n      });\r\n    }\r\n  };\r\n\r\n  //milisec to hour min\r\n  const millisToMinutesAndHours = (millis) => {\r\n    var minutes = Math.floor(millis / 60000);\r\n    var hours = Math.floor(minutes / 60);\r\n    minutes = Math.floor(minutes % 60);\r\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\r\n    return `${hours} ${_t(t(\"hr\"))} - ${minutes} ${_t(t(\"min\"))} - ${seconds < 10 ? \"0\" : \"\"\r\n      }${seconds} ${_t(t(\"sec\"))}`;\r\n  };\r\n\r\n  //end confirmation modal of workPeriod\r\n  const handleDeleteConfirmation = (id) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to end now?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleEndWorkPeriod(id);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, end work period!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //end here\r\n  const handleEndWorkPeriod = (id) => {\r\n    setNewWorkPeriod({\r\n      ...newWorkPeriod,\r\n      uploading: true,\r\n    });\r\n    const url = BASE_URL + `/settings/update-work-period`;\r\n    let time = new Date().getTime();\r\n    let formData = {\r\n      id: id,\r\n      ended_at: time,\r\n    };\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        if (res.data !== \"orderExist\" && res.data !== \"addClosing\") {\r\n          authUserInfo.details &&\r\n            setNewWorkPeriod({\r\n              branch_id: authUserInfo.details.branch_id\r\n                ? authUserInfo.details.branch_id\r\n                : null,\r\n              user_type: authUserInfo.details.user_type,\r\n\r\n              uploading: false,\r\n            });\r\n          setWorkPeriodList(res.data[0]);\r\n          setWorkPeriodListForSearch(res.data[1]);\r\n          setSearchedWorkPeriod({\r\n            ...searchedWorkPeriod,\r\n            list: res.data[1],\r\n          });\r\n          setLoading(false);\r\n          toast.success(`${_t(t(\"Work period has been ended\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        } else {\r\n          if (res.data === \"addClosing\") {\r\n            toast.error(`${_t(t(\"Add closing stock of ingredients\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          } else {\r\n            toast.error(\r\n              `${_t(\r\n                t(\"All submitted orders need to be settled to end workperiod\")\r\n              )}`,\r\n              {\r\n                position: \"bottom-center\",\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n              }\r\n            );\r\n          }\r\n          setLoading(false);\r\n          setNewWorkPeriod({\r\n            ...newWorkPeriod,\r\n            uploading: false,\r\n          });\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        setNewWorkPeriod({\r\n          ...newWorkPeriod,\r\n          uploading: false,\r\n        });\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Work Periods\"))}</title>\r\n      </Helmet>\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            <div className=\"col-12 t-mb-30 mb-lg-0\">\r\n              {newWorkPeriod.uploading === true || loading === true ? (\r\n                pageLoading()\r\n              ) : (\r\n                <div className=\"t-bg-white \">\r\n                  {/* next page data spin loading */}\r\n                  <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                  {/* spin loading ends */}\r\n                  <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15 t-pl-15 t-pr-15 t-shadow\">\r\n                    <div className=\"col-12 t-mb-15\">\r\n                      <ul className=\"t-list fk-breadcrumb\">\r\n                        <li className=\"fk-breadcrumb__list\">\r\n                          <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                            {!searchedWorkPeriod.searched\r\n                              ? _t(t(\"Work periods\"))\r\n                              : _t(t(\"Search Result\"))}\r\n                          </span>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-5\">\r\n                      <div className=\"input-group\">\r\n                        <button className=\"btn btn-primary\" type=\"button\">\r\n                          <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <div className=\"form-file\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                            placeholder={\r\n                              _t(t(\"Search by branch, date, user\")) + \"..\"\r\n                            }\r\n                            onChange={handleSearch}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-lg-7 t-mb-15 mb-md-0\">\r\n                      <div className=\"row gx-2 align-items-center\">\r\n                        {authUserInfo.details !== null &&\r\n                          authUserInfo.details.user_type !== \"staff\" ? (\r\n                          <>\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0 mt-3 mt-md-0\">\r\n                              <Select\r\n                                options={branchForSearch && branchForSearch}\r\n                                components={makeAnimated()}\r\n                                getOptionLabel={(option) => option.name}\r\n                                getOptionValue={(option) => option.name}\r\n                                classNamePrefix=\"select\"\r\n                                className=\"xsm-text\"\r\n                                onChange={handleSetBranchId}\r\n                                maxMenuHeight=\"200px\"\r\n                                placeholder={\r\n                                  _t(t(\"Please select a branch\")) + \"..\"\r\n                                }\r\n                              />\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list fk-sort align-items-center justify-content-center\">\r\n                                <li className=\"fk-sort__list mb-0 flex-grow-1\">\r\n                                  <button\r\n                                    onClick={handleSaveNewWorkPeriod}\r\n                                    className=\"w-100 btn btn-secondary sm-text text-uppercase\"\r\n                                  >\r\n                                    {_t(t(\"start work period\"))}\r\n                                  </button>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </>\r\n                        ) : (\r\n                          <div className=\"col-12 col-md-5 ml-auto mt-2 mt-md-0\">\r\n                            <ul className=\"t-list fk-sort align-items-center justify-content-center\">\r\n                              <li className=\"fk-sort__list mb-0 flex-grow-1\">\r\n                                <button\r\n                                  onClick={handleSaveNewWorkPeriod}\r\n                                  className=\"w-100 btn btn-secondary sm-text text-uppercase\"\r\n                                >\r\n                                  {_t(t(\"start work period\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"fk-scroll--order-history\" data-simplebar>\r\n                    <div className=\"t-pl-15 t-pr-15\">\r\n                      <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered table-hover min-table-height mt-4\">\r\n                          <thead className=\"align-middle\">\r\n                            <tr>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"S/L\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Branch\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Started by\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Date\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Started at\"))}\r\n                              </th>\r\n                              {showManageStock ? <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Stock\"))}\r\n                              </th> : null}\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Ended at\"))}\r\n                              </th>\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Ended by\"))}\r\n                              </th>\r\n\r\n                              <th\r\n                                scope=\"col\"\r\n                                className=\"sm-text align-middle text-center border-1 border\"\r\n                              >\r\n                                {_t(t(\"Total time\"))}\r\n                              </th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody className=\"align-middle\">\r\n                            {!searchedWorkPeriod.searched\r\n                              ? [\r\n                                workPeriodList && [\r\n                                  workPeriodList.data.length === 0 ? (\r\n                                    <tr className=\"align-middle\">\r\n                                      <td\r\n                                        scope=\"row\"\r\n                                        colSpan=\"8\"\r\n                                        className=\"xsm-text align-middle text-center\"\r\n                                      >\r\n                                        {_t(t(\"No data available\"))}\r\n                                      </td>\r\n                                    </tr>\r\n                                  ) : (\r\n                                    workPeriodList.data.map((item, index) => {\r\n                                      return (\r\n                                        <tr\r\n                                          className=\"align-middle\"\r\n                                          key={index}\r\n                                        >\r\n                                          <th\r\n                                            scope=\"row\"\r\n                                            className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                          >\r\n                                            {index +\r\n                                              1 +\r\n                                              (workPeriodList.current_page -\r\n                                                1) *\r\n                                              workPeriodList.per_page}\r\n                                          </th>\r\n\r\n                                          <td className=\"xsm-text align-middle text-center text-secondary\">\r\n                                            {item.branch_name}\r\n                                          </td>\r\n\r\n                                          <td className=\"xsm-text align-middle text-center\">\r\n                                            {item.started_by}\r\n                                          </td>\r\n\r\n                                          <td className=\"xsm-text align-middle text-center\">\r\n                                            {item.date}\r\n                                          </td>\r\n\r\n                                          <td className=\"xsm-text align-middle text-center text-green\">\r\n                                            <Moment format=\"LT\">\r\n                                              {new Date(item.created_at)}\r\n                                            </Moment>\r\n                                          </td>\r\n\r\n                                          {/* show if manage stock is enable */}\r\n                                          {showManageStock ? <td className=\"xsm-text align-middle text-center\">\r\n                                            <NavLink\r\n                                              className={`btn xxsm-text ${item.ended_at === null\r\n                                                ? \"btn-secondary\"\r\n                                                : \"btn-success\"\r\n                                                } btn-sm p-1`}\r\n                                              to={\r\n                                                `/dashboard/closing-stock/` +\r\n                                                item.started_at\r\n                                              }\r\n                                            >\r\n                                              {_t(t(\"Closing Stock\"))}\r\n                                            </NavLink>\r\n                                          </td> : null}\r\n\r\n\r\n                                          <td className=\"xsm-text align-middle text-center text-primary\">\r\n                                            {item.ended_at ? (\r\n                                              <Moment format=\"LT\">\r\n                                                {new Date(item.updated_at)}\r\n                                              </Moment>\r\n                                            ) : (\r\n                                              \"-\"\r\n                                            )}\r\n                                          </td>\r\n\r\n                                          <td className=\"xsm-text align-middle text-center\">\r\n                                            {item.ended_at ? (\r\n                                              item.ended_by\r\n                                            ) : (\r\n                                              <button\r\n                                                className=\"btn btn-primary btn-sm py-0 px-4\"\r\n                                                onClick={() => {\r\n                                                  handleDeleteConfirmation(\r\n                                                    item.id\r\n                                                  );\r\n                                                }}\r\n                                              >\r\n                                                {_t(t(\"End\"))}\r\n                                              </button>\r\n                                            )}\r\n                                          </td>\r\n                                          <td className=\"xsm-text align-middle text-center\">\r\n                                            {item.ended_at\r\n                                              ? millisToMinutesAndHours(\r\n                                                parseInt(\r\n                                                  item.ended_at -\r\n                                                  item.started_at\r\n                                                )\r\n                                              )\r\n                                              : \"-\"}\r\n                                          </td>\r\n                                        </tr>\r\n                                      );\r\n                                    })\r\n                                  ),\r\n                                ],\r\n                              ]\r\n                              : [\r\n                                /* searched data, logic === haveData*/\r\n                                searchedWorkPeriod && [\r\n                                  searchedWorkPeriod.list.length === 0 ? (\r\n                                    <tr className=\"align-middle\">\r\n                                      <td\r\n                                        scope=\"row\"\r\n                                        colSpan=\"9\"\r\n                                        className=\"xsm-text align-middle text-center\"\r\n                                      >\r\n                                        {_t(t(\"No data available\"))}\r\n                                      </td>\r\n                                    </tr>\r\n                                  ) : (\r\n                                    searchedWorkPeriod.list.map(\r\n                                      (item, index) => {\r\n                                        return (\r\n                                          <tr\r\n                                            className=\"align-middle\"\r\n                                            key={index}\r\n                                          >\r\n                                            <th\r\n                                              scope=\"row\"\r\n                                              className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                            >\r\n                                              {index +\r\n                                                1 +\r\n                                                (workPeriodList.current_page -\r\n                                                  1) *\r\n                                                workPeriodList.per_page}\r\n                                            </th>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center text-secondary\">\r\n                                              {item.branch_name}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.started_by}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.date}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              <Moment format=\"LT\">\r\n                                                {new Date(item.created_at)}\r\n                                              </Moment>\r\n                                            </td>\r\n                                            {/* \r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              <NavLink\r\n                                                className={`btn xxsm-text ${item.ended_at === null\r\n                                                    ? \"btn-secondary\"\r\n                                                    : \"btn-success\"\r\n                                                  } btn-sm p-1`}\r\n                                                to={\r\n                                                  `/dashboard/closing-stock/` +\r\n                                                  item.started_at\r\n                                                }\r\n                                              >\r\n                                                {_t(t(\"Closing Stock\"))}\r\n                                              </NavLink>\r\n                                            </td> */}\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.ended_at ? (\r\n                                                <Moment format=\"LT\">\r\n                                                  {new Date(item.updated_at)}\r\n                                                </Moment>\r\n                                              ) : (\r\n                                                \"-\"\r\n                                              )}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.ended_at ? (\r\n                                                item.ended_by\r\n                                              ) : (\r\n                                                <button\r\n                                                  className=\"btn btn-primary btn-sm py-0 px-4\"\r\n                                                  onClick={() => {\r\n                                                    handleDeleteConfirmation(\r\n                                                      item.id\r\n                                                    );\r\n                                                  }}\r\n                                                >\r\n                                                  {_t(t(\"End\"))}\r\n                                                </button>\r\n                                              )}\r\n                                            </td>\r\n\r\n                                            <td className=\"xsm-text align-middle text-center\">\r\n                                              {item.ended_at\r\n                                                ? millisToMinutesAndHours(\r\n                                                  parseInt(\r\n                                                    item.ended_at -\r\n                                                    item.started_at\r\n                                                  )\r\n                                                )\r\n                                                : \"-\"}\r\n                                            </td>\r\n                                          </tr>\r\n                                        );\r\n                                      }\r\n                                    )\r\n                                  ),\r\n                                ],\r\n                              ]}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {/* pagination loading effect */}\r\n              {newWorkPeriod.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                  // logic === !searched\r\n                  !searchedWorkPeriod.searched ? (\r\n                    <div key=\"fragment4\">\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            {/* pagination function */}\r\n                            {pagination(\r\n                              workPeriodList,\r\n                              setPaginatedWorkPeriod\r\n                            )}\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {showingData(workPeriodList)}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    // if searched\r\n                    <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                      <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                        <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                          <ul className=\"t-list d-flex\">\r\n                            <li className=\"t-list__item no-pagination-style\">\r\n                              <button\r\n                                className=\"btn btn-primary btn-sm\"\r\n                                onClick={() =>\r\n                                  setSearchedWorkPeriod({\r\n                                    ...searchedWorkPeriod,\r\n                                    searched: false,\r\n                                  })\r\n                                }\r\n                              >\r\n                                {_t(t(\"Clear Search\"))}\r\n                              </button>\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                        <div className=\"col-md-5\">\r\n                          <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                            <li className=\"t-list__item\">\r\n                              <span className=\"d-inline-block sm-text\">\r\n                                {searchedShowingData(\r\n                                  searchedWorkPeriod,\r\n                                  workPeriodForSearch\r\n                                )}\r\n                              </span>\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                ]}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorkPeriod;\r\n"]},"metadata":{},"sourceType":"module"}