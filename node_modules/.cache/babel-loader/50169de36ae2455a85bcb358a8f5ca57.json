{"ast":null,"code":"var _jsxFileName = \"/Users/raza/Downloads/khadyo_source_code/client/src/resources/restaurant/auth/pos/EditSubmittedOrder.js\";\nimport React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { NavLink } from \"react-router-dom\"; //axios and base url\n\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../../../BaseUrl\"; //functions\n\nimport { _t, getCookie, currencySymbolLeft, formatPrice, currencySymbolRight, getSystemSettings } from \"../../../../functions/Functions\";\nimport { useTranslation } from \"react-i18next\"; //3rd party packages\n\nimport { Helmet } from \"react-helmet\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Moment from \"react-moment\";\nimport { useReactToPrint } from \"react-to-print\"; //importing context consumer here\n\nimport { UserContext } from \"../../../../contexts/User\";\nimport { SettingsContext } from \"../../../../contexts/Settings\";\nimport { RestaurantContext } from \"../../../../contexts/Restaurant\";\nimport { FoodContext } from \"../../../../contexts/Food\";\nimport Calculator from \"./calc/Calculator\";\n\nconst EditSubmittedOrder = () => {\n  //getting context values here\n  const {\n    //common\n    loading,\n    setLoading,\n    generalSettings,\n    showManageStock\n  } = useContext(SettingsContext);\n  const {\n    authUserInfo,\n    //customer\n    customerForSearch,\n    setCustomerForSearch,\n    //waiter\n    waiterForSearch\n  } = useContext(UserContext);\n  const {\n    //food\n    foodForSearch,\n    //food group\n    foodGroupForSearch,\n    getFoodGroup,\n    //property group\n    propertyGroupForSearch,\n    //food stock\n    foodItemStock\n  } = useContext(FoodContext);\n  const {\n    //work period\n    workPeriodForSearch,\n    setWorkPeriodListForSearch,\n    //branch\n    branchForSearch,\n    //table\n    tableForSearch,\n    //dept-tag\n    deptTagForSearch,\n    //payment-type\n    paymentTypeForSearch\n  } = useContext(RestaurantContext);\n  const {\n    t\n  } = useTranslation(); // State hooks here\n\n  const [foodItem, setFoodItem] = useState({\n    foodGroup: null,\n    items: null,\n    selectedItem: null,\n    variations: null,\n    properties: null\n  }); // const [foodItem, setFoodItem] = useState({\n  //   foodGroup: [{\n  //     id: 22,\n  //     name: \"Bread\",\n  //     slug: \"34d-1639221643-bread\",\n  //     created_at: \"2021-12-11T07:50:43.000000Z\",\n  //     updated_at: \"2021-12-11T07:50:43.000000Z\",\n  //   }],\n  //   items: [{\n  //     id: 71,\n  //     food_group_id: \"22\",\n  //     food_group: \"Bread\",\n  //     name: \"Bread 1\",\n  //     slug: \"bXe-1639221673-bread-1\",\n  //     is_special: \"0\",\n  //     image: \"http://localhost/khadyo_updated_production_saas/laravel/public/images/food_item/1639221673-burgerjpg.jpg\", has_variation: \"0\",\n  //     price: \"11\",\n  //     has_property: \"0\",\n  //   }],\n  //   selectedItem: [{\n  //     id: 71,\n  //     food_group_id: \"22\",\n  //     food_group: \"Bread\",\n  //     name: \"Bread 1\",\n  //     slug: \"bXe-1639221673-bread-1\",\n  //     is_special: \"0\",\n  //     image: \"http://localhost/khadyo_updated_production_saas/laravel/public/images/food_item/1639221673-burgerjpg.jpg\", has_variation: \"0\",\n  //     price: \"11\",\n  //     has_property: \"0\",\n  //   }],\n  //   variations: null,\n  //   properties: null,\n  // });\n  // show settle\n\n  const [showSettle, setShowSettle] = useState(false); //calculator\n\n  const [calculatorMenu, setCalculatorMenu] = useState(false); //new order\n\n  const [newOrder, setNewOrder] = useState(); //active index of order list\n\n  const [activeItemInOrder, setActiveItemInOrder] = useState(null); //checked variations\n\n  const [selectedVariation, setSelectedVariation] = useState([]); //selected groups\n\n  const [selectedPropertyGroup, setSelectedPropertyGroup] = useState([]); //checked properties\n\n  const [selectedProperties, setSelectedProperties] = useState([]); //the sub total\n\n  const [theSubTotal, setTheSubTotal] = useState(0); //total payable\n\n  const [totalPayable, setTotalPaybale] = useState(0); // paidMoney\n\n  const [paidMoney, setPaidMoney] = useState(0); //return\n\n  const [returnMoneyUsd, setReturnMoneyUsd] = useState(0); //vat\n\n  const [theVat, setTheVat] = useState(0); //deptCommission\n\n  const [deptCommission, setDeptCommission] = useState(0); //vat settings\n\n  const [newSettings, setNewSettings] = useState(null); //order details users\n\n  const [orderDetailUsers, setOrderDetailusers] = useState({\n    theCustomers: null,\n    theTables: null,\n    theWaiters: null\n  }); //order details\n\n  const [orderDetails, setOrderDetails] = useState({\n    branch: null,\n    customer: null,\n    table: null,\n    waiter: null,\n    dept_tag: null,\n    payment_type: null,\n    payment_amount: null,\n    total_guest: 1,\n    newCustomer: false,\n    newCustomerInfo: {\n      name: \"\",\n      number: \"\"\n    },\n    token: null,\n    serviceCharge: 0,\n    discount: 0\n  }); //orderFoodGroups\n\n  const [orderFoodGroups, setOrderFoodGroups] = useState(null); //online order counter\n\n  const [onlineCounter, setOnlineCounter] = useState(0); //useEffect- to get data on render\n\n  useEffect(() => {\n    if (foodGroupForSearch) {\n      let tempItems = foodForSearch && foodForSearch.filter(tempItem => {\n        return parseInt(tempItem.food_group_id) === foodGroupForSearch[0].id;\n      });\n\n      if (tempItems && tempItems.length > 0) {\n        // initial group & item being active here, variations, properties\n        setFoodItem({\n          foodGroup: foodGroupForSearch[0],\n          items: tempItems,\n          selectedItem: tempItems[0],\n          variations: parseInt(tempItems[0].has_variation) === 1 ? tempItems[0].variations : null,\n          properties: parseInt(tempItems[0].has_property) === 1 ? tempItems[0].properties : null\n        });\n      }\n    }\n\n    if (authUserInfo.details) {\n      let theBranch = branchForSearch && branchForSearch.find(branch => {\n        return parseInt(authUserInfo.details.branch_id) === branch.id;\n      });\n      setOrderDetails({ ...orderDetails,\n        branch: theBranch !== undefined ? theBranch : null\n      }); //set work period\n\n      let theWorkPeriod = null;\n\n      if (theBranch !== undefined && theBranch !== null) {\n        theWorkPeriod = workPeriodForSearch && workPeriodForSearch.filter(tempWorkPeriod => {\n          return theBranch.id === parseInt(tempWorkPeriod.branch_id);\n        }); //filter it with ended_at === null;\n\n        theWorkPeriod = theWorkPeriod && theWorkPeriod.find(endAtNullItem => {\n          return endAtNullItem.ended_at === null;\n        });\n      } //set work period here\n\n\n      setNewSettings({ ...newSettings,\n        vat: generalSettings && getSystemSettings(generalSettings, \"type_vat\"),\n        workPeriod: theWorkPeriod !== undefined ? theWorkPeriod : null\n      });\n    } else {\n      // user type admin\n      setNewSettings({ ...newSettings,\n        vat: generalSettings && getSystemSettings(generalSettings, \"type_vat\")\n      });\n    }\n\n    setOrderDetailusers({\n      theCustomers: customerForSearch ? customerForSearch : null,\n      theTables: tableForSearch ? tableForSearch : null,\n      theWaiters: waiterForSearch ? waiterForSearch : null\n    }); //check online orders\n\n    const interval = setInterval(() => {\n      const pendingUrl = BASE_URL + \"/website/pending-order\";\n      return axios.get(pendingUrl, {\n        headers: {\n          Authorization: `Bearer ${getCookie()}`\n        }\n      }).then(res => {\n        if (res.data > 0) {\n          setOnlineCounter(res.data);\n          let order = document.getElementById(\"myAudioOrder\");\n          order.play();\n        }\n      }).catch(err => {});\n    }, 30000);\n  }, [authUserInfo, generalSettings, foodForSearch, foodGroupForSearch]); //stock\n\n  const handleGetStock = id => {\n    if (orderDetails.branch === null) {\n      return 0;\n    }\n\n    let stock = foodItemStock.find(item => {\n      return parseInt(item.food_id) === parseInt(id) && parseInt(item.branch_id) === orderDetails.branch.id;\n    });\n\n    if (stock === undefined || stock.qty < 0) {\n      return 0;\n    }\n\n    return stock.qty;\n  }; //get already ordered qty\n\n\n  const handleAlreadyOrderedQty = id => {\n    let temp = 0;\n\n    if (newOrder) {\n      newOrder.map(item => {\n        if (parseInt(item.item.id) === id) {\n          temp += parseInt(item.quantity);\n        }\n      });\n    }\n\n    return temp;\n  }; //add new item to order list\n\n\n  const handleOrderItem = tempFoodItem => {\n    // if manage is stock is enable\n    if (showManageStock) {\n      if (handleGetStock(tempFoodItem.id) > handleAlreadyOrderedQty(tempFoodItem.id)) {\n        let oldOrderItems = [];\n        let newOrderItem = null;\n        let tempSelectedVariations = [];\n\n        if (newOrder) {\n          newOrder.map(eachOldOrderItem => {\n            //push all old items to new array to setNewOrder\n            oldOrderItems.push(eachOldOrderItem); //set selected variations of each order item\n\n            let tempArray = [];\n\n            if (eachOldOrderItem.variation !== null) {\n              tempArray.push(eachOldOrderItem.variation.food_with_variation_id);\n            } else {\n              tempArray.push(null);\n            }\n\n            tempSelectedVariations.push(tempArray);\n          }); //add new order item\n\n          newOrderItem = {\n            item: tempFoodItem,\n            variation: parseInt(tempFoodItem.has_variation) === 1 ? tempFoodItem.variations[0] : null,\n            quantity: 1\n          }; //set selected variations of new item\n\n          let tempArray = [];\n\n          if (parseInt(tempFoodItem.has_variation) === 1) {\n            tempArray.push(tempFoodItem.variations[0].food_with_variation_id);\n          } else {\n            tempArray.push(null);\n          }\n\n          tempSelectedVariations.push(tempArray); //push new item to new array to setNewOrder\n\n          oldOrderItems.push(newOrderItem);\n        } else {\n          //if no item in newOrder List\n          setOrderDetails({ //set token here on first order item add,\n            ...orderDetails,\n            token: {\n              time: new Date().getTime(),\n              id: newSettings.workPeriod.token\n            }\n          });\n          newOrderItem = {\n            //add new order item\n            item: tempFoodItem,\n            variation: parseInt(tempFoodItem.has_variation) === 1 ? tempFoodItem.variations[0] : null,\n            quantity: 1\n          }; //set selected variations of new item\n\n          let tempArray = [];\n\n          if (parseInt(tempFoodItem.has_variation) === 1) {\n            tempArray.push(tempFoodItem.variations[0].food_with_variation_id);\n          } else {\n            tempArray.push(null);\n          }\n\n          tempSelectedVariations.push(tempArray); //push new item to new array to setNewOrder\n\n          oldOrderItems.push(newOrderItem);\n        } //set new order list with new array of all order items\n\n\n        setNewOrder(oldOrderItems); //set order list active item index to add class \"actve\"\n\n        setActiveItemInOrder(oldOrderItems.length - 1); //set selected variations\n\n        setSelectedVariation(tempSelectedVariations); //calculate subTotalPrice\n\n        totalPrice(oldOrderItems); //set order unique food groups\n\n        let newSelectedGroup = [];\n        oldOrderItems.map(eachOrderGroup => {\n          let theGroup = foodGroupForSearch.find((grpFilter, grpFilterIndex) => {\n            return grpFilter.id === parseInt(eachOrderGroup.item.food_group_id);\n          });\n\n          if (!newSelectedGroup.includes(parseInt(theGroup.id))) {\n            newSelectedGroup.push(parseInt(theGroup.id));\n          }\n        });\n        let theOrderFoodGroups = [];\n        newSelectedGroup.forEach((thisItem, thisItemIndex) => {\n          let findThegroup = foodGroupForSearch.find((filterThisGroup, filterThisGroupIndex) => {\n            return filterThisGroup.id === thisItem;\n          });\n          theOrderFoodGroups.push(findThegroup);\n        });\n        setOrderFoodGroups(theOrderFoodGroups); //sound\n\n        if (getSystemSettings(generalSettings, \"play_sound\") === \"1\") {\n          let beep = document.getElementById(\"myAudio\");\n          beep.play();\n        }\n      } else {\n        toast.error(`${_t(t(\"Stock Out\"))}`, {\n          position: \"bottom-center\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          className: \"text-center toast-notification\"\n        });\n      }\n    } else {\n      let oldOrderItems = [];\n      let newOrderItem = null;\n      let tempSelectedVariations = [];\n\n      if (newOrder) {\n        newOrder.map(eachOldOrderItem => {\n          //push all old items to new array to setNewOrder\n          oldOrderItems.push(eachOldOrderItem); //set selected variations of each order item\n\n          let tempArray = [];\n\n          if (eachOldOrderItem.variation !== null) {\n            tempArray.push(eachOldOrderItem.variation.food_with_variation_id);\n          } else {\n            tempArray.push(null);\n          }\n\n          tempSelectedVariations.push(tempArray);\n        }); //add new order item\n\n        newOrderItem = {\n          item: tempFoodItem,\n          variation: parseInt(tempFoodItem.has_variation) === 1 ? tempFoodItem.variations[0] : null,\n          quantity: 1\n        }; //set selected variations of new item\n\n        let tempArray = [];\n\n        if (parseInt(tempFoodItem.has_variation) === 1) {\n          tempArray.push(tempFoodItem.variations[0].food_with_variation_id);\n        } else {\n          tempArray.push(null);\n        }\n\n        tempSelectedVariations.push(tempArray); //push new item to new array to setNewOrder\n\n        oldOrderItems.push(newOrderItem);\n      } else {\n        //if no item in newOrder List\n        setOrderDetails({ //set token here on first order item add,\n          ...orderDetails,\n          token: {\n            time: new Date().getTime(),\n            id: newSettings.workPeriod.token\n          }\n        });\n        newOrderItem = {\n          //add new order item\n          item: tempFoodItem,\n          variation: parseInt(tempFoodItem.has_variation) === 1 ? tempFoodItem.variations[0] : null,\n          quantity: 1\n        }; //set selected variations of new item\n\n        let tempArray = [];\n\n        if (parseInt(tempFoodItem.has_variation) === 1) {\n          tempArray.push(tempFoodItem.variations[0].food_with_variation_id);\n        } else {\n          tempArray.push(null);\n        }\n\n        tempSelectedVariations.push(tempArray); //push new item to new array to setNewOrder\n\n        oldOrderItems.push(newOrderItem);\n      } //set new order list with new array of all order items\n\n\n      setNewOrder(oldOrderItems); //set order list active item index to add class \"actve\"\n\n      setActiveItemInOrder(oldOrderItems.length - 1); //set selected variations\n\n      setSelectedVariation(tempSelectedVariations); //calculate subTotalPrice\n\n      totalPrice(oldOrderItems); //set order unique food groups\n\n      let newSelectedGroup = [];\n      oldOrderItems.map(eachOrderGroup => {\n        let theGroup = foodGroupForSearch.find((grpFilter, grpFilterIndex) => {\n          return grpFilter.id === parseInt(eachOrderGroup.item.food_group_id);\n        });\n\n        if (!newSelectedGroup.includes(parseInt(theGroup.id))) {\n          newSelectedGroup.push(parseInt(theGroup.id));\n        }\n      });\n      let theOrderFoodGroups = [];\n      newSelectedGroup.forEach((thisItem, thisItemIndex) => {\n        let findThegroup = foodGroupForSearch.find((filterThisGroup, filterThisGroupIndex) => {\n          return filterThisGroup.id === thisItem;\n        });\n        theOrderFoodGroups.push(findThegroup);\n      });\n      setOrderFoodGroups(theOrderFoodGroups); //sound\n\n      if (getSystemSettings(generalSettings, \"play_sound\") === \"1\") {\n        let beep = document.getElementById(\"myAudio\");\n        beep.play();\n      }\n    }\n  }; //set order item's variation on change of variation\n\n\n  const handleOrderItemVariation = tempFoodItemVariation => {\n    if (activeItemInOrder !== null) {\n      if (newOrder) {\n        let oldOrderItems = []; //array to push order items\n\n        let newOrderItemTemp = null; //to edit selected item\n\n        let tempSelectedVariations = []; //to set selected variations array for order items\n\n        newOrder.map((newOrderItem, index) => {\n          let tempArray = [];\n\n          if (index === activeItemInOrder) {\n            //changing variation of selected food item\n            newOrderItemTemp = { ...newOrderItem,\n              variation: tempFoodItemVariation\n            }; //push updated item to orderlist\n\n            oldOrderItems.push(newOrderItemTemp); //set updated variation for selected variation\n\n            tempArray.push(tempFoodItemVariation.food_with_variation_id);\n          } else {\n            //set other items as it was which are not selected to edit\n            newOrderItemTemp = newOrderItem;\n            oldOrderItems.push(newOrderItemTemp);\n\n            if (newOrderItemTemp.variation) {\n              //set updated variation for selected variations\n              tempArray.push(newOrderItemTemp.variation.food_with_variation_id);\n            }\n          } //push to the array to set selectedVariations\n\n\n          tempSelectedVariations.push(tempArray);\n        }); //set variations here\n\n        setSelectedVariation(tempSelectedVariations); //set updated order list\n\n        setNewOrder(oldOrderItems); //calculate subTotalPrice\n\n        totalPrice(oldOrderItems);\n      }\n    }\n  }; //to check which variation is selected\n\n\n  const checkChecked = variationItem => {\n    //if variationItem.food_with_variation_id of selected item exist in selectedVariation - return true\n    if (selectedVariation[activeItemInOrder] !== undefined) {\n      if (selectedVariation[activeItemInOrder][0] === variationItem.food_with_variation_id) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }; //delete confirmation modal of item from order list\n\n\n  const handleDeleteConfirmation = removeIndex => {\n    confirmAlert({\n      customUI: ({\n        onClose\n      }) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card card-body\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 25\n          }\n        }, _t(t(\"Are you sure?\"))), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 25\n          }\n        }, _t(t(\"You want to delete this?\"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex justify-content-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => {\n            handleRemoveItemFromOrderList(removeIndex);\n            onClose();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 29\n          }\n        }, _t(t(\"Yes, delete it!\"))), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-success ml-2 px-3\",\n          onClick: onClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 29\n          }\n        }, _t(t(\"No\")))));\n      }\n    });\n  }; //remove item from order list\n\n\n  const handleRemoveItemFromOrderList = removeIndex => {\n    let oldOrderItems = []; //array to push order items\n\n    newOrder.map((newOrderItem, index) => {\n      if (index !== removeIndex) {\n        //push item to orderlist\n        oldOrderItems.push(newOrderItem);\n      }\n    }); //delete variations here\n\n    let tempSelectedVariations = selectedVariation.filter((selectedVariationItem, variationIndex) => {\n      return variationIndex !== removeIndex;\n    }); //delete properties here\n\n    let tempSelectedProperties = selectedProperties.filter((selectedPropertyItem, propertyIndex) => {\n      return propertyIndex !== removeIndex;\n    }); //delete property group here\n\n    let tempSelectedPropertyGroup = selectedPropertyGroup.filter((selectedPropertyGroupItem, propertyGroupIndex) => {\n      return propertyGroupIndex !== removeIndex;\n    }); //set property group here\n\n    setSelectedPropertyGroup(tempSelectedPropertyGroup); //set variations here\n\n    setSelectedVariation(tempSelectedVariations); //set properties here\n\n    setSelectedProperties(tempSelectedProperties); //set updated order list\n\n    setNewOrder(oldOrderItems); //set active item in order list\n\n    setActiveItemInOrder(null); //calculate subTotalPrice\n\n    totalPrice(oldOrderItems); //set order unique food groups\n\n    let newSelectedGroup = [];\n    oldOrderItems.map(eachOrderGroup => {\n      let theGroup = foodGroupForSearch.find((grpFilter, grpFilterIndex) => {\n        return grpFilter.id === parseInt(eachOrderGroup.item.food_group_id);\n      });\n\n      if (!newSelectedGroup.includes(parseInt(theGroup.id))) {\n        newSelectedGroup.push(parseInt(theGroup.id));\n      }\n    });\n    let theOrderFoodGroups = [];\n    newSelectedGroup.forEach((thisItem, thisItemIndex) => {\n      let findThegroup = foodGroupForSearch.find((filterThisGroup, filterThisGroupIndex) => {\n        return filterThisGroup.id === thisItem;\n      });\n      theOrderFoodGroups.push(findThegroup);\n    });\n    setOrderFoodGroups(theOrderFoodGroups); //sound\n\n    if (getSystemSettings(generalSettings, \"play_sound\") === \"1\") {\n      let beep = document.getElementById(\"myAudio\");\n      beep.play();\n    }\n  }; //handle order item quantity\n\n\n  const handleOrderItemQty = action => {\n    if (activeItemInOrder !== null) {\n      if (newOrder) {\n        let newOrderItemTemp = null; //to edit selected item\n\n        let oldOrderItems = []; //array to push order items\n\n        newOrder.map((newOrderItem, index) => {\n          if (index === activeItemInOrder) {\n            //update qty here\n            if (action === \"+\") {\n              // if manage is stock is enable\n              if (showManageStock) {\n                if (handleGetStock(newOrderItem.item.id) > handleAlreadyOrderedQty(newOrderItem.item.id)) {\n                  //increase qty\n                  newOrderItemTemp = { ...newOrderItem,\n                    quantity: newOrderItem.quantity + 1\n                  };\n                } else {\n                  newOrderItemTemp = { ...newOrderItem,\n                    quantity: newOrderItem.quantity\n                  };\n                  toast.error(`${_t(t(\"Reached Stock Limit\"))}`, {\n                    position: \"bottom-center\",\n                    closeButton: false,\n                    autoClose: 10000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    className: \"text-center toast-notification\"\n                  });\n                }\n              } else {\n                //increase qty\n                newOrderItemTemp = { ...newOrderItem,\n                  quantity: newOrderItem.quantity + 1\n                };\n              }\n            } else {\n              //if qty !==1 decrease\n              if (newOrderItem.quantity !== 1) {\n                newOrderItemTemp = { ...newOrderItem,\n                  quantity: newOrderItem.quantity - 1\n                };\n              } else {\n                newOrderItemTemp = { ...newOrderItem,\n                  quantity: newOrderItem.quantity\n                };\n              }\n            }\n\n            oldOrderItems.push(newOrderItemTemp);\n          } else {\n            // set other items as it was which are not selected to edit\n            oldOrderItems.push(newOrderItem);\n          }\n        }); //calculate subTotalPrice\n\n        totalPrice(oldOrderItems); //set updated order list\n\n        setNewOrder(oldOrderItems);\n      }\n    }\n  }; //cancel order confirmation\n\n\n  const handleCancelConfirmation = () => {\n    confirmAlert({\n      customUI: ({\n        onClose\n      }) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card card-body bg-primary text-white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          className: \"text-white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 25\n          }\n        }, _t(t(\"Are you sure?\"))), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 25\n          }\n        }, _t(t(\"You want to cancel this order?\"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex justify-content-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-warning text-dark\",\n          onClick: () => {\n            handleCancel();\n            onClose();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 29\n          }\n        }, _t(t(\"Yes!\"))), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-success ml-2 px-3\",\n          onClick: onClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 29\n          }\n        }, _t(t(\"No\")))));\n      }\n    });\n  }; //cancel order\n\n\n  const handleCancel = () => {\n    setLoading(true);\n    setNewOrder(null);\n    setActiveItemInOrder(null);\n    setSelectedVariation([]);\n    setSelectedPropertyGroup([]);\n    setSelectedProperties([]);\n    setTheSubTotal(0);\n    setDeptCommission(0);\n    setTheVat(0);\n    setTotalPaybale(0);\n    setReturnMoneyUsd(0);\n    setPaidMoney(0);\n    setOrderDetails({\n      branch: orderDetails.branch,\n      customer: null,\n      table: null,\n      waiter: null,\n      dept_tag: null,\n      payment_type: null,\n      payment_amount: null,\n      total_guest: 1,\n      newCustomer: false,\n      newCustomerInfo: {\n        name: \"\",\n        number: \"\"\n      },\n      token: null,\n      serviceCharge: 0,\n      discount: 0\n    });\n    setTimeout(() => {\n      setLoading(false);\n    }, 200);\n  }; //add properties\n\n\n  const handleAddProperties = property => {\n    let propertyItem = {\n      item: property,\n      quantity: 1\n    };\n\n    if (activeItemInOrder !== null) {\n      if (newOrder) {\n        let oldOrderItems = []; //array to push order items\n\n        let newOrderItemTemp = null; //to edit selected item\n\n        let tempSelectedProperties = []; //to set selected properties array for order items\n\n        let tempSelectedPropertyGroup = []; //to set selected property group array for order items properties\n\n        newOrder.map((newOrderItem, index) => {\n          let tempArray = []; //for selected properties\n\n          let tempArrayPropertyGroup = []; //for selected property groups\n\n          if (index === activeItemInOrder) {\n            let tempPropertyArray = []; //for property items\n\n            if (newOrderItem.properties) {\n              newOrderItem.properties.map(eachPropertyItem => {\n                tempPropertyArray.push(eachPropertyItem); //set updated property for selected variation\n\n                tempArray.push(eachPropertyItem.item.id); //handle selected property group\n\n                tempArrayPropertyGroup.push(parseInt(eachPropertyItem.item.property_group_id));\n              });\n              tempPropertyArray.push(propertyItem); //for selected properties\n\n              tempArray.push(propertyItem.item.id); //handle selected property group\n\n              tempArrayPropertyGroup.push(parseInt(propertyItem.item.property_group_id));\n            } else {\n              tempPropertyArray.push(propertyItem); //for selected properties\n\n              tempArray.push(propertyItem.item.id); //handle selected property group\n\n              tempArrayPropertyGroup.push(parseInt(propertyItem.item.property_group_id));\n            } //changing properties of selected food item\n\n\n            newOrderItemTemp = { ...newOrderItem,\n              properties: tempPropertyArray\n            }; //push updated item to orderlist\n\n            oldOrderItems.push(newOrderItemTemp);\n          } else {\n            // set other items as it was which are not selected to edit\n            newOrderItemTemp = newOrderItem;\n            oldOrderItems.push(newOrderItemTemp);\n\n            if (newOrderItem.properties) {\n              newOrderItem.properties.map(eachPropertyItem => {\n                //set updated properties for selected properties\n                tempArray.push(eachPropertyItem.item.id); //set updated property groups for selected groups\n\n                tempArrayPropertyGroup.push(parseInt(eachPropertyItem.item.property_group_id));\n              });\n            }\n          } //push to the array to set selected properties\n\n\n          tempSelectedProperties.push(tempArray); //push to the array to set selected property groups\n\n          tempSelectedPropertyGroup.push(tempArrayPropertyGroup);\n        }); //set selected properties here\n\n        setSelectedProperties(tempSelectedProperties); //handle selected property groups\n\n        let newSelectedPropertyGroup = [];\n        tempSelectedPropertyGroup.map(eachSelectedGroupArray => {\n          let unique = [...new Set(eachSelectedGroupArray)];\n          newSelectedPropertyGroup.push(unique);\n        }); //set selected property groups here\n\n        setSelectedPropertyGroup(newSelectedPropertyGroup); //calculate subTotalPrice\n\n        totalPrice(oldOrderItems); //set updated order list\n\n        setNewOrder(oldOrderItems);\n      }\n    }\n  }; //remove properties\n\n\n  const handleRemoveProperties = propertyItem => {\n    if (activeItemInOrder !== null) {\n      if (newOrder) {\n        let oldOrderItems = []; //array to push order items\n\n        let newOrderItemTemp = null; //to edit selected item\n\n        let newSelectedProperties = []; //for selected properties\n\n        let allPropertyGroups = []; //for selected property groups\n\n        newOrder.map((newOrderItem, index) => {\n          if (index === activeItemInOrder) {\n            let tempPropertyArray = []; //for property items\n\n            if (newOrderItem.properties) {\n              newOrderItem.properties.map(eachPropertyItem => {\n                if (eachPropertyItem.item.id !== propertyItem.id) {\n                  tempPropertyArray.push(eachPropertyItem);\n                }\n              }); //removing properties from selected properties array\n\n              selectedProperties.map((selectedProperty, propertyIndex) => {\n                if (propertyIndex !== activeItemInOrder) {\n                  //pushing other order items properties in selected array\n                  newSelectedProperties.push(selectedProperty);\n                } else {\n                  let theProperties = selectedProperty.filter(filterThis => {\n                    return filterThis !== propertyItem.id;\n                  }); //pushing this order items properties in selected array or [] if not a single property item is selected\n\n                  newSelectedProperties.push(theProperties);\n                }\n              });\n            } //changing properties of selected food item\n\n\n            newOrderItemTemp = { ...newOrderItem,\n              properties: tempPropertyArray\n            }; //set selected properties here\n\n            setSelectedProperties(newSelectedProperties); //push updated item to orderlist\n\n            oldOrderItems.push(newOrderItemTemp); //property group for selected property group array\n\n            selectedPropertyGroup.map((groupItem, groupItemIndex) => {\n              if (index === groupItemIndex) {\n                let tempGroupArray = []; // for selected group of each order item (index of array wise new array)\n\n                groupItem.map(filterThisItem => {\n                  if (filterThisItem !== parseInt(propertyItem.property_group_id)) {\n                    //push if removable property item's group !== groupItem\n                    tempGroupArray.push(filterThisItem);\n                  }\n                }); //push all groups of modified new properties array of this item\n\n                tempPropertyArray.map(pushThis => {\n                  tempGroupArray.push(parseInt(pushThis.item.property_group_id));\n                }); //remove duplicate groups\n\n                let unique = [...new Set(tempGroupArray)];\n                allPropertyGroups.push(unique);\n              } else {\n                //keep other selected groups as it was\n                allPropertyGroups.push(groupItem);\n              }\n            });\n          } else {\n            // set other items as it was which are not selected to edit\n            newOrderItemTemp = newOrderItem;\n            oldOrderItems.push(newOrderItemTemp);\n          }\n        }); //set new selected property groups\n\n        setSelectedPropertyGroup(allPropertyGroups); //calculate subTotalPrice\n\n        totalPrice(oldOrderItems); //set updated order list\n\n        setNewOrder(oldOrderItems);\n      }\n    }\n  }; //to check which property is selected\n\n\n  const checkCheckedProperties = propertyItem => {\n    //if property.id of selected item exist in selected properties - return true\n    if (selectedProperties[activeItemInOrder] !== undefined) {\n      if (selectedProperties[activeItemInOrder].includes(propertyItem.id)) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }; //handle property quantity\n\n\n  const handlePropertyQty = (propertyItem, action) => {\n    if (activeItemInOrder !== null) {\n      if (newOrder) {\n        let newOrderItemTemp = null; //to edit selected item\n\n        let oldOrderItems = []; //array to push order items\n\n        let tempPropertyItemsArray = []; //for each property items\n\n        newOrder.map((newOrderItem, index) => {\n          if (index === activeItemInOrder) {\n            //if has property items\n            if (newOrderItem.properties) {\n              newOrderItem.properties.map(eachPropertyItem => {\n                //loop through the properties to change the specific one's quantity and keep the rest as it was\n                if (eachPropertyItem.item.id !== propertyItem.id) {\n                  //keep others as it was\n                  tempPropertyItemsArray.push(eachPropertyItem);\n                } else {\n                  //coming here if the specific item's id === selected property item's id\n                  let newPropertyItemForQtyUpdate = null; //update qty here\n\n                  if (action === \"+\") {\n                    //increase qty\n                    newPropertyItemForQtyUpdate = { ...eachPropertyItem,\n                      quantity: eachPropertyItem.quantity + 1\n                    };\n                    tempPropertyItemsArray.push(newPropertyItemForQtyUpdate);\n                  } else {\n                    //if qty !==1 decrease\n                    if (eachPropertyItem.quantity !== 1) {\n                      newPropertyItemForQtyUpdate = { ...eachPropertyItem,\n                        quantity: eachPropertyItem.quantity - 1\n                      };\n                      tempPropertyItemsArray.push(newPropertyItemForQtyUpdate);\n                    } else {\n                      tempPropertyItemsArray.push(eachPropertyItem);\n                    }\n                  }\n                }\n              }); //changing properties of selected food item\n\n              newOrderItemTemp = { ...newOrderItem,\n                properties: tempPropertyItemsArray\n              }; //push updated item to orderlist\n\n              oldOrderItems.push(newOrderItemTemp);\n            } else {\n              //push updated item to orderlist\n              oldOrderItems.push(newOrderItem);\n            }\n          } else {\n            // set other items as it was which are not selected to edit\n            oldOrderItems.push(newOrderItem);\n          }\n        }); //calculate subTotalPrice\n\n        totalPrice(oldOrderItems); //set updated order list\n\n        setNewOrder(oldOrderItems);\n      }\n    }\n  }; //to check selected property item's quantity\n\n\n  const checkCheckedPropertyQuantity = propertyItem => {\n    //if propertyItem.id of selected item exist in selectedProperties - return the quantity of that property item from the order list item\n    if (selectedProperties[activeItemInOrder] !== undefined) {\n      if (selectedProperties[activeItemInOrder].includes(propertyItem.id)) {\n        //get order of activeItemInOrder index\n        if (newOrder) {\n          if (newOrder[activeItemInOrder] !== undefined) {\n            let orderItem = newOrder[activeItemInOrder];\n            let theItem = orderItem.properties.find(theItemTemp => {\n              return theItemTemp.item.id === propertyItem.id;\n            });\n            return theItem.quantity;\n          } else {\n            return 1;\n          }\n        } else {\n          return 1;\n        }\n      } else {\n        return 1;\n      }\n    } else {\n      return 1;\n    }\n  }; //show price of each item in order list\n\n\n  const showPriceOfEachOrderItem = itemIndex => {\n    if (newOrder) {\n      let price = 0;\n      let orderItem = newOrder[itemIndex]; //check price * quantity (variation price / item price)\n\n      if (parseInt(orderItem.item.has_variation) === 1) {\n        price = parseFloat(orderItem.variation.food_with_variation_price);\n      } else {\n        price = parseFloat(orderItem.item.price);\n      } //calculate total price of properties\n\n\n      if (orderItem.properties) {\n        if (orderItem.properties.length > 0) {\n          orderItem.properties.map(getEachItemPrice => {\n            let totalPropertyPrice = parseFloat(getEachItemPrice.item.extra_price) * getEachItemPrice.quantity;\n            price = price + totalPropertyPrice;\n          });\n        }\n      }\n\n      let formattedPrice = formatPrice(price * orderItem.quantity);\n      return formattedPrice;\n    }\n  }; //show price of each item in print\n\n\n  const showPriceOfEachOrderItemPrint = itemIndex => {\n    if (newOrder) {\n      let price = 0;\n      let orderItem = newOrder[itemIndex]; //check price * quantity (variation price / item price)\n\n      if (parseInt(orderItem.item.has_variation) === 1) {\n        price = parseFloat(orderItem.variation.food_with_variation_price);\n      } else {\n        price = parseFloat(orderItem.item.price);\n      }\n\n      let formattedPrice = formatPrice(price * orderItem.quantity);\n      return formattedPrice;\n    }\n  }; //show total price\n\n\n  const totalPrice = allOrderItems => {\n    let subTotal = 0;\n    allOrderItems.map(orderItem => {\n      let price = 0; //check price * quantity (variation price / item price)\n\n      if (parseInt(orderItem.item.has_variation) === 1) {\n        price = parseFloat(orderItem.variation.food_with_variation_price);\n      } else {\n        price = parseFloat(orderItem.item.price);\n      } //calculate total price of properties\n\n\n      if (orderItem.properties) {\n        if (orderItem.properties.length > 0) {\n          orderItem.properties.map(getEachItemPrice => {\n            let totalPropertyPrice = parseFloat(getEachItemPrice.item.extra_price) * getEachItemPrice.quantity;\n            price = price + totalPropertyPrice;\n          });\n        }\n      }\n\n      subTotal = subTotal + price * orderItem.quantity;\n    });\n    setTheSubTotal(subTotal);\n    let tempVat = 0;\n\n    if (newSettings) {\n      tempVat = subTotal * parseFloat(newSettings.vat) / 100;\n      setTheVat(tempVat);\n    }\n\n    let tempCommission = 0;\n\n    if (orderDetails && orderDetails.dept_tag) {\n      tempCommission = subTotal * parseFloat(orderDetails.dept_tag.commission) / 100;\n      setDeptCommission(tempCommission);\n    }\n\n    let totalPayable = 0;\n    let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\n    let usdServiceCharge;\n    let usdDiscount;\n\n    if (getSystemSettings(generalSettings, \"sDiscount\") === \"flat\") {\n      usdServiceCharge = parseFloat(orderDetails.serviceCharge) / localCurrency.rate;\n      usdDiscount = parseFloat(orderDetails.discount) / localCurrency.rate;\n    } else {\n      usdServiceCharge = subTotal * (parseFloat(orderDetails.serviceCharge) / 100);\n      usdDiscount = subTotal * (parseFloat(orderDetails.discount) / 100);\n    }\n\n    totalPayable = subTotal + tempVat + usdServiceCharge - usdDiscount - tempCommission;\n    setTotalPaybale(totalPayable); //calculate paid amount to set return amount\n\n    handleCalculatePaid(orderDetails.payment_amount, orderDetails.payment_type);\n  }; //search food here\n\n\n  const handleSearch = e => {\n    setActiveItemInOrder(null);\n    let searchInput = e.target.value.toLowerCase();\n    let searchedList = foodForSearch.filter(item => {\n      let lowerCaseItemName = item.name.toLowerCase();\n      let lowerCaseItemGroup = item.food_group.toLowerCase();\n      return lowerCaseItemName.includes(searchInput) || lowerCaseItemGroup.includes(searchInput);\n    });\n    setFoodItem({\n      foodGroup: null,\n      items: searchedList.length > 0 ? searchedList : null,\n      selectedItem: null,\n      variations: null,\n      properties: null\n    });\n  }; //set order detals additional info here\n  //set branch\n\n\n  const handleSetBranch = branch => {\n    setLoading(true);\n    let tempCustomers = customerForSearch !== null && customerForSearch.filter(eachCustomer => {\n      return parseInt(eachCustomer.branch_id) === branch.id;\n    });\n    let tempTables = tableForSearch !== null && tableForSearch.filter(eachTable => {\n      return parseInt(eachTable.branch_id) === branch.id;\n    });\n    let tempWaiters = waiterForSearch !== null && waiterForSearch.filter(eachWaiter => {\n      return parseInt(eachWaiter.branch_id) === branch.id;\n    });\n    setOrderDetailusers({\n      theCustomers: tempCustomers,\n      theTables: tempTables,\n      theWaiters: tempWaiters\n    });\n    setNewOrder(null);\n    setActiveItemInOrder(null);\n    setSelectedVariation([]);\n    setSelectedPropertyGroup([]);\n    setSelectedProperties([]);\n    setTheSubTotal(0);\n    setTheVat(0);\n    setTotalPaybale(0);\n    setReturnMoneyUsd(0);\n    setPaidMoney(0);\n    setOrderDetails({\n      branch: branch,\n      customer: null,\n      table: null,\n      waiter: null,\n      dept_tag: null,\n      payment_type: null,\n      payment_amount: null,\n      total_guest: 1,\n      newCustomer: false,\n      newCustomerInfo: {\n        name: \"\",\n        number: \"\"\n      },\n      token: null,\n      serviceCharge: 0,\n      discount: 0\n    }); // set work period according to branch for admin on branch change\n\n    let theWorkPeriod = null;\n    theWorkPeriod = workPeriodForSearch && workPeriodForSearch.filter(tempWorkPeriod => {\n      return branch.id === parseInt(tempWorkPeriod.branch_id);\n    });\n    theWorkPeriod = theWorkPeriod.find(endAtNullItem => {\n      return endAtNullItem.ended_at === null;\n    });\n    setNewSettings({ ...newSettings,\n      workPeriod: theWorkPeriod !== undefined ? theWorkPeriod : null,\n      vat: newSettings.vat\n    });\n    setTimeout(() => {\n      setLoading(false);\n    }, 300);\n  }; //customer\n\n\n  const handleSetCustomer = customer => {\n    setOrderDetails({ ...orderDetails,\n      customer\n    });\n  }; //new Customer\n\n\n  const handleNewCustomer = e => {\n    //if name is not there, set new customer === false\n    if (e.target.name === \"name\") {\n      if (e.target.value.length > 0) {\n        setOrderDetails({ ...orderDetails,\n          newCustomer: true,\n          newCustomerInfo: { ...orderDetails.newCustomerInfo,\n            [e.target.name]: e.target.value\n          }\n        });\n      } else {\n        setOrderDetails({ ...orderDetails,\n          newCustomer: false,\n          newCustomerInfo: { ...orderDetails.newCustomerInfo,\n            [e.target.name]: e.target.value\n          }\n        });\n      }\n    } else {\n      //set phn number here\n      setOrderDetails({ ...orderDetails,\n        newCustomerInfo: { ...orderDetails.newCustomerInfo,\n          [e.target.name]: e.target.value\n        }\n      });\n    }\n  }; //  table\n\n\n  const handleSetTable = table => {\n    setOrderDetails({ ...orderDetails,\n      table\n    });\n  }; // waiter\n\n\n  const handleSetWaiter = waiter => {\n    setOrderDetails({ ...orderDetails,\n      waiter\n    });\n  }; // department tag\n\n\n  const handleSetDeptTag = dept_tag => {\n    setOrderDetails({ ...orderDetails,\n      dept_tag\n    });\n    let allOrderItems = newOrder;\n\n    if (allOrderItems) {\n      let subTotal = 0;\n      allOrderItems.map(orderItem => {\n        let price = 0; //check price * quantity (variation price / item price)\n\n        if (parseInt(orderItem.item.has_variation) === 1) {\n          price = parseFloat(orderItem.variation.food_with_variation_price);\n        } else {\n          price = parseFloat(orderItem.item.price);\n        } //calculate total price of properties\n\n\n        if (orderItem.properties) {\n          if (orderItem.properties.length > 0) {\n            orderItem.properties.map(getEachItemPrice => {\n              let totalPropertyPrice = parseFloat(getEachItemPrice.item.extra_price) * getEachItemPrice.quantity;\n              price = price + totalPropertyPrice;\n            });\n          }\n        }\n\n        subTotal = subTotal + price * orderItem.quantity;\n      });\n      setTheSubTotal(subTotal);\n      let tempVat = 0;\n\n      if (newSettings) {\n        tempVat = subTotal * parseFloat(newSettings.vat) / 100;\n        setTheVat(tempVat);\n      }\n\n      let tempCommission = 0;\n      tempCommission = subTotal * parseFloat(dept_tag.commission) / 100;\n      setDeptCommission(tempCommission);\n      let totalPayable = 0;\n      let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\n      let usdServiceCharge;\n      let usdDiscount;\n\n      if (getSystemSettings(generalSettings, \"sDiscount\") === \"flat\") {\n        usdServiceCharge = parseFloat(orderDetails.serviceCharge) / localCurrency.rate;\n        usdDiscount = parseFloat(orderDetails.discount) / localCurrency.rate;\n      } else {\n        usdServiceCharge = subTotal * (parseFloat(orderDetails.serviceCharge) / 100);\n        usdDiscount = subTotal * (parseFloat(orderDetails.discount) / 100);\n      }\n\n      totalPayable = subTotal + tempVat + usdServiceCharge - usdDiscount - tempCommission;\n      setTotalPaybale(totalPayable); //calculate paid amount to set return amount\n\n      handleCalculatePaid(orderDetails.payment_amount, orderDetails.payment_type);\n    }\n  }; //payment type\n\n\n  const handleSetpaymentType = payment_type => {\n    setOrderDetails({ ...orderDetails,\n      payment_type\n    }); //calculate paid amount to set return amount\n\n    handleCalculatePaid(orderDetails.payment_amount, payment_type);\n  }; //payment type pos 2\n\n\n  const handleSetpaymentTypeSingle = payment_type => {\n    let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\n    let theUsdPaid = paidMoney / localCurrency.rate;\n\n    if (theUsdPaid < totalPayable) {\n      setReturnMoneyUsd(0);\n      toast.error(`${_t(t(\"Please enter paid amount atleast equal to the total bill amount\"))}`, {\n        position: \"bottom-center\",\n        closeButton: false,\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    } else {\n      setOrderDetails({ ...orderDetails,\n        payment_type: [payment_type]\n      });\n      let theReturnMoney = theUsdPaid - totalPayable;\n      setReturnMoneyUsd(theReturnMoney);\n    }\n  }; //payment type amount\n\n\n  const handlePaymentTypeAmount = e => {\n    let tempPaymentAmount = { ...orderDetails.payment_amount,\n      [e.target.name]: e.target.value\n    };\n    setOrderDetails({ ...orderDetails,\n      payment_amount: tempPaymentAmount\n    }); //calculate paid amount to set return amount\n\n    handleCalculatePaid(tempPaymentAmount, orderDetails.payment_type);\n  }; //guest\n\n\n  const handleTotalGuest = e => {\n    setOrderDetails({ ...orderDetails,\n      total_guest: e.target.value\n    });\n  }; //calculate paid amount\n\n\n  const handleCalculatePaid = (paymentAmount, paymentType) => {\n    let paidAmount = 0;\n\n    if (paymentAmount !== null && paymentType !== null) {\n      let thePaymentArray = [];\n\n      if (paymentAmount) {\n        thePaymentArray = Object.entries(paymentAmount);\n      }\n\n      thePaymentArray.map(eachPaymentItem => {\n        let thePaymentType = paymentType.find(paymentTypeItem => {\n          return paymentTypeItem.id === parseInt(eachPaymentItem[0]);\n        });\n\n        if (eachPaymentItem[1] !== \"\") {\n          if (thePaymentType && thePaymentType.id === parseInt(eachPaymentItem[0])) {\n            paidAmount = paidAmount + parseFloat(eachPaymentItem[1]);\n          }\n        }\n      });\n      let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\n      paidAmount = paidAmount / localCurrency.rate;\n      let theReturnMoney = paidAmount - totalPayable;\n      setReturnMoneyUsd(theReturnMoney);\n    } else {\n      setReturnMoneyUsd(0);\n    }\n\n    setPaidMoney(paidAmount);\n  }; //send server req\n\n\n  const handleSubmitOrder = e => {\n    e.preventDefault();\n\n    if (newOrder && newOrder.length > 0) {\n      if (paidMoney !== 0) {\n        toast.error(`${_t(t(\"Settle order to add payments, or remove payment's amount\"))}`, {\n          position: \"bottom-center\",\n          closeButton: false,\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          className: \"text-center toast-notification\"\n        });\n      } else {\n        axiosRequest();\n      }\n    } else {\n      toast.error(`${_t(t(\"Please add items in order list\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }\n  }; //axios request for submit\n\n\n  const axiosRequest = () => {\n    let url = BASE_URL + \"/settings/new-order\";\n    let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\n    let formData = {\n      branch: orderDetails.branch,\n      customer: orderDetails.customer,\n      table: orderDetails.table,\n      waiter: orderDetails.waiter,\n      dept_tag: orderDetails.dept_tag,\n      payment_type: orderDetails.payment_type,\n      payment_amount: orderDetails.payment_amount,\n      newCustomer: orderDetails.newCustomer ? 1 : 0,\n      newCustomerInfo: orderDetails.newCustomerInfo,\n      token: orderDetails.token,\n      total_guest: orderDetails.total_guest,\n      orderItems: newOrder,\n      serviceCharge: orderDetails.serviceCharge,\n      discount: orderDetails.discount,\n      subTotal: theSubTotal,\n      totalPayable: totalPayable,\n      paidMoney: paidMoney,\n      theVat: theVat,\n      dept_commission: deptCommission,\n      localCurrency: localCurrency,\n      workPeriod: newSettings.workPeriod\n    };\n    setLoading(true);\n    axios.post(url, formData, {\n      headers: {\n        Authorization: `Bearer ${getCookie()}`\n      }\n    }).then(res => {\n      if (res.data !== \"ended\") {\n        getFoodGroup();\n        handlePrint();\n        setCustomerForSearch(res.data[0][1]);\n        setWorkPeriodListForSearch(res.data[1][1]);\n        let tempCustomers = res.data[0][1] !== null && res.data[0][1].filter(eachCustomer => {\n          return parseInt(eachCustomer.branch_id) === orderDetails.branch.id;\n        });\n        setOrderDetailusers({ ...orderDetailUsers,\n          theCustomers: tempCustomers\n        }); //set work period\n\n        let theWorkPeriod = null;\n\n        if (orderDetails.branch !== undefined && orderDetails.branch !== null) {\n          theWorkPeriod = res.data[1][1] && res.data[1][1].filter(tempWorkPeriod => {\n            return orderDetails.branch.id === parseInt(tempWorkPeriod.branch_id);\n          }); //filter it with ended_at === null;\n\n          theWorkPeriod = theWorkPeriod && theWorkPeriod.find(endAtNullItem => {\n            return endAtNullItem.ended_at === null;\n          });\n        } //set work period here\n\n\n        setNewSettings({ ...newSettings,\n          vat: generalSettings && getSystemSettings(generalSettings, \"type_vat\"),\n          workPeriod: theWorkPeriod !== undefined ? theWorkPeriod : null\n        });\n        setLoading(false);\n      } else {\n        setLoading(false);\n        toast.error(`${_t(t(\"Please restart the work period\"))}`, {\n          position: \"bottom-center\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          className: \"text-center toast-notification\"\n        });\n      }\n    }).catch(() => {\n      setLoading(false);\n      toast.error(`${_t(t(\"Please try again\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    });\n  }; //settle button\n\n\n  const handleSettleOrderButton = e => {\n    if (newOrder && newOrder.length > 0) {\n      if (orderDetails && orderDetails.dept_tag !== null) {\n        setShowSettle(true);\n      } else {\n        toast.error(`${_t(t(\"Please select a department tag\"))}`, {\n          position: \"bottom-center\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          className: \"text-center toast-notification\"\n        });\n      }\n    } else {\n      toast.error(`${_t(t(\"Please add items in order first\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }\n  }; //handle settle order\n\n\n  const handleSettleOrder = e => {\n    e.preventDefault();\n\n    if (newOrder && newOrder.length > 0) {\n      if (paidMoney < totalPayable) {\n        toast.error(`${_t(t(\"Please enter paid amount atleast equal to the total bill amount\"))}`, {\n          position: \"bottom-center\",\n          closeButton: false,\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          className: \"text-center toast-notification\"\n        });\n      } else {\n        axiosRequestForSettle();\n      }\n    } else {\n      toast.error(`${_t(t(\"Please add items in order list\"))}`, {\n        position: \"bottom-center\",\n        closeButton: false,\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }\n  }; //axios request for settlement\n\n\n  const axiosRequestForSettle = () => {\n    let url = BASE_URL + \"/settings/settle-order\";\n    let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\n    let formData = {\n      branch: orderDetails.branch,\n      customer: orderDetails.customer,\n      table: orderDetails.table,\n      waiter: orderDetails.waiter,\n      dept_tag: orderDetails.dept_tag,\n      payment_type: orderDetails.payment_type,\n      payment_amount: orderDetails.payment_amount,\n      newCustomer: orderDetails.newCustomer ? 1 : 0,\n      newCustomerInfo: orderDetails.newCustomerInfo,\n      token: orderDetails.token,\n      total_guest: orderDetails.total_guest,\n      orderItems: newOrder,\n      serviceCharge: orderDetails.serviceCharge,\n      discount: orderDetails.discount,\n      subTotal: theSubTotal,\n      totalPayable: totalPayable,\n      paidMoney: paidMoney,\n      theVat: theVat,\n      dept_commission: deptCommission,\n      localCurrency: localCurrency,\n      workPeriod: newSettings.workPeriod\n    };\n    setLoading(true);\n    axios.post(url, formData, {\n      headers: {\n        Authorization: `Bearer ${getCookie()}`\n      }\n    }).then(res => {\n      if (res.data !== \"ended\") {\n        if (res.data !== \"paymentIssue\") {\n          getFoodGroup();\n          handlePrint();\n          setCustomerForSearch(res.data[0][1]);\n          setWorkPeriodListForSearch(res.data[1][1]);\n          let tempCustomers = res.data[0][1] !== null && res.data[0][1].filter(eachCustomer => {\n            return parseInt(eachCustomer.branch_id) === orderDetails.branch.id;\n          });\n          setOrderDetailusers({ ...orderDetailUsers,\n            theCustomers: tempCustomers\n          }); //set work period\n\n          let theWorkPeriod = null;\n\n          if (orderDetails.branch !== undefined && orderDetails.branch !== null) {\n            theWorkPeriod = res.data[1][1] && res.data[1][1].filter(tempWorkPeriod => {\n              return orderDetails.branch.id === parseInt(tempWorkPeriod.branch_id);\n            }); //filter it with ended_at === null;\n\n            theWorkPeriod = theWorkPeriod && theWorkPeriod.find(endAtNullItem => {\n              return endAtNullItem.ended_at === null;\n            });\n          } //set work period here\n\n\n          setNewSettings({ ...newSettings,\n            vat: generalSettings && getSystemSettings(generalSettings, \"type_vat\"),\n            workPeriod: theWorkPeriod !== undefined ? theWorkPeriod : null\n          });\n        } else {\n          setLoading(false);\n          toast.error(`${_t(t(\"Please enter paid amount atleast equal to the total bill amount\"))}`, {\n            position: \"bottom-center\",\n            closeButton: false,\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            className: \"text-center toast-notification\"\n          });\n        }\n      } else {\n        setLoading(false);\n        toast.error(`${_t(t(\"Please restart the work period\"))}`, {\n          position: \"bottom-center\",\n          closeButton: false,\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          className: \"text-center toast-notification\"\n        });\n      }\n    }).catch(() => {\n      setLoading(false);\n      toast.error(`${_t(t(\"Please try again\"))}`, {\n        position: \"bottom-center\",\n        closeButton: false,\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    });\n  }; //print bills\n\n\n  const componentRef = useRef();\n  const component2Ref = useRef(); // only print bill\n  //for pos manager\n\n  const handleOnlyPrint = useReactToPrint({\n    content: () => componentRef.current,\n    onAfterPrint: () => {\n      if (getSystemSettings(generalSettings, \"print_kitchen_bill\") === \"1\") {\n        handleOnlyPrint2();\n      }\n    }\n  }); //for kithcen\n\n  const handleOnlyPrint2 = useReactToPrint({\n    content: () => component2Ref.current\n  }); //after order submit or settle\n  //for pos manager\n\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current,\n    onAfterPrint: () => {\n      if (getSystemSettings(generalSettings, \"print_kitchen_bill\") === \"1\") {\n        handlePrint2();\n      } else {\n        handleOrderSubmitSuccessful();\n      }\n    }\n  }); //for kithcen\n\n  const handlePrint2 = useReactToPrint({\n    content: () => component2Ref.current,\n    onAfterPrint: () => {\n      handleOrderSubmitSuccessful();\n    }\n  }); //call after successful order submit and settle\n\n  const handleOrderSubmitSuccessful = () => {\n    setNewOrder(null);\n    setActiveItemInOrder(null);\n    setSelectedVariation([]);\n    setSelectedPropertyGroup([]);\n    setSelectedProperties([]);\n    setTheSubTotal(0);\n    setTheVat(0);\n    setTotalPaybale(0);\n    setReturnMoneyUsd(0);\n    setPaidMoney(0);\n    setOrderDetails({\n      branch: orderDetails.branch,\n      customer: null,\n      table: null,\n      waiter: null,\n      dept_tag: null,\n      payment_type: null,\n      payment_amount: null,\n      total_guest: 1,\n      newCustomer: false,\n      newCustomerInfo: {\n        name: \"\",\n        number: \"\"\n      },\n      token: null,\n      serviceCharge: 0,\n      discount: 0\n    });\n    toast.success(`${_t(t(\"Order has been taken\"))}`, {\n      position: \"bottom-center\",\n      closeButton: false,\n      autoClose: 10000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      className: \"text-center toast-notification\"\n    });\n    setShowSettle(false);\n    setLoading(false); //sound\n\n    if (getSystemSettings(generalSettings, \"play_sound\") === \"1\") {\n      let beep = document.getElementById(\"myAudio\");\n      beep.play();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2016,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2017,\n      columnNumber: 17\n    }\n  }, _t(t(\"POS\")))), /*#__PURE__*/React.createElement(\"audio\", {\n    id: \"myAudio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2021,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: \"/assets/beep/beep.mp3\",\n    type: \"audio/mpeg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2022,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"audio\", {\n    id: \"myAudioOrder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2025,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: \"/assets/beep/order.mp3\",\n    type: \"audio/mpeg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2026,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2030,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: componentRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2031,\n      columnNumber: 17\n    }\n  }, newOrder && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-print\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2033,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2034,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2035,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2036,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-block fk-print-text font-weight-bold text-uppercase text-center sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2037,\n      columnNumber: 41\n    }\n  }, getSystemSettings(generalSettings, \"siteName\"), \",\", orderDetails && orderDetails.branch !== null && orderDetails.branch.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 sm-text fk-print-text text-center text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2044,\n      columnNumber: 41\n    }\n  }, orderDetails && orderDetails.branch !== null && orderDetails.branch.address), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 sm-text fk-print-text text-center text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2049,\n      columnNumber: 41\n    }\n  }, _t(t(\"call\")), \":\", \" \", orderDetails && orderDetails.branch !== null && orderDetails.branch.phn_no ? orderDetails.branch.phn_no : \"\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 sm-text fk-print-text text-center text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2057,\n      columnNumber: 41\n    }\n  }, getSystemSettings(generalSettings, \"type_print_heading\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-block fk-print-text text-uppercase text-center lg-text myBorderTopCustomer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2060,\n      columnNumber: 41\n    }\n  }, _t(t(\"Token No\")), \"-\", orderDetails && orderDetails.token.id), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 fk-print-text text-capitalize lg-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2064,\n      columnNumber: 41\n    }\n  }, orderDetails && orderDetails.dept_tag && orderDetails.dept_tag.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 mt-0 sm-text fk-print-text text-capitalize text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2069,\n      columnNumber: 41\n    }\n  }, _t(t(\"Customer Copy\"))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 xsm-text fk-print-text text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2075,\n      columnNumber: 41\n    }\n  }, _t(t(\"date\")), \": \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"LL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2076,\n      columnNumber: 62\n    }\n  }, new Date()), \", \", orderDetails && /*#__PURE__*/React.createElement(Moment, {\n    format: \"LT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2079,\n      columnNumber: 49\n    }\n  }, orderDetails.token.time)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 xsm-text fk-print-text text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2082,\n      columnNumber: 41\n    }\n  }, _t(t(\"Total guests\")), \":\", \" \", orderDetails && orderDetails.total_guest), orderDetails && orderDetails.waiter !== null ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 xsm-text fk-print-text text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2088,\n      columnNumber: 45\n    }\n  }, _t(t(\"waiter name\")), \": \", orderDetails.waiter.name) : \"\", /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 sm-text fk-print-text text-capitalize lg-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2095,\n      columnNumber: 41\n    }\n  }, \"PAID\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 table-borderless akash-table-for-print-padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2099,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2100,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2101,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"fk-print-text xsm-text text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2102,\n      columnNumber: 53\n    }\n  }, _t(t(\"qty\")), \" \", _t(t(\"item\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"fk-print-text xsm-text text-capitalize text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2108,\n      columnNumber: 53\n    }\n  }, _t(t(\"T\")), \".\", _t(t(\"price\"))))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2116,\n      columnNumber: 45\n    }\n  }, newOrder.map((printItem, printItemIndex) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2119,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"fk-print-text xsm-text text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2120,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2121,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"d-inline-block xsm-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2122,\n        columnNumber: 69\n      }\n    }, \"-\", printItem.quantity, \" \", printItem.item.name, parseInt(printItem.item.has_variation) === 1 && printItem.variation && \"(\" + printItem.variation.variation_name + \")\")), printItem.properties && printItem.properties.length > 0 && selectedPropertyGroup[printItemIndex] !== undefined && selectedPropertyGroup[printItemIndex].map(thisIsGroup => {\n      let theGroup = propertyGroupForSearch && propertyGroupForSearch.find(theItem => {\n        return theItem.id === thisIsGroup;\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2148,\n          columnNumber: 81\n        }\n      }, printItem.properties.map((propertyName, propertyIndex) => {\n        if (parseInt(propertyName.item.property_group_id) === theGroup.id) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            className: \"text-capitalize xsm-text d-inline-block mr-1\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2158,\n              columnNumber: 101\n            }\n          }, \"-\", printItem.quantity, propertyName.quantity > 1 ? \"*\" + propertyName.quantity : \"\", \" \", propertyName.item.name, /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2165,\n              columnNumber: 105\n            }\n          }));\n        } else {\n          return true;\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"fk-print-text xsm-text text-capitalize text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2178,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-block xsm-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2179,\n        columnNumber: 65\n      }\n    }, showPriceOfEachOrderItemPrint(printItemIndex)), printItem.properties && printItem.properties.length > 0 && selectedPropertyGroup[printItemIndex] !== undefined && selectedPropertyGroup[printItemIndex].map((thisIsGroup, thisIsGroupPaddingTopIndex) => {\n      let theGroup = propertyGroupForSearch && propertyGroupForSearch.find(theItem => {\n        return theItem.id === thisIsGroup;\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-block\",\n        className: `text-capitalize xsm-text ${thisIsGroupPaddingTopIndex === 0 ? [parseInt(printItem.item.has_variation) === 1 ? [printItem.properties && printItem.properties.length > 0 ? \"addonPadding35\" : \"addonPadding24\"] : [printItem.properties && printItem.properties.length > 0 ? \"addonPadding24\" : \"\"]] : \"\"}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2202,\n          columnNumber: 81\n        }\n      }, printItem.properties.map((propertyName, propertyIndex) => {\n        if (parseInt(propertyName.item.property_group_id) === theGroup.id) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2236,\n              columnNumber: 101\n            }\n          }, formatPrice(printItem.quantity * propertyName.quantity * propertyName.item.extra_price), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2243,\n              columnNumber: 105\n            }\n          }));\n        } else {\n          return true;\n        }\n      }));\n    })));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"myBorder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2261,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 table-borderless\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2262,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2263,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2264,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"fk-print-text xsm-text text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2265,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2266,\n      columnNumber: 57\n    }\n  }, _t(t(\"total\")))), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"fk-print-text xsm-text text-capitalize text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2268,\n      columnNumber: 53\n    }\n  }, formatPrice(theSubTotal))))), theVat > 0 && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 table-borderless\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2276,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2277,\n      columnNumber: 49\n    }\n  }, getSystemSettings(generalSettings, \"vat_system\") === \"igst\" ? /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2280,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"fk-print-text xsm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2281,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-block xsm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2282,\n      columnNumber: 65\n    }\n  }, \"VAT(\", newSettings !== null && newSettings.vat, \"%)\")), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"fk-print-text xsm-text text-capitalize text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2287,\n      columnNumber: 61\n    }\n  }, formatPrice(theVat))) : getSystemSettings(generalSettings, \"vat_system\") === \"cgst\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2294,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"fk-print-text xsm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2295,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-block xsm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2296,\n      columnNumber: 69\n    }\n  }, \"CGST(\", getSystemSettings(generalSettings, \"cgst\"), \"%)\")), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"fk-print-text xsm-text text-capitalize text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2302,\n      columnNumber: 65\n    }\n  }, formatPrice(theSubTotal * (parseFloat(getSystemSettings(generalSettings, \"cgst\")) / 100)))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2315,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"fk-print-text xsm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2316,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-block xsm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2317,\n      columnNumber: 69\n    }\n  }, \"SGST(\", getSystemSettings(generalSettings, \"sgst\"), \"%)\")), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"fk-print-text xsm-text text-capitalize text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2323,\n      columnNumber: 65\n    }\n  }, formatPrice(theSubTotal * (parseFloat(getSystemSettings(generalSettings, \"sgst\")) / 100))))) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2338,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"fk-print-text xsm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2339,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-block xsm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2340,\n      columnNumber: 65\n    }\n  }, \"TAX(\", newSettings !== null && newSettings.tax, \"%)\")), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"fk-print-text xsm-text text-capitalize text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2345,\n      columnNumber: 61\n    }\n  }, formatPrice(theVat))))), getSystemSettings(generalSettings, \"sDiscount\") === \"flat\" && /*#__PURE__*/React.createElement(React.Fragment, null, orderDetails.serviceCharge > 0 && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 table-borderless\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2358,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2359,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2360,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"fk-print-text xsm-text text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2361,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2362,\n      columnNumber: 73\n    }\n  }, _t(t(\"S.Charge\")))), orderDetails && /*#__PURE__*/React.createElement(\"td\", {\n    className: \"fk-print-text xsm-text text-capitalize text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2368,\n      columnNumber: 73\n    }\n  }, formatPrice(orderDetails.serviceCharge))))), orderDetails.discount > 0 && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 table-borderless\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2378,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2379,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2380,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"fk-print-text xsm-text text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2381,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2382,\n      columnNumber: 73\n    }\n  }, _t(t(\"discount\")))), orderDetails && /*#__PURE__*/React.createElement(\"td\", {\n    className: \"fk-print-text xsm-text text-capitalize text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2387,\n      columnNumber: 73\n    }\n  }, formatPrice(orderDetails.discount)))))), getSystemSettings(generalSettings, \"sDiscount\") === \"percentage\" && /*#__PURE__*/React.createElement(React.Fragment, null, orderDetails.serviceCharge > 0 && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 table-borderless\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2402,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2403,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2404,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"fk-print-text xsm-text text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2405,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2406,\n      columnNumber: 73\n    }\n  }, _t(t(\"S.Charge\")), orderDetails && \"(\" + orderDetails.serviceCharge + \"%)\")), orderDetails && /*#__PURE__*/React.createElement(\"td\", {\n    className: \"fk-print-text xsm-text text-capitalize text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2414,\n      columnNumber: 73\n    }\n  }, formatPrice(theSubTotal * (orderDetails.serviceCharge / 100)))))), orderDetails.discount > 0 && /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 table-borderless\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2427,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2428,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2429,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"fk-print-text xsm-text text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2430,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2431,\n      columnNumber: 73\n    }\n  }, _t(t(\"discount\")), orderDetails && \"(\" + orderDetails.discount + \"%)\")), orderDetails && /*#__PURE__*/React.createElement(\"td\", {\n    className: \"fk-print-text xsm-text text-capitalize text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2438,\n      columnNumber: 73\n    }\n  }, formatPrice(theSubTotal * (orderDetails.discount / 100))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"myBorder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2452,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 table-borderless\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2453,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2454,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2455,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"fk-print-text xsm-text text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2456,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2457,\n      columnNumber: 57\n    }\n  }, _t(t(\"grand total\")))), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"fk-print-text xsm-text text-capitalize text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2461,\n      columnNumber: 53\n    }\n  }, formatPrice(totalPayable))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2465,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"fk-print-text xsm-text text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2466,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2467,\n      columnNumber: 57\n    }\n  }, _t(t(\"Return Amount\")))), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"fk-print-text xsm-text text-capitalize text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2471,\n      columnNumber: 53\n    }\n  }, formatPrice(returnMoneyUsd))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"myBorder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2478,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 xsm-text fk-print-text text-center text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2479,\n      columnNumber: 41\n    }\n  }, getSystemSettings(generalSettings, \"type_print_footer\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 xsm-text fk-print-text text-capitalize text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2482,\n      columnNumber: 41\n    }\n  }, _t(t(\"bill prepared by\")), \":\", \" \", authUserInfo && authUserInfo.details && authUserInfo.details.name))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2497,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: component2Ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2498,\n      columnNumber: 17\n    }\n  }, newOrder && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-print\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2500,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2501,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2502,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2503,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-block fk-print-text fk-print-text--bold text-uppercase text-center lg-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2504,\n      columnNumber: 41\n    }\n  }, _t(t(\"Token No\")), \"-\", orderDetails && orderDetails.token.id), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 fk-print-text text-capitalize lg-text fk-print-text--bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2508,\n      columnNumber: 41\n    }\n  }, orderDetails && orderDetails.dept_tag && orderDetails.dept_tag.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 mt-0 fk-print-text text-capitalize text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2513,\n      columnNumber: 41\n    }\n  }, _t(t(\"kitchen orders\"))), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 table-borderless\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2517,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2518,\n      columnNumber: 45\n    }\n  }, orderFoodGroups && orderFoodGroups.map((theGrp, grpIndex) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2523,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2524,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${grpIndex === 0 ? \"myBorder\" : \"myBorderBottom\"} lg-text fk-print-text--bold fk-print-text`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2525,\n        columnNumber: 73\n      }\n    }, theGrp.name))), newOrder.map((printItem, printItemIndex) => {\n      if (theGrp.id === parseInt(printItem.item.food_group_id)) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n          className: \"myBorderBottom\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2543,\n            columnNumber: 81\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          className: \"fk-print-text text-capitalize\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2544,\n            columnNumber: 85\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex flex-wrap\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2545,\n            columnNumber: 89\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"d-inline-block lg-text fk-print-text--bold fk-print-text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2546,\n            columnNumber: 93\n          }\n        }, printItem.item.name), parseInt(printItem.item.has_variation) === 1 && printItem.variation && /*#__PURE__*/React.createElement(\"span\", {\n          className: \"d-inline-block lg-text fk-print-text--bold fk-print-text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2553,\n            columnNumber: 101\n          }\n        }, \"(\", printItem.variation.variation_name, \")\"), \":-\", printItem.quantity), printItem.properties && printItem.properties.length > 0 && selectedPropertyGroup[printItemIndex] !== undefined && selectedPropertyGroup[printItemIndex].map(thisIsGroup => {\n          let theGroup = propertyGroupForSearch && propertyGroupForSearch.find(theItem => {\n            return theItem.id === thisIsGroup;\n          });\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"d-flex flex-wrap\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2585,\n              columnNumber: 101\n            }\n          }, printItem.properties.map((propertyName, propertyIndex) => {\n            if (parseInt(propertyName.item.property_group_id) === theGroup.id) {\n              return /*#__PURE__*/React.createElement(\"span\", {\n                className: \"text-capitalize d-inline-block mr-1 fk-print-text lg-text fk-print-text--bold\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2598,\n                  columnNumber: 121\n                }\n              }, propertyName.item.name, \" \", /*#__PURE__*/React.createElement(\"span\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2603,\n                  columnNumber: 125\n                }\n              }, \" \", propertyName.quantity > 1 && \"(\" + propertyName.quantity + \")\"), printItem.properties.length - 1 !== propertyIndex && \",\");\n            } else {\n              return true;\n            }\n          }));\n        }))));\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2639,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 xsm-text fk-print-text text-capitalize lg-text fk-print-text--bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2640,\n      columnNumber: 45\n    }\n  }, _t(t(\"date\")), \":\", \" \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"LL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2642,\n      columnNumber: 49\n    }\n  }, new Date())), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 xsm-text fk-print-text text-capitalize lg-text fk-print-text--bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2644,\n      columnNumber: 45\n    }\n  }, _t(t(\"Time\")), \":\", orderDetails && /*#__PURE__*/React.createElement(Moment, {\n    format: \"LT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2647,\n      columnNumber: 53\n    }\n  }, orderDetails.token.time))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal fade\",\n    id: \"menuAddons\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2660,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog modal-fullscreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2661,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2662,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header align-items-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2663,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-sm-card__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2664,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-capitalize fk-sm-card__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2665,\n      columnNumber: 33\n    }\n  }, foodItem.selectedItem !== null && foodItem.selectedItem.name)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2669,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2676,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-sm-card__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2678,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-sm-card__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2679,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-capitalize fk-sm-card__title t-mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2680,\n      columnNumber: 37\n    }\n  }, _t(t(\"Variations\")))), foodItem.variations && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize xxsm-text fk-badge fk-badge--secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2685,\n      columnNumber: 37\n    }\n  }, _t(t(\"Required\")))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2690,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list addons-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2691,\n      columnNumber: 29\n    }\n  }, foodItem.variations ? /*#__PURE__*/React.createElement(React.Fragment, null, foodItem.variations.map(variationItem => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"addons-list__item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2696,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2697,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2698,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"mx-checkbox flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2699,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"mx-checkbox__input mx-checkbox__input-solid mx-checkbox__input-solid--danger mx-checkbox__input-sm mt-0-kitchen\",\n      name: \"variation\",\n      onChange: () => {\n        handleOrderItemVariation(variationItem);\n      },\n      checked: checkChecked(variationItem),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2700,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"mx-checkbox__text text-capitalize t-text-heading t-ml-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2709,\n        columnNumber: 65\n      }\n    }, variationItem.variation_name))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2714,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-text-heading text-uppercase sm-text flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2715,\n        columnNumber: 61\n      }\n    }, currencySymbolLeft(), formatPrice(variationItem.food_with_variation_price), currencySymbolRight()))));\n  })) : /*#__PURE__*/React.createElement(\"li\", {\n    className: \"addons-list__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2729,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2730,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center text-primary text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2731,\n      columnNumber: 45\n    }\n  }, _t(t(\"No Variations\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: foodItem.properties ? \"\" : \"d-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2740,\n      columnNumber: 29\n    }\n  }, foodItem.properties && /*#__PURE__*/React.createElement(React.Fragment, null, foodItem.properties.length > 0 ? foodItem.properties.map(propertyItem => {\n    let selectedGroup = null; //property group\n\n    if (propertyItem.length > 0) {\n      selectedGroup = propertyGroupForSearch && propertyGroupForSearch.find(singlePropertyGroup => {\n        return singlePropertyGroup.id === parseInt(propertyItem[0].property_group_id);\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fk-sm-card__container t-mt-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2763,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fk-sm-card__content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2764,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"text-capitalize fk-sm-card__title t-mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2765,\n        columnNumber: 65\n      }\n    }, selectedGroup && selectedGroup.name)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-capitalize xxsm-text fk-badge fk-badge--secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2769,\n        columnNumber: 61\n      }\n    }, _t(t(\"Optional\")))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2773,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"t-list addons-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2774,\n        columnNumber: 57\n      }\n    }, propertyItem.map(eachItem => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: \"addons-list__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2777,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2778,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2779,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"mx-checkbox flex-grow-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2780,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"mx-checkbox__input mx-checkbox__input-solid mx-checkbox__input-solid--danger mx-checkbox__input-sm mt-0-kitchen\",\n        onChange: () => {\n          newOrder && newOrder.map((newOrderItem, index) => {\n            if (index === activeItemInOrder) {\n              if (newOrderItem.properties) {\n                let theItem = newOrderItem.properties.find(eachPropertyItem => {\n                  return eachPropertyItem.item.id === eachItem.id;\n                });\n\n                if (theItem === undefined) {\n                  handleAddProperties(eachItem);\n                } else {\n                  handleRemoveProperties(eachItem);\n                }\n              } else {\n                handleAddProperties(eachItem);\n              }\n            }\n          });\n        },\n        checked: checkCheckedProperties(eachItem),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2781,\n          columnNumber: 85\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mx-checkbox__text text-capitalize t-text-heading t-ml-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2832,\n          columnNumber: 85\n        }\n      }, eachItem.name))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2837,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fk-qty flex-grow-1 justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2838,\n          columnNumber: 81\n        }\n      }, parseInt(eachItem.allow_multi_quantity) === 1 && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"fk-qty__icon fk-qty__deduct\",\n        onClick: () => {\n          handlePropertyQty(eachItem, \"-\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2842,\n          columnNumber: 93\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"las la-minus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2851,\n          columnNumber: 97\n        }\n      })), parseInt(eachItem.allow_multi_quantity) === 1 ? /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: checkCheckedPropertyQuantity(eachItem),\n        className: \"fk-qty__input t-bg-clear\",\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2857,\n          columnNumber: 89\n        }\n      }) : \"-\", parseInt(eachItem.allow_multi_quantity) === 1 && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"fk-qty__icon fk-qty__add\",\n        onClick: () => {\n          handlePropertyQty(eachItem, \"+\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2871,\n          columnNumber: 93\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"las la-plus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2880,\n          columnNumber: 97\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col text-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2885,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"t-text-heading text-uppercase sm-text flex-grow-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2886,\n          columnNumber: 81\n        }\n      }, currencySymbolLeft(), formatPrice(eachItem.extra_price), currencySymbolRight()))));\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2897,\n        columnNumber: 57\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(\"li\", {\n    className: \"addons-list__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2902,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2903,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center text-primary text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2904,\n      columnNumber: 53\n    }\n  }, _t(t(\"No properties\"))))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal fade\",\n    id: \"showCart\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2921,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog modal-fullscreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2922,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2923,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2924,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2925,\n      columnNumber: 29\n    }\n  }, _t(t(\"Order details\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2926,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2933,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2934,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2935,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sm-text font-weight-bold text-uppercase font-italic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2936,\n      columnNumber: 37\n    }\n  }, _t(t(\"Order token\")), \":\", \" \", newOrder ? /*#__PURE__*/React.createElement(React.Fragment, null, \"#\", orderDetails.token.id, \" -\", \" \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"LT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2941,\n      columnNumber: 49\n    }\n  }, orderDetails.token.time)) : \"\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-sm-card__container t-mt-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2949,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-sm-card__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2950,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-capitalize fk-sm-card__title t-mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2951,\n      columnNumber: 37\n    }\n  }, _t(t(\"order items\"))))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2956,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list addons-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2957,\n      columnNumber: 29\n    }\n  }, newOrder && newOrder.length > 0 ? newOrder.map((orderListItem, orderListItemIndex) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n      className: `addons-list__item px-1 ${orderListItemIndex === activeItemInOrder && \"active\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2963,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex align-items-center justify-content-between\",\n      onClick: e => {\n        e.preventDefault(); //orderListItem's group wise all items\n\n        let tempItems = foodForSearch && foodForSearch.filter(tempItem => {\n          return tempItem.food_group_id === orderListItem.item.food_group_id;\n        }); //orderListItem's group\n\n        let foodGroup = foodGroupForSearch && foodGroupForSearch.find(groupItem => {\n          return groupItem.id === parseInt(orderListItem.item.food_group_id);\n        }); // selected pos item\n\n        let selectedItemTemp = tempItems && tempItems.find(tempSelectedItem => {\n          return tempSelectedItem.id === orderListItem.item.id;\n        }); // Set variations, properties, selected item\n\n        setFoodItem({ ...foodItem,\n          foodGroup: foodGroup,\n          items: tempItems,\n          selectedItem: selectedItemTemp,\n          variations: selectedItemTemp && parseInt(selectedItemTemp.has_variation) === 1 ? selectedItemTemp.variations : null,\n          properties: selectedItemTemp && parseInt(selectedItemTemp.has_property) === 1 ? selectedItemTemp.properties : null\n        }); //set active order list index for background color of selected\n\n        setActiveItemInOrder(orderListItemIndex);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2967,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3023,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `t-text-heading sm-text text-capitalize d-block ${orderListItemIndex === activeItemInOrder && \"text-white\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3024,\n        columnNumber: 61\n      }\n    }, orderListItem.item.name), parseInt(orderListItem.item.has_variation) === 1 && orderListItem.variation && /*#__PURE__*/React.createElement(\"span\", {\n      className: `xxsm-text text-capitalize d-block ${orderListItemIndex === activeItemInOrder && \"text-white\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3034,\n        columnNumber: 69\n      }\n    }, _t(t(\"Variation\")), \":\", \" \", orderListItem.variation.variation_name), orderListItem.properties && orderListItem.properties.length > 0 && selectedPropertyGroup[orderListItemIndex] !== undefined && selectedPropertyGroup[orderListItemIndex].map(thisIsGroup => {\n      let theGroup = propertyGroupForSearch && propertyGroupForSearch.find(theItem => {\n        return theItem.id === thisIsGroup;\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3057,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-capitalize xxsm-text d-inline-block mr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3058,\n          columnNumber: 81\n        }\n      }, theGroup && theGroup.name, \" :\"), orderListItem.properties.map((propertyName, propertyIndex) => {\n        if (parseInt(propertyName.item.property_group_id) === theGroup.id) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            className: \"text-capitalize xxsm-text d-inline-block mr-1\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 3070,\n              columnNumber: 97\n            }\n          }, propertyName.item.name, \" \", /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 3072,\n              columnNumber: 101\n            }\n          }, \" \", propertyName.quantity > 1 && \"(\" + propertyName.quantity + \")\"), orderListItem.properties.length - 1 !== propertyIndex && \",\");\n        } else {\n          return true;\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3098,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fk-qty flex-grow-1 justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3099,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fk-qty__icon\",\n      onClick: () => {\n        handleOrderItemQty(\"-\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3100,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"las la-minus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3106,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: orderListItem.quantity,\n      className: `fk-qty__input t-bg-clear ${orderListItemIndex === activeItemInOrder && \"text-white\"}`,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3108,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fk-qty__icon\",\n      onClick: () => {\n        handleOrderItemQty(\"+\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3116,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"las la-plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3122,\n        columnNumber: 69\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3127,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `t-text-heading text-uppercase sm-text flex-grow-1 ${orderListItemIndex === activeItemInOrder && \"text-white\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3128,\n        columnNumber: 61\n      }\n    }, parseInt(orderListItem.item.has_variation) === 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, currencySymbolLeft(), showPriceOfEachOrderItem(orderListItemIndex), currencySymbolRight()) : /*#__PURE__*/React.createElement(React.Fragment, null, currencySymbolLeft(), showPriceOfEachOrderItem(orderListItemIndex), currencySymbolRight()))))), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-capitalize  t-pt-5 t-pb-5 t-pl-5 t-pr-5 sm-text font-weight-bold make-this-relative-mobile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3156,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge rounded-pill bg-secondary text-capitalize\",\n      onClick: () => {\n        handleRemoveItemFromOrderList(orderListItemIndex);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3157,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3163,\n        columnNumber: 57\n      }\n    }))));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-primary text-center font-weight-bold pt-2 xsm-text text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3170,\n      columnNumber: 37\n    }\n  }, _t(t(\"Select food item to add to the list\")))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3175,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3176,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3177,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3178,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3179,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3180,\n      columnNumber: 45\n    }\n  }, \" \", _t(t(\"sub total\")), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3185,\n      columnNumber: 41\n    }\n  }, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3186,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3187,\n      columnNumber: 45\n    }\n  }, newOrder ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3189,\n      columnNumber: 53\n    }\n  }, currencySymbolLeft(), formatPrice(theSubTotal), currencySymbolRight()) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3195,\n      columnNumber: 53\n    }\n  }, currencySymbolLeft(), formatPrice(0), currencySymbolRight()))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3205,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3206,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3207,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3208,\n      columnNumber: 45\n    }\n  }, getSystemSettings(generalSettings, \"vat_system\") === \"igst\" ? `vat(${newSettings !== null && newSettings.vat})` : getSystemSettings(generalSettings, \"vat_system\") === \"cgst\" ? \"cgst+sgst\" + \"(\" + getSystemSettings(generalSettings, \"cgst\") + \"+\" + getSystemSettings(generalSettings, \"sgst\") + \")\" : `tax(${newSettings !== null && newSettings.tax})`, \"%:\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3224,\n      columnNumber: 41\n    }\n  }, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3225,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3226,\n      columnNumber: 45\n    }\n  }, currencySymbolLeft(), formatPrice(theVat), currencySymbolRight())))), getSystemSettings(generalSettings, \"sDiscount\") === \"flat\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3236,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3237,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3238,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3239,\n      columnNumber: 53\n    }\n  }, \" \", _t(t(\"service\")), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3244,\n      columnNumber: 49\n    }\n  }, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3245,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3246,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    step: \"0.01\",\n    min: \"0\",\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold form-control rounded-0 text-right\",\n    onChange: e => {\n      if (e.target.value !== \"\") {\n        setOrderDetails({ ...orderDetails,\n          serviceCharge: parseFloat(e.target.value)\n        });\n        let totalPayable = 0;\n        let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\n        let usdServiceCharge = parseFloat(e.target.value) / localCurrency.rate;\n        let usdDiscount = parseFloat(orderDetails.discount) / localCurrency.rate;\n        totalPayable = theSubTotal + theVat + usdServiceCharge - usdDiscount;\n        setTotalPaybale(totalPayable);\n        setReturnMoneyUsd(totalPayable - paidMoney);\n      } else {\n        setOrderDetails({ ...orderDetails,\n          serviceCharge: 0\n        });\n        let totalPayable = 0;\n        let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\n        let usdServiceCharge = parseFloat(0) / localCurrency.rate;\n        let usdDiscount = parseFloat(orderDetails.discount) / localCurrency.rate;\n        totalPayable = theSubTotal + theVat + usdServiceCharge - usdDiscount;\n        setTotalPaybale(totalPayable);\n        setReturnMoneyUsd(totalPayable - paidMoney);\n      }\n    },\n    value: orderDetails.serviceCharge !== 0 && orderDetails.serviceCharge,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3247,\n      columnNumber: 57\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3309,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3310,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3311,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3312,\n      columnNumber: 53\n    }\n  }, \" \", _t(t(\"discount\")), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3317,\n      columnNumber: 49\n    }\n  }, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3318,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3319,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    step: \"0.01\",\n    min: \"0\",\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold form-control rounded-0 text-right\",\n    onChange: e => {\n      if (e.target.value !== \"\") {\n        setOrderDetails({ ...orderDetails,\n          discount: parseFloat(e.target.value)\n        });\n        let totalPayable = 0;\n        let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\n        let usdServiceCharge = parseFloat(orderDetails.serviceCharge) / localCurrency.rate;\n        let usdDiscount = parseFloat(e.target.value) / localCurrency.rate;\n        totalPayable = theSubTotal + theVat + usdServiceCharge - usdDiscount;\n        setTotalPaybale(totalPayable);\n        setReturnMoneyUsd(totalPayable - paidMoney);\n      } else {\n        setOrderDetails({ ...orderDetails,\n          discount: 0\n        });\n        let totalPayable = 0;\n        let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\n        let usdServiceCharge = parseFloat(orderDetails.serviceCharge) / localCurrency.rate;\n        let usdDiscount = parseFloat(0) / localCurrency.rate;\n        totalPayable = theSubTotal + theVat + usdServiceCharge - usdDiscount;\n        setTotalPaybale(totalPayable);\n        setReturnMoneyUsd(totalPayable - paidMoney);\n      }\n    },\n    value: orderDetails.discount !== 0 && orderDetails.discount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3320,\n      columnNumber: 57\n    }\n  })))))), getSystemSettings(generalSettings, \"sDiscount\") === \"percentage\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3389,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3390,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3391,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3392,\n      columnNumber: 57\n    }\n  }, \" \", _t(t(\"service\")), \" %\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3398,\n      columnNumber: 53\n    }\n  }, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3399,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3400,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    step: \"0.01\",\n    min: \"0\",\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold form-control rounded-0 text-right\",\n    onChange: e => {\n      if (e.target.value !== \"\") {\n        setOrderDetails({ ...orderDetails,\n          serviceCharge: parseFloat(e.target.value)\n        });\n        let totalPayable = 0; // let localCurrency = JSON.parse(\n        //   localStorage.getItem(\n        //     \"currency\"\n        //   )\n        // );\n        // let usdServiceCharge =\n        //   parseFloat(e.target.value) /\n        //   localCurrency.rate;\n        // console.log(\"coming\");\n\n        let usdServiceCharge = theSubTotal * (parseFloat(e.target.value) / 100); // let usdDiscount =\n        //   parseFloat(\n        //     orderDetails.discount\n        //   ) / localCurrency.rate;\n\n        let usdDiscount = theSubTotal * (parseFloat(orderDetails.discount) / 100);\n        totalPayable = theSubTotal + theVat + usdServiceCharge - usdDiscount;\n        setTotalPaybale(totalPayable);\n      } else {\n        setOrderDetails({ ...orderDetails,\n          serviceCharge: 0\n        });\n        let totalPayable = 0; // let localCurrency = JSON.parse(\n        //   localStorage.getItem(\n        //     \"currency\"\n        //   )\n        // );\n        // let usdServiceCharge =\n        //   parseFloat(0) /\n        //   localCurrency.rate;\n\n        let usdServiceCharge = 0; // let usdDiscount =\n        //   parseFloat(\n        //     orderDetails.discount\n        //   ) / localCurrency.rate;\n\n        let usdDiscount = theSubTotal * (parseFloat(orderDetails.discount) / 100);\n        totalPayable = theSubTotal + theVat + usdServiceCharge - usdDiscount;\n        setTotalPaybale(totalPayable);\n      }\n    },\n    value: orderDetails.serviceCharge !== 0 && orderDetails.serviceCharge,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3401,\n      columnNumber: 61\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3483,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3484,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3485,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3486,\n      columnNumber: 57\n    }\n  }, \" \", _t(t(\"discount\")), \" %\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3492,\n      columnNumber: 53\n    }\n  }, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3493,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3494,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    step: \"0.01\",\n    min: \"0\",\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold form-control rounded-0 text-right\",\n    onChange: e => {\n      if (e.target.value !== \"\") {\n        setOrderDetails({ ...orderDetails,\n          discount: parseFloat(e.target.value)\n        });\n        let totalPayable = 0; // let localCurrency = JSON.parse(\n        //   localStorage.getItem(\n        //     \"currency\"\n        //   )\n        // );\n        // let usdServiceCharge =\n        //   parseFloat(\n        //     orderDetails.serviceCharge\n        //   ) / localCurrency.rate;\n\n        let usdServiceCharge = theSubTotal * (parseFloat(orderDetails.serviceCharge) / 100); // let usdDiscount =\n        //   parseFloat(e.target.value) /\n        //   localCurrency.rate;\n\n        let usdDiscount = theSubTotal * (parseFloat(e.target.value) / 100);\n        totalPayable = theSubTotal + theVat + usdServiceCharge - usdDiscount;\n        setTotalPaybale(totalPayable);\n      } else {\n        setOrderDetails({ ...orderDetails,\n          discount: 0\n        });\n        let totalPayable = 0; // let localCurrency = JSON.parse(\n        //   localStorage.getItem(\n        //     \"currency\"\n        //   )\n        // );\n\n        let usdServiceCharge = theSubTotal * (parseFloat(orderDetails.serviceCharge) / 100);\n        let usdDiscount = 0;\n        totalPayable = theSubTotal + theVat + usdServiceCharge - usdDiscount;\n        setTotalPaybale(totalPayable);\n      }\n    },\n    value: orderDetails.discount !== 0 && orderDetails.discount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3495,\n      columnNumber: 61\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3575,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3576,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3577,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3578,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3579,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3580,\n      columnNumber: 45\n    }\n  }, _t(t(\"total bill\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3584,\n      columnNumber: 41\n    }\n  }, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3585,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3586,\n      columnNumber: 45\n    }\n  }, currencySymbolLeft(), formatPrice(totalPayable), currencySymbolRight()))))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3595,\n      columnNumber: 29\n    }\n  }), returnMoneyUsd > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3597,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3598,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3599,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3600,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text font-weight-bold text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3601,\n      columnNumber: 49\n    }\n  }, _t(t(\"Return\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3605,\n      columnNumber: 45\n    }\n  }, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3606,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text font-weight-bold text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3607,\n      columnNumber: 49\n    }\n  }, currencySymbolLeft(), formatPrice(Math.abs(returnMoneyUsd)), currencySymbolRight())))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3615,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row py-2 mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3619,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary xsm-text text-uppercase col-3\",\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3620,\n      columnNumber: 29\n    }\n  }, _t(t(\"Cancel\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary xsm-text text-uppercase ml-auto mr-1 col-4\",\n    onClick: !loading && handleSettleOrder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3627,\n      columnNumber: 29\n    }\n  }, !loading ? _t(t(\"settle\")) : _t(t(\"Please wait\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-success xsm-text text-uppercase col-4\",\n    onClick: !loading && handleSubmitOrder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3634,\n      columnNumber: 29\n    }\n  }, !loading ? _t(t(\"submit\")) : _t(t(\"Please wait\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal fade\",\n    id: \"extraInfo\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3648,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog modal-fullscreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3649,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3650,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3651,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-sm-card__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3652,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-capitalize fk-sm-card__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3653,\n      columnNumber: 33\n    }\n  }, _t(t(\"additional information\")))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3657,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3664,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list addons-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3665,\n      columnNumber: 29\n    }\n  }, authUserInfo.details && authUserInfo.details.user_type !== \"staff\" && /*#__PURE__*/React.createElement(\"li\", {\n    className: \"addons-list__item mt-1 mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3668,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: branchForSearch && branchForSearch,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    classNamePrefix: \"select\",\n    className: \"xsm-text\",\n    onChange: handleSetBranch,\n    maxMenuHeight: \"200px\",\n    placeholder: _t(t(\"Branch\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3669,\n      columnNumber: 45\n    }\n  })), !loading && /*#__PURE__*/React.createElement(React.Fragment, null, orderDetails.branch !== null && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n    className: `addons-list__item mx-1 ${authUserInfo.details && authUserInfo.details.user_type === \"staff\" && \"mt-1\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3686,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: orderDetailUsers.theCustomers !== null && orderDetailUsers.theCustomers,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name + \" (\" + option.phn_no + \")\",\n    getOptionValue: option => option.name,\n    classNamePrefix: \"select\",\n    className: \"xsm-text\",\n    onChange: handleSetCustomer,\n    maxMenuHeight: \"200px\",\n    placeholder: _t(t(\"Customer\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3692,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"addons-list__item mx-1 border border-2 rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3709,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3710,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"fk-right-nav__guest-btn btn w-100 t-bg-white dropdown-toggle new-customer-pos xsm-text pl-2\",\n    \"data-toggle\": \"dropdown\",\n    \"aria-expanded\": \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3711,\n      columnNumber: 57\n    }\n  }, \"+ \", _t(t(\"Customer\")), \"?\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"dropdown-menu w-100 border-0 pt-4 change-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3719,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3720,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    className: \"form-control font-10px rounded-lg\",\n    placeholder: \"Name\",\n    autoComplete: \"off\",\n    value: orderDetails.newCustomerInfo.name,\n    onChange: handleNewCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3721,\n      columnNumber: 65\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"pb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3731,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"number\",\n    className: \"form-control font-10px mt-2 rounded-lg\",\n    autoComplete: \"off\",\n    placeholder: \"Number\",\n    value: orderDetails.newCustomerInfo.number,\n    onChange: handleNewCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3732,\n      columnNumber: 65\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"pb-1 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3742,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn t-bg-white text-dark xsm-text text-uppercase btn-sm py-0 px-2 mr-1\",\n    onClick: () => {\n      setOrderDetails({ ...orderDetails,\n        newCustomer: false,\n        newCustomerInfo: {\n          name: \"\",\n          number: \"\"\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3743,\n      columnNumber: 65\n    }\n  }, _t(t(\"Cancel\"))))))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"addons-list__item mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3763,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: deptTagForSearch && deptTagForSearch,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    classNamePrefix: \"select\",\n    className: \"xsm-text\",\n    onChange: handleSetDeptTag,\n    maxMenuHeight: \"200px\",\n    placeholder: _t(t(\"Dept tag\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3764,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    className: `addons-list__item mx-1 payment-type-parent ${orderDetails.payment_type !== null && \"mb-1\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3776,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: paymentTypeForSearch && paymentTypeForSearch,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    classNamePrefix: \"select\",\n    className: \"xsm-text\",\n    onChange: handleSetpaymentType,\n    maxMenuHeight: \"200px\",\n    isMulti: true,\n    backspaceRemovesValue: false,\n    clearIndicator: null,\n    placeholder: _t(t(\"Payments\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3780,\n      columnNumber: 53\n    }\n  })), orderDetails.payment_type !== null && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border mt-0 mb-2 change-background mx-1 rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3798,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"xsm-text text-center text-white pt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3799,\n      columnNumber: 57\n    }\n  }, _t(t(\"Amount\"))), orderDetails.payment_type.map((eachPaymentType, paymentTypeIndex) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"addons-list__item mx-1 mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3805,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      step: \"0.01\",\n      name: eachPaymentType.id,\n      autoComplete: \"off\",\n      className: \"form-control xsm-text pl-2\",\n      onChange: handlePaymentTypeAmount,\n      placeholder: eachPaymentType.name,\n      value: orderDetails.payment_amount && orderDetails.payment_amount[eachPaymentType.id],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3806,\n        columnNumber: 73\n      }\n    }));\n  })), getSystemSettings(generalSettings, \"table_waiter\") === \"1\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"addons-list__item mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3832,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: orderDetailUsers.theTables !== null && orderDetailUsers.theTables,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    classNamePrefix: \"select\",\n    className: \"xsm-text\",\n    onChange: handleSetTable,\n    maxMenuHeight: \"200px\",\n    placeholder: _t(t(\"Table\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3833,\n      columnNumber: 61\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"addons-list__item mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3848,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: orderDetailUsers.theWaiters !== null && orderDetailUsers.theWaiters,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    classNamePrefix: \"select\",\n    className: \"xsm-text\",\n    onChange: handleSetWaiter,\n    maxMenuHeight: \"200px\",\n    placeholder: _t(t(\"Waiter\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3849,\n      columnNumber: 61\n    }\n  }))) : \"\", /*#__PURE__*/React.createElement(\"li\", {\n    className: \"addons-list__item mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3869,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control xsm-text py-2 pl-2\",\n    min: \"1\",\n    onChange: handleTotalGuest,\n    placeholder: _t(t(\"Total guests\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3870,\n      columnNumber: 53\n    }\n  }))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: ` ${showSettle ? \"d-none\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3889,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    id: \"main\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3890,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-md-none t-mb-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3892,\n      columnNumber: 21\n    }\n  }, newSettings && newSettings.workPeriod === null && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-left-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3895,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-left-overlay__content text-center m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3896,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: `text-primary text-uppercase ${authUserInfo.details && authUserInfo.details.user_type !== \"staff\" && \"mb-0\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3897,\n      columnNumber: 37\n    }\n  }, authUserInfo.details && authUserInfo.details.user_type !== \"staff\" ? _t(t(\"Select branch to active POS\")) : _t(t(\"start workperiod\"))), authUserInfo.details && authUserInfo.details.user_type !== \"staff\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mt-1 text-uppercase xsm-text mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3911,\n      columnNumber: 49\n    }\n  }, _t(t(\"Start workperiod if it is not started\"))), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"d-flex justify-content-center text-lowercase xsm-text mt-0 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3914,\n      columnNumber: 49\n    }\n  }, \"(\", _t(t(\"Use staff account not to see this multiple times\")), \")\")), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/dashboard\",\n    className: \"t-heading-font btn btn-primary btn-sm text-uppercase sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3925,\n      columnNumber: 37\n    }\n  }, _t(t(\"Goto Dashboard\"))))), foodGroupForSearch && foodGroupForSearch.map((mobileGroup, mobileGroupIndex) => {\n    let tempItems = foodForSearch && foodForSearch.filter(tempItem => {\n      return parseInt(tempItem.food_group_id) === mobileGroup.id;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fk-sm-card t-mt-10\",\n      id: `card-${mobileGroupIndex + 1}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3943,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"mt-0 t-mb-30 text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3947,\n        columnNumber: 41\n      }\n    }, mobileGroup.name), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"t-list fk-sm-card-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3950,\n        columnNumber: 41\n      }\n    }, tempItems !== null && tempItems.length > 0 ? [tempItems.map((mobileItem, mobileItemIndex) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: \"fk-sm-card-list__item\",\n        \"data-toggle\": handleGetStock(mobileItem.id) === 0 ? \"\" : \"modal\",\n        \"data-target\": handleGetStock(mobileItem.id) === 0 ? \"\" : \"#menuAddons\",\n        key: mobileItemIndex,\n        onClick: () => {\n          // if manage is stock is enable\n          if (showManageStock) {\n            if (handleGetStock(mobileItem.id) === 0) {\n              toast.error(`${_t(t(\"Out of stock\"))}`, {\n                position: \"bottom-center\",\n                closeButton: false,\n                autoClose: 10000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                className: \"text-center toast-notification\"\n              });\n            } else {\n              //set active item in order list\n              setActiveItemInOrder(mobileItemIndex); // set variations, properties and selected items here\n\n              setFoodItem({ ...foodItem,\n                foodGroup: mobileGroup,\n                selectedItem: mobileItem,\n                variations: mobileItem && parseInt(mobileItem.has_variation) === 1 ? mobileItem.variations : null,\n                properties: mobileItem && parseInt(mobileItem.has_property) === 1 ? mobileItem.properties : null\n              });\n              handleOrderItem(mobileItem);\n            }\n          } else {\n            setActiveItemInOrder(mobileItemIndex); // set variations, properties and selected items here\n\n            setFoodItem({ ...foodItem,\n              foodGroup: mobileGroup,\n              selectedItem: mobileItem,\n              variations: mobileItem && parseInt(mobileItem.has_variation) === 1 ? mobileItem.variations : null,\n              properties: mobileItem && parseInt(mobileItem.has_property) === 1 ? mobileItem.properties : null\n            });\n            handleOrderItem(mobileItem);\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3955,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fk-sm-card__container align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4031,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fk-sm-card__content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4032,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"text-capitalize fk-sm-card__title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4033,\n          columnNumber: 73\n        }\n      }, \"stock na thakleo baire theke khuje ene dibo\"), mobileItem.has_variation === \"0\" && /*#__PURE__*/React.createElement(\"p\", {\n        className: \"t-mt-10 mb-0 sm-text text-uppercase t-text-dark--light-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4039,\n          columnNumber: 77\n        }\n      }, currencySymbolLeft(), formatPrice(parseFloat(mobileItem.price)), currencySymbolRight())), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fk-sm-card__action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4048,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fk-sm-card__img fk-sm-card__img--1\",\n        style: {\n          backgroundImage: `url(${mobileItem.image})`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4049,\n          columnNumber: 73\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fk-sm-card__cart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4055,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"las la-plus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4056,\n          columnNumber: 77\n        }\n      })))));\n    })] : \"\"));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-sm-footnav\",\n    style: {\n      zIndex: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4070,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-sm-footnav__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4071,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list fk-sm-footnav__list justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4072,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"fk-sm-footnav__list-item\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#extraInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4073,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"t-link fk-sm-footnav__link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4078,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"las la-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4079,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"fk-sm-footnav__list-item\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#showCart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4082,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"t-link fk-sm-footnav__link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4087,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"las la-shopping-cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4088,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"fk-sm-footnav__list-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4091,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/dashboard/pos/submitted\",\n    className: \"t-link fk-sm-footnav__link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4092,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"las la-share-square\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4096,\n      columnNumber: 45\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-main d-none d-md-block t-mt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4107,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4108,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4110,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-left-over\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4111,\n      columnNumber: 37\n    }\n  }, newSettings && newSettings.workPeriod === null && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-left-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4114,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-left-overlay__content text-center m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4115,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: `text-primary text-uppercase ${authUserInfo.details && authUserInfo.details.user_type !== \"staff\" && \"mb-0\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4116,\n      columnNumber: 53\n    }\n  }, authUserInfo.details && authUserInfo.details.user_type !== \"staff\" ? _t(t(\"Select branch to active POS\")) : _t(t(\"start workperiod\"))), authUserInfo.details && authUserInfo.details.user_type !== \"staff\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"mt-1 text-uppercase xsm-text mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4130,\n      columnNumber: 65\n    }\n  }, _t(t(\"Start workperiod if it is not started\"))), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"d-flex justify-content-center text-lowercase xsm-text mt-0 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4135,\n      columnNumber: 65\n    }\n  }, \"(\", _t(t(\"Use staff account not to see this multiple times\")), \")\")), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/dashboard\",\n    className: \"t-heading-font btn btn-primary btn-sm text-uppercase sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4146,\n      columnNumber: 53\n    }\n  }, _t(t(\"Goto Dashboard\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4157,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 col-lg-5 col-xl-6 col-xxl-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4158,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/dashboard/pos/online-orders\",\n    className: \"t-link t-pt-8 t-pb-8 t-pl-12 t-pr-12 btn btn-outline-danger xsm-text text-uppercase text-center w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4159,\n      columnNumber: 49\n    }\n  }, _t(t(\"Online Orders\")), \" \", onlineCounter > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"bg-danger text-white p-2 rounded-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4165,\n      columnNumber: 57\n    }\n  }, \"(\", onlineCounter, \")\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8 col-lg-7 col-xl-6 col-xxl-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4171,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center gx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4172,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4173,\n      columnNumber: 53\n    }\n  }, window.location.pathname === \"/dashboard/pos/settled\" ? /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/refresh\",\n    className: \"t-link t-pt-8 t-pb-8 t-pl-12 t-pr-12 btn btn-success xsm-text text-uppercase text-center w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4176,\n      columnNumber: 61\n    }\n  }, _t(t(\"Settled\"))) : /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/dashboard/pos/settled\",\n    className: \"t-link t-pt-8 t-pb-8 t-pl-12 t-pr-12 btn btn-success xsm-text text-uppercase text-center w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4183,\n      columnNumber: 61\n    }\n  }, _t(t(\"Settled\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4191,\n      columnNumber: 53\n    }\n  }, window.location.pathname === \"/dashboard/pos/submitted\" ? /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/refresh\",\n    className: \"t-link t-pt-8 t-pb-8 t-pl-12 t-pr-12 btn btn-primary xsm-text text-uppercase text-center w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4194,\n      columnNumber: 61\n    }\n  }, _t(t(\"Submitted\"))) : /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/dashboard/pos/submitted\",\n    className: \"t-link t-pt-8 t-pb-8 t-pl-12 t-pr-12 btn btn-primary xsm-text text-uppercase text-center w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4201,\n      columnNumber: 61\n    }\n  }, _t(t(\"Submitted\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row t-mt-10 gx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4212,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 col-xl-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4214,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-scroll--pos-menu\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4215,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list fk-pos-nav list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4216,\n      columnNumber: 53\n    }\n  }, getSystemSettings(generalSettings, \"pos_screen\") === \"1\" && deptTagForSearch && /*#__PURE__*/React.createElement(React.Fragment, null, deptTagForSearch.map((deptItem, deptItemIndex) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: `t-mb-10 ${deptItemIndex === deptTagForSearch.length - 1 ? \"t-mb-30\" : \"\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4226,\n        columnNumber: 81\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4233,\n        columnNumber: 85\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      class: `button arrow text-uppercase ${orderDetails && orderDetails.dept_tag && orderDetails.dept_tag.id === deptItem.id ? \"active\" : \"\"}`,\n      onClick: () => {\n        handleSetDeptTag(deptItem);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4234,\n        columnNumber: 85\n      }\n    }, deptItem.name));\n  })), foodGroupForSearch && foodGroupForSearch.map((groupItem, groupIndex) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"fk-pos-nav__list\",\n      key: groupIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4260,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        // set active group, group items, initial item active, todo:: set variations and properties\n        let tempItems = foodForSearch && foodForSearch.filter(tempItem => {\n          return parseInt(tempItem.food_group_id) === groupItem.id;\n        });\n\n        if (tempItems && tempItems.length > 0) {\n          setFoodItem({ ...foodItem,\n            foodGroup: groupItem,\n            items: tempItems,\n            selectedItem: tempItems && tempItems[0],\n            variations: tempItems && parseInt(tempItems[0].has_variation) === 1 ? tempItems[0].variations : null,\n            properties: tempItems && parseInt(tempItems[0].has_property) === 1 ? tempItems[0].properties : null\n          });\n        } else {\n          setFoodItem({\n            foodGroup: groupItem,\n            items: null,\n            selectedItem: null,\n            variations: null,\n            properties: null\n          });\n        } //set active item in order list\n\n\n        setActiveItemInOrder(null);\n      } //set active or !\n      ,\n      className: `w-100 t-text-dark t-heading-font btn btn-outline-danger font-weight-bold text-uppercase ${foodItem.foodGroup && foodItem.foodGroup.id === groupItem.id && \"active\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4264,\n        columnNumber: 77\n      }\n    }, groupItem.name));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8 col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4336,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4337,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"active\",\n    id: \"nav-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4338,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4339,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-6 col-xxl-5 order-xl-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4340,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-content t-mb-10 mb-xl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4341,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    id: \"addons-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4342,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4343,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-addons-variation\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4344,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-addons-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4349,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-addons-table__head text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4350,\n      columnNumber: 85\n    }\n  }, _t(t(\"variations\"))), foodItem.variations ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-addons-table__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4355,\n      columnNumber: 93\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4356,\n      columnNumber: 97\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-8 pl-3 border-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4357,\n      columnNumber: 101\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fk-addons-table__info-text text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4358,\n      columnNumber: 105\n    }\n  }, _t(t(\"name\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4362,\n      columnNumber: 101\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fk-addons-table__info-text text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4363,\n      columnNumber: 105\n    }\n  }, _t(t(\"price\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-addons-table__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4369,\n      columnNumber: 93\n    }\n  }, foodItem.variations.map(variationItem => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fk-addons-table__body-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4373,\n        columnNumber: 109\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row g-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4374,\n        columnNumber: 113\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8 border-right t-pl-10 t-pr-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4375,\n        columnNumber: 117\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"mx-checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4376,\n        columnNumber: 121\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      className: \"mx-checkbox__input mx-checkbox__input-solid mx-checkbox__input-solid--danger mx-checkbox__input-sm\",\n      name: \"variation\",\n      onChange: () => {\n        handleOrderItemVariation(variationItem);\n      },\n      checked: checkChecked(variationItem),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4377,\n        columnNumber: 125\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"mx-checkbox__text text-capitalize t-text-heading t-ml-8 fk-addons-table__body-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4390,\n        columnNumber: 125\n      }\n    }, variationItem.variation_name))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4397,\n        columnNumber: 117\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fk-addons-table__body-text sm-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4398,\n        columnNumber: 121\n      }\n    }, currencySymbolLeft(), formatPrice(variationItem.food_with_variation_price), currencySymbolRight()))));\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-addons-table__info py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4414,\n      columnNumber: 89\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4415,\n      columnNumber: 93\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 text-center border-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4416,\n      columnNumber: 97\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fk-addons-table__info-text text-capitalize text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4417,\n      columnNumber: 101\n    }\n  }, _t(t(\"No variations\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: foodItem.properties ? \"\" : \"d-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4427,\n      columnNumber: 81\n    }\n  }, foodItem.properties && /*#__PURE__*/React.createElement(React.Fragment, null, foodItem.properties.length > 0 ? foodItem.properties.map(propertyItem => {\n    //property group\n    let selectedGroup = null; //property group\n\n    if (propertyItem.length > 0) {\n      selectedGroup = propertyGroupForSearch && propertyGroupForSearch.find(singlePropertyGroup => {\n        return singlePropertyGroup.id === parseInt(propertyItem[0].property_group_id);\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fk-addons-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4462,\n        columnNumber: 109\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fk-addons-table__head text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4463,\n        columnNumber: 113\n      }\n    }, selectedGroup && selectedGroup.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fk-addons-table__info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4467,\n        columnNumber: 113\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row g-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4468,\n        columnNumber: 117\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-5 pl-3 border-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4469,\n        columnNumber: 121\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fk-addons-table__info-text text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4470,\n        columnNumber: 125\n      }\n    }, _t(t(\"name\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3 text-center border-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4474,\n        columnNumber: 121\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fk-addons-table__info-text text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4475,\n        columnNumber: 125\n      }\n    }, _t(t(\"QTY\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4479,\n        columnNumber: 121\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fk-addons-table__info-text text-capitalize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4480,\n        columnNumber: 125\n      }\n    }, _t(t(\"Unit price\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fk-addons-table__body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4490,\n        columnNumber: 113\n      }\n    }, propertyItem.map(eachItem => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fk-addons-table__body-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4494,\n          columnNumber: 129\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row g-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4495,\n          columnNumber: 133\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-5 border-right t-pl-10 t-pr-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4496,\n          columnNumber: 137\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"mx-checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4497,\n          columnNumber: 141\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: \"mx-checkbox__input mx-checkbox__input-solid mx-checkbox__input-solid--danger mx-checkbox__input-sm\",\n        onChange: () => {\n          newOrder && newOrder.map((newOrderItem, index) => {\n            if (index === activeItemInOrder) {\n              if (newOrderItem.properties) {\n                let theItem = newOrderItem.properties.find(eachPropertyItem => {\n                  return eachPropertyItem.item.id === eachItem.id;\n                });\n\n                if (theItem === undefined) {\n                  handleAddProperties(eachItem);\n                } else {\n                  handleRemoveProperties(eachItem);\n                }\n              } else {\n                handleAddProperties(eachItem);\n              }\n            }\n          });\n        },\n        checked: checkCheckedProperties(eachItem),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4498,\n          columnNumber: 145\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mx-checkbox__text text-capitalize t-text-heading t-ml-8 fk-addons-table__body-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4554,\n          columnNumber: 145\n        }\n      }, eachItem.name))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-3 text-center border-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4561,\n          columnNumber: 137\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fk-qty justify-content-center t-pt-10 t-pb-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4562,\n          columnNumber: 141\n        }\n      }, parseInt(eachItem.allow_multi_quantity) === 1 && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"fk-qty__icon fk-qty__deduct\",\n        onClick: () => {\n          handlePropertyQty(eachItem, \"-\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4567,\n          columnNumber: 153\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"las la-minus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4576,\n          columnNumber: 157\n        }\n      })), parseInt(eachItem.allow_multi_quantity) === 1 ? /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: checkCheckedPropertyQuantity(eachItem),\n        className: \"fk-qty__input t-bg-clear\",\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4583,\n          columnNumber: 149\n        }\n      }) : \"-\", parseInt(eachItem.allow_multi_quantity) === 1 && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"fk-qty__icon fk-qty__add\",\n        onClick: () => {\n          handlePropertyQty(eachItem, \"+\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4598,\n          columnNumber: 153\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"las la-plus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4607,\n          columnNumber: 157\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-4 text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4612,\n          columnNumber: 137\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"fk-addons-table__body-text sm-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 4613,\n          columnNumber: 141\n        }\n      }, currencySymbolLeft(), formatPrice(eachItem.extra_price), currencySymbolRight()))));\n    })));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-addons-table__info py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4632,\n      columnNumber: 97\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4633,\n      columnNumber: 101\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 text-center border-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4634,\n      columnNumber: 105\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fk-addons-table__info-text text-capitalize text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4635,\n      columnNumber: 109\n    }\n  }, _t(t(\"No properties\"))))))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-6 col-xxl-7 order-xl-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4651,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-dish--scroll\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4652,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-group fk-dish row gx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4653,\n      columnNumber: 69\n    }\n  }, foodItem.items && foodItem.items.map((tempFoodItem, tempFoodItemIndex) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => {\n        if (showManageStock) {\n          if (handleGetStock(tempFoodItem.id) === 0) {\n            toast.error(`${_t(t(\"Out of stock\"))}`, {\n              position: \"bottom-center\",\n              closeButton: false,\n              autoClose: 10000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              className: \"text-center toast-notification\"\n            });\n          } else {\n            // set variations, properties and selected items here\n            setFoodItem({ ...foodItem,\n              selectedItem: tempFoodItem,\n              variations: tempFoodItem && parseInt(tempFoodItem.has_variation) === 1 ? tempFoodItem.variations : null,\n              properties: tempFoodItem && parseInt(tempFoodItem.has_property) === 1 ? tempFoodItem.properties : null\n            });\n            handleOrderItem(tempFoodItem);\n          }\n        } else {\n          // set variations, properties and selected items here\n          setFoodItem({ ...foodItem,\n            selectedItem: tempFoodItem,\n            variations: tempFoodItem && parseInt(tempFoodItem.has_variation) === 1 ? tempFoodItem.variations : null,\n            properties: tempFoodItem && parseInt(tempFoodItem.has_property) === 1 ? tempFoodItem.properties : null\n          });\n          handleOrderItem(tempFoodItem);\n        }\n      },\n      className: `fk-dish__link t-mb-10 col-md-6 col-lg-4 col-xl-6 col-xxl-4 t-link border-0 pointer-cursor ${foodItem.selectedItem && foodItem.selectedItem.id === tempFoodItem.id && \"active\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4658,\n        columnNumber: 89\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fk-dish-card w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4732,\n        columnNumber: 93\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fk-dish-card__img w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4733,\n        columnNumber: 97\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: tempFoodItem.image,\n      alt: \"\",\n      className: \"img-fluid m-auto w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4734,\n        columnNumber: 101\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fk-dish-card__title text-center text-uppercase\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4740,\n        columnNumber: 97\n      }\n    }, tempFoodItem.name, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4741,\n        columnNumber: 121\n      }\n    }), showManageStock ? /*#__PURE__*/React.createElement(React.Fragment, null, _t(t(\"In Stock\")), \":\", \" \", handleGetStock(tempFoodItem.id)) : null)));\n  }))))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4769,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4770,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 col-xl-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4771,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-right-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4772,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row flex-column justify-content-between h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4773,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 flex-grow-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4774,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-right-nav__scroll\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4775,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list addons-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4779,\n      columnNumber: 61\n    }\n  }, authUserInfo.details && authUserInfo.details.user_type !== \"staff\" && /*#__PURE__*/React.createElement(\"li\", {\n    className: \"addons-list__item mt-1 mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4783,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: branchForSearch && branchForSearch,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    classNamePrefix: \"select\",\n    className: \"xsm-text\",\n    onChange: handleSetBranch,\n    maxMenuHeight: \"200px\",\n    placeholder: _t(t(\"Branch\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4784,\n      columnNumber: 77\n    }\n  })), !loading && /*#__PURE__*/React.createElement(React.Fragment, null, orderDetails.branch !== null && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n    className: `addons-list__item mx-1 ${authUserInfo.details && authUserInfo.details.user_type === \"staff\" && \"mt-1\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4803,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: orderDetailUsers.theCustomers !== null && orderDetailUsers.theCustomers,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name + \" (\" + option.phn_no + \")\",\n    getOptionValue: option => option.name,\n    classNamePrefix: \"select\",\n    className: \"xsm-text\",\n    onChange: handleSetCustomer,\n    maxMenuHeight: \"200px\",\n    placeholder: _t(t(\"Customer\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4810,\n      columnNumber: 85\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"addons-list__item mx-1 border border-2 rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4835,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4836,\n      columnNumber: 85\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"fk-right-nav__guest-btn btn w-100 t-bg-white dropdown-toggle new-customer-pos xsm-text pl-2\",\n    \"data-toggle\": \"dropdown\",\n    \"aria-expanded\": \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4837,\n      columnNumber: 89\n    }\n  }, \"+ \", _t(t(\"Customer\")), \"?\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"dropdown-menu w-100 border-0 pt-4 change-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4845,\n      columnNumber: 89\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4846,\n      columnNumber: 93\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    className: \"form-control font-10px rounded-lg\",\n    placeholder: \"Name\",\n    autoComplete: \"off\",\n    value: orderDetails.newCustomerInfo.name,\n    onChange: handleNewCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4847,\n      columnNumber: 97\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"pb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4860,\n      columnNumber: 93\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"number\",\n    className: \"form-control font-10px mt-2 rounded-lg\",\n    autoComplete: \"off\",\n    placeholder: \"Number\",\n    value: orderDetails.newCustomerInfo.number,\n    onChange: handleNewCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4861,\n      columnNumber: 97\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"pb-1 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4874,\n      columnNumber: 93\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn t-bg-white text-dark xsm-text text-uppercase btn-sm py-0 px-2 mr-1\",\n    onClick: () => {\n      setOrderDetails({ ...orderDetails,\n        newCustomer: false,\n        newCustomerInfo: {\n          name: \"\",\n          number: \"\"\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4875,\n      columnNumber: 97\n    }\n  }, _t(t(\"Cancel\"))))))), getSystemSettings(generalSettings, \"pos_screen\") === \"0\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"addons-list__item mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4899,\n      columnNumber: 93\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: deptTagForSearch && deptTagForSearch,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    classNamePrefix: \"select\",\n    className: \"xsm-text\",\n    onChange: handleSetDeptTag,\n    maxMenuHeight: \"200px\",\n    placeholder: _t(t(\"Dept tag\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4900,\n      columnNumber: 97\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    className: `addons-list__item mx-1 payment-type-parent ${orderDetails.payment_type !== null && \"mb-1\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4922,\n      columnNumber: 93\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: paymentTypeForSearch && paymentTypeForSearch,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    classNamePrefix: \"select\",\n    className: \"xsm-text\",\n    onChange: handleSetpaymentType,\n    maxMenuHeight: \"200px\",\n    isMulti: true,\n    backspaceRemovesValue: false,\n    clearIndicator: null,\n    placeholder: _t(t(\"Payments\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4927,\n      columnNumber: 97\n    }\n  })), orderDetails.payment_type !== null && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border mt-0 mb-2 change-background mx-1 rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4953,\n      columnNumber: 101\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"xsm-text text-center text-white pt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4954,\n      columnNumber: 105\n    }\n  }, _t(t(\"Amount\"))), orderDetails.payment_type.map((eachPaymentType, paymentTypeIndex) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"addons-list__item mx-1 mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4963,\n        columnNumber: 117\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      step: \"0.01\",\n      name: eachPaymentType.id,\n      autoComplete: \"off\",\n      className: \"form-control xsm-text pl-2\",\n      onChange: handlePaymentTypeAmount,\n      placeholder: eachPaymentType.name,\n      value: orderDetails.payment_amount && orderDetails.payment_amount[eachPaymentType.id],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4964,\n        columnNumber: 121\n      }\n    }));\n  }))), getSystemSettings(generalSettings, \"table_waiter\") === \"1\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"addons-list__item mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5001,\n      columnNumber: 89\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: orderDetailUsers.theTables !== null && orderDetailUsers.theTables,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    classNamePrefix: \"select\",\n    className: \"xsm-text\",\n    onChange: handleSetTable,\n    maxMenuHeight: \"200px\",\n    placeholder: _t(t(\"Table\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5002,\n      columnNumber: 93\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"addons-list__item mx-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5024,\n      columnNumber: 89\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: orderDetailUsers.theWaiters !== null && orderDetailUsers.theWaiters,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    classNamePrefix: \"select\",\n    className: \"xsm-text\",\n    onChange: handleSetWaiter,\n    maxMenuHeight: \"200px\",\n    placeholder: _t(t(\"Waiter\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5025,\n      columnNumber: 93\n    }\n  }))) : \"\", /*#__PURE__*/React.createElement(\"li\", {\n    className: \"addons-list__item mx-1\",\n    style: {\n      paddingBottom: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5052,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control xsm-text py-2 pl-2\",\n    min: \"1\",\n    onChange: handleTotalGuest,\n    placeholder: _t(t(\"Total guest\")) + \"..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5056,\n      columnNumber: 85\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5073,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5074,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 t-mb-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5075,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      if (newOrder) {\n        handleOnlyPrint();\n      } else {\n        toast.error(`${_t(t(\"Please add items in order list to print bill\"))}`, {\n          position: \"bottom-center\",\n          closeButton: false,\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          className: \"text-center toast-notification\"\n        });\n      }\n    },\n    className: \"w-100 t-heading-font btn btn-outline-danger font-weight-bold text-uppercase sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5076,\n      columnNumber: 65\n    }\n  }, _t(t(\"print bill\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5105,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"w-100 t-heading-font btn btn-primary font-weight-bold text-uppercase sm-text\",\n    onClick: handleCancelConfirmation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5106,\n      columnNumber: 65\n    }\n  }, _t(t(\"cancel\"))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8 col-xl-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5118,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-right-nav p-2 p-xl-3 t-bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5119,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-100 w-100 d-none\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5121,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-receipt-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5122,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-receipt-body t-mt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5123,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5124,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5125,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sm-text font-weight-bold text-uppercase font-italic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5126,\n      columnNumber: 69\n    }\n  }, _t(t(\"Order token\")), \":\", \" \", newOrder ? /*#__PURE__*/React.createElement(React.Fragment, null, \"#\", orderDetails.token.id, \" -\", \" \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"LT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5131,\n      columnNumber: 81\n    }\n  }, orderDetails.token.time)) : \"\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-sm-card__container t-mt-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5141,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-sm-card__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5142,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"text-capitalize fk-sm-card__title t-mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5143,\n      columnNumber: 69\n    }\n  }, \"food items\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 xsm-text t-text-heading fk-sm-card__description text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5146,\n      columnNumber: 69\n    }\n  }, \"properties & bill\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize xxsm-text fk-badge fk-badge--dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5150,\n      columnNumber: 65\n    }\n  }, \"total\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5154,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list addons-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5155,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"addons-list__item active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5156,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5157,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5158,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \" sm-text text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5159,\n      columnNumber: 77\n    }\n  }, \"chicken burger\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \" xsm-text text-capitalize d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5162,\n      columnNumber: 77\n    }\n  }, \"large\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5166,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-qty flex-grow-1 justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5167,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fk-qty__icon fk-qty__deduct\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5168,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"las la-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5169,\n      columnNumber: 85\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: \"0\",\n    className: \"fk-qty__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5171,\n      columnNumber: 81\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fk-qty__icon fk-qty__add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5176,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"las la-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5177,\n      columnNumber: 85\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5181,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \" text-uppercase sm-text flex-grow-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5182,\n      columnNumber: 77\n    }\n  }, \"+tk 100\")))), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"addons-list__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5188,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5189,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5190,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"t-text-heading sm-text text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5191,\n      columnNumber: 77\n    }\n  }, \"beef burger\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5195,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-qty flex-grow-1 justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5196,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fk-qty__icon fk-qty__deduct\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5197,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"las la-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5198,\n      columnNumber: 85\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: \"0\",\n    className: \"fk-qty__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5200,\n      columnNumber: 81\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fk-qty__icon fk-qty__add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5205,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"las la-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5206,\n      columnNumber: 85\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5210,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"t-text-heading text-uppercase sm-text flex-grow-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5211,\n      columnNumber: 77\n    }\n  }, \"+tk 230\"))))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5218,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5219,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5220,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5221,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5222,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5223,\n      columnNumber: 77\n    }\n  }, \"sub total\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5227,\n      columnNumber: 73\n    }\n  }, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5228,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5229,\n      columnNumber: 77\n    }\n  }, newOrder ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5231,\n      columnNumber: 85\n    }\n  }, currencySymbolLeft(), formatPrice(theSubTotal), currencySymbolRight()) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5237,\n      columnNumber: 85\n    }\n  }, currencySymbolLeft(), formatPrice(0), currencySymbolRight()))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5247,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5248,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5249,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5250,\n      columnNumber: 77\n    }\n  }, getSystemSettings(generalSettings, \"vat_system\") === \"igst\" ? `vat(${newSettings !== null && newSettings.vat})` : getSystemSettings(generalSettings, \"vat_system\") === \"cgst\" ? \"cgst+sgst\" + \"(\" + getSystemSettings(generalSettings, \"cgst\") + \"+\" + getSystemSettings(generalSettings, \"sgst\") + \")\" : `tax(${newSettings !== null && newSettings.tax})`, \"%:\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5280,\n      columnNumber: 73\n    }\n  }, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5281,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5282,\n      columnNumber: 77\n    }\n  }, currencySymbolLeft(), formatPrice(theVat), currencySymbolRight())))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5290,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5291,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5292,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5293,\n      columnNumber: 77\n    }\n  }, \"service\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5297,\n      columnNumber: 73\n    }\n  }, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5298,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5299,\n      columnNumber: 77\n    }\n  }, \"20.00\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5305,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5306,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5307,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5308,\n      columnNumber: 77\n    }\n  }, \"discount\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5312,\n      columnNumber: 73\n    }\n  }, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5313,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5314,\n      columnNumber: 77\n    }\n  }, \"100.00\"))))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5321,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5322,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5323,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5324,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5325,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5326,\n      columnNumber: 77\n    }\n  }, \"total bill\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5330,\n      columnNumber: 73\n    }\n  }, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5331,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5332,\n      columnNumber: 77\n    }\n  }, \"2000.00\"))))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5339,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5340,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5341,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary w-100 xsm-text text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5342,\n      columnNumber: 69\n    }\n  }, \"settle\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5349,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-success w-100 xsm-text text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5350,\n      columnNumber: 69\n    }\n  }, \"submit\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-100 w-100 d-none d-md-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5364,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-price-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5365,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-price-table__head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5366,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-0 align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5367,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5368,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-block sm-text font-weight-bold text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5369,\n      columnNumber: 69\n    }\n  }, _t(t(\"Order token\")), \":\", \" \", newOrder ? /*#__PURE__*/React.createElement(React.Fragment, null, \"#\", orderDetails.token.id, \" -\", \" \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"LT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5374,\n      columnNumber: 81\n    }\n  }, orderDetails.token.time)) : \"\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-price-table__body t-mt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5385,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-price-table__body-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5386,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5387,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-table__head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5388,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-0 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5389,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1 text-center border-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5390,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5391,\n      columnNumber: 81\n    }\n  }, _t(t(\"S/L\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 text-center border-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5395,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5396,\n      columnNumber: 81\n    }\n  }, _t(t(\"food item\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2 text-center border-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5400,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5401,\n      columnNumber: 81\n    }\n  }, _t(t(\"QTY\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5405,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5406,\n      columnNumber: 81\n    }\n  }, _t(t(\"price\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-table__body border-bottom\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5412,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sky-is-blue reverse-this\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5416,\n      columnNumber: 73\n    }\n  }, newOrder && newOrder.length > 0 ? newOrder.map((orderListItem, orderListItemIndex) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: `fk-table-container-order ${orderListItemIndex === activeItemInOrder && \"active\"} `,\n      onClick: e => {\n        e.preventDefault(); //orderListItem's group wise all items\n\n        let tempItems = foodForSearch && foodForSearch.filter(tempItem => {\n          return tempItem.food_group_id === orderListItem.item.food_group_id;\n        }); //orderListItem's group\n\n        let foodGroup = foodGroupForSearch && foodGroupForSearch.find(groupItem => {\n          return groupItem.id === parseInt(orderListItem.item.food_group_id);\n        }); // selected pos item\n\n        let selectedItemTemp = tempItems && tempItems.find(tempSelectedItem => {\n          return tempSelectedItem.id === orderListItem.item.id;\n        }); // Set variations, properties, selected item\n\n        setFoodItem({ ...foodItem,\n          foodGroup: foodGroup,\n          items: tempItems,\n          selectedItem: selectedItemTemp,\n          variations: selectedItemTemp && parseInt(selectedItemTemp.has_variation) === 1 ? selectedItemTemp.variations : null,\n          properties: selectedItemTemp && parseInt(selectedItemTemp.has_property) === 1 ? selectedItemTemp.properties : null\n        }); //set active order list index for background color of selected\n\n        setActiveItemInOrder(orderListItemIndex);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5426,\n        columnNumber: 97\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `row g-0 border-top-0 border-bottom `,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5503,\n        columnNumber: 101\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 text-center border-left d-flex justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5506,\n        columnNumber: 105\n      }\n    }, newOrder.length - orderListItemIndex), /*#__PURE__*/React.createElement(\"div\", {\n      className: `col-6 border-left border-right py-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5510,\n        columnNumber: 105\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5513,\n        columnNumber: 109\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-capitalize d-block t-pt-5 t-pb-5 t-pl-5 t-pr-5 sm-text font-weight-bold t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5514,\n        columnNumber: 113\n      }\n    }, orderListItem.item.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row g-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5521,\n        columnNumber: 109\n      }\n    }, parseInt(orderListItem.item.has_variation) === 1 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5527,\n        columnNumber: 121\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-capitalize sm-text d-inline-block font-weight-bold t-pr-5 t-pl-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5528,\n        columnNumber: 125\n      }\n    }, \"variation :\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-capitalize xsm-text d-inline-block badge rounded-pill bg-warning text-dark font-weight-md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5531,\n        columnNumber: 125\n      }\n    }, orderListItem.variation ? orderListItem.variation.variation_name : \"-\")), orderListItem.properties && orderListItem.properties.length > 0 && selectedPropertyGroup[orderListItemIndex] !== undefined && selectedPropertyGroup[orderListItemIndex].map(thisIsGroup => {\n      let theGroup = propertyGroupForSearch && propertyGroupForSearch.find(theItem => {\n        return theItem.id === thisIsGroup;\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 5564,\n          columnNumber: 129\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-capitalize sm-text d-inline-block font-weight-bold t-pr-5 t-pl-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 5565,\n          columnNumber: 133\n        }\n      }, theGroup && theGroup.name, \" \", \":\"), orderListItem.properties.map(propertyName => {\n        if (parseInt(propertyName.item.property_group_id) === theGroup.id) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            className: \"text-capitalize xsm-text d-inline-block badge rounded-pill bg-warning text-dark font-weight-md mr-1\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 5583,\n              columnNumber: 149\n            }\n          }, propertyName.item.name, \" \", /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 5589,\n              columnNumber: 153\n            }\n          }, \" \", propertyName.quantity > 1 && \"(\" + propertyName.quantity + \")\"));\n        } else {\n          return true;\n        }\n      }));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2 text-center border-right d-flex justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5613,\n        columnNumber: 105\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fk-qty t-pt-5 t-pb-5 justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5614,\n        columnNumber: 109\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fk-qty__icon\",\n      onClick: () => {\n        handleOrderItemQty(\"-\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5615,\n        columnNumber: 113\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"las la-minus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5623,\n        columnNumber: 117\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: orderListItem.quantity,\n      className: \"fk-qty__input t-bg-clear\",\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5625,\n        columnNumber: 113\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fk-qty__icon\",\n      onClick: () => {\n        handleOrderItemQty(\"+\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5633,\n        columnNumber: 113\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"las la-plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5641,\n        columnNumber: 117\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3 text-center border-right d-flex justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5648,\n        columnNumber: 105\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5649,\n        columnNumber: 109\n      }\n    }, parseInt(orderListItem.item.has_variation) === 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, currencySymbolLeft(), showPriceOfEachOrderItem(orderListItemIndex), currencySymbolRight()) : /*#__PURE__*/React.createElement(React.Fragment, null, currencySymbolLeft(), showPriceOfEachOrderItem(orderListItemIndex), currencySymbolRight()))))), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-capitalize  t-pt-5 t-pb-5 t-pl-5 t-pr-5 sm-text font-weight-bold make-this-relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5676,\n        columnNumber: 97\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge rounded-pill bg-secondary text-capitalize\",\n      onClick: () => {\n        handleRemoveItemFromOrderList(orderListItemIndex);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5677,\n        columnNumber: 101\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5685,\n        columnNumber: 105\n      }\n    }))));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-primary text-center font-weight-bold pt-5 xsm-text text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5693,\n      columnNumber: 81\n    }\n  }, _t(t(\"Select food item to add to the list\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-price-table__body-bottom t-mt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5705,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-table__head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5706,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-0 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5707,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 text-center border-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5708,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5709,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5710,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5711,\n      columnNumber: 85\n    }\n  }, _t(t(\"sub total\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5715,\n      columnNumber: 81\n    }\n  }, newOrder ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5717,\n      columnNumber: 89\n    }\n  }, currencySymbolLeft(), formatPrice(theSubTotal), currencySymbolRight()) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5723,\n      columnNumber: 89\n    }\n  }, currencySymbolLeft(), formatPrice(0), currencySymbolRight())))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5732,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5733,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5734,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5735,\n      columnNumber: 85\n    }\n  }, getSystemSettings(generalSettings, \"vat_system\") === \"igst\" ? `vat(${newSettings !== null && newSettings.vat})` : getSystemSettings(generalSettings, \"vat_system\") === \"cgst\" ? \"cgst+sgst\" + \"(\" + getSystemSettings(generalSettings, \"cgst\") + \"+\" + getSystemSettings(generalSettings, \"sgst\") + \")\" : `tax(${newSettings !== null && newSettings.vat})`, \"%:\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5765,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5766,\n      columnNumber: 85\n    }\n  }, currencySymbolLeft(), formatPrice(theVat), currencySymbolRight()))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-0 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5776,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 text-center border-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5777,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-0 justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5778,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 text-right\",\n    style: {\n      textAlign: \"start\",\n      paddingRight: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5779,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5786,\n      columnNumber: 85\n    }\n  }, _t(t(\"Department Tag Commission\")), orderDetails && orderDetails.dept_tag && \" (\" + orderDetails.dept_tag.commission + \"%\" + \")\", \" \", \":\", \" \", newOrder ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5797,\n      columnNumber: 93\n    }\n  }, currencySymbolLeft(), formatPrice(deptCommission), currencySymbolRight()) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5803,\n      columnNumber: 93\n    }\n  }, currencySymbolLeft(), formatPrice(0), currencySymbolRight())))))), getSystemSettings(generalSettings, \"sDiscount\") === \"flat\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-0 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5819,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 text-center border-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5820,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5821,\n      columnNumber: 85\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5822,\n      columnNumber: 89\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5823,\n      columnNumber: 93\n    }\n  }, _t(t(\"service charge\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5827,\n      columnNumber: 89\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    step: \"0.01\",\n    min: \"0\",\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5 form-control rounded-0 text-center\",\n    onChange: e => {\n      if (e.target.value !== \"\") {\n        setOrderDetails({ ...orderDetails,\n          serviceCharge: parseFloat(e.target.value)\n        });\n        let totalPayable = 0;\n        let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\n        let usdServiceCharge = parseFloat(e.target.value) / localCurrency.rate;\n        let usdDiscount = parseFloat(orderDetails.discount) / localCurrency.rate;\n        totalPayable = theSubTotal + theVat + usdServiceCharge - usdDiscount;\n        setTotalPaybale(totalPayable);\n        setReturnMoneyUsd(totalPayable - paidMoney);\n      } else {\n        setOrderDetails({ ...orderDetails,\n          serviceCharge: 0\n        });\n        let totalPayable = 0;\n        let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\n        let usdServiceCharge = parseFloat(0) / localCurrency.rate;\n        let usdDiscount = parseFloat(orderDetails.discount) / localCurrency.rate;\n        totalPayable = theSubTotal + theVat + usdServiceCharge - usdDiscount;\n        setTotalPaybale(totalPayable);\n        setReturnMoneyUsd(totalPayable - paidMoney);\n      }\n    },\n    value: orderDetails.serviceCharge !== 0 && orderDetails.serviceCharge,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5828,\n      columnNumber: 93\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5905,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5906,\n      columnNumber: 85\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5907,\n      columnNumber: 89\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5908,\n      columnNumber: 93\n    }\n  }, _t(t(\"discount\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5912,\n      columnNumber: 89\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    step: \"0.01\",\n    min: \"0\",\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5 form-control rounded-0 text-center\",\n    onChange: e => {\n      if (e.target.value !== \"\") {\n        setOrderDetails({ ...orderDetails,\n          discount: parseFloat(e.target.value)\n        });\n        let totalPayable = 0;\n        let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\n        let usdServiceCharge = parseFloat(orderDetails.serviceCharge) / localCurrency.rate;\n        let usdDiscount = parseFloat(e.target.value) / localCurrency.rate;\n        totalPayable = theSubTotal + theVat + usdServiceCharge - usdDiscount;\n        setTotalPaybale(totalPayable);\n        setReturnMoneyUsd(totalPayable - paidMoney);\n      } else {\n        setOrderDetails({ ...orderDetails,\n          discount: 0\n        });\n        let totalPayable = 0;\n        let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\n        let usdServiceCharge = parseFloat(orderDetails.serviceCharge) / localCurrency.rate;\n        let usdDiscount = parseFloat(0) / localCurrency.rate;\n        totalPayable = theSubTotal + theVat + usdServiceCharge - usdDiscount;\n        setTotalPaybale(totalPayable);\n        setReturnMoneyUsd(totalPayable - paidMoney);\n      }\n    },\n    value: orderDetails.discount !== 0 && orderDetails.discount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5913,\n      columnNumber: 93\n    }\n  }))))), getSystemSettings(generalSettings, \"sDiscount\") === \"percentage\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-0 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5996,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 text-center border-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5997,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5998,\n      columnNumber: 85\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5999,\n      columnNumber: 89\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6000,\n      columnNumber: 93\n    }\n  }, _t(t(\"service charge\")), \" %\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6004,\n      columnNumber: 89\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    step: \"0.01\",\n    min: \"0\",\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5 form-control rounded-0 text-center\",\n    onChange: e => {\n      if (e.target.value !== \"\") {\n        setOrderDetails({ ...orderDetails,\n          serviceCharge: parseFloat(e.target.value)\n        });\n        let totalPayable = 0; // let localCurrency = JSON.parse(\n        //   localStorage.getItem(\n        //     \"currency\"\n        //   )\n        // );\n        // let usdServiceCharge =\n        //   parseFloat(e.target.value) /\n        //   localCurrency.rate;\n        // console.log(\"coming\");\n\n        let usdServiceCharge = theSubTotal * (parseFloat(e.target.value) / 100); // let usdDiscount =\n        //   parseFloat(\n        //     orderDetails.discount\n        //   ) / localCurrency.rate;\n\n        let usdDiscount = theSubTotal * (parseFloat(orderDetails.discount) / 100);\n        totalPayable = theSubTotal + theVat + usdServiceCharge - usdDiscount;\n        setTotalPaybale(totalPayable);\n      } else {\n        setOrderDetails({ ...orderDetails,\n          serviceCharge: 0\n        });\n        let totalPayable = 0; // let localCurrency = JSON.parse(\n        //   localStorage.getItem(\n        //     \"currency\"\n        //   )\n        // );\n        // let usdServiceCharge =\n        //   parseFloat(0) /\n        //   localCurrency.rate;\n\n        let usdServiceCharge = 0; // let usdDiscount =\n        //   parseFloat(\n        //     orderDetails.discount\n        //   ) / localCurrency.rate;\n\n        let usdDiscount = theSubTotal * (parseFloat(orderDetails.discount) / 100);\n        totalPayable = theSubTotal + theVat + usdServiceCharge - usdDiscount;\n        setTotalPaybale(totalPayable);\n      }\n    },\n    value: orderDetails.serviceCharge !== 0 && orderDetails.serviceCharge,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6005,\n      columnNumber: 93\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6098,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6099,\n      columnNumber: 85\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6100,\n      columnNumber: 89\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6101,\n      columnNumber: 93\n    }\n  }, _t(t(\"discount\")), \" %\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6105,\n      columnNumber: 89\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    step: \"0.01\",\n    min: \"0\",\n    className: \"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5 form-control rounded-0 text-center\",\n    onChange: e => {\n      if (e.target.value !== \"\") {\n        setOrderDetails({ ...orderDetails,\n          discount: parseFloat(e.target.value)\n        });\n        let totalPayable = 0; // let localCurrency = JSON.parse(\n        //   localStorage.getItem(\n        //     \"currency\"\n        //   )\n        // );\n        // let usdServiceCharge =\n        //   parseFloat(\n        //     orderDetails.serviceCharge\n        //   ) / localCurrency.rate;\n\n        let usdServiceCharge = theSubTotal * (parseFloat(orderDetails.serviceCharge) / 100); // let usdDiscount =\n        //   parseFloat(e.target.value) /\n        //   localCurrency.rate;\n\n        let usdDiscount = theSubTotal * (parseFloat(e.target.value) / 100);\n        totalPayable = theSubTotal + theVat + usdServiceCharge - usdDiscount;\n        setTotalPaybale(totalPayable);\n      } else {\n        setOrderDetails({ ...orderDetails,\n          discount: 0\n        });\n        let totalPayable = 0; // let localCurrency = JSON.parse(\n        //   localStorage.getItem(\n        //     \"currency\"\n        //   )\n        // );\n\n        let usdServiceCharge = theSubTotal * (parseFloat(orderDetails.serviceCharge) / 100);\n        let usdDiscount = 0;\n        totalPayable = theSubTotal + theVat + usdServiceCharge - usdDiscount;\n        setTotalPaybale(totalPayable);\n      }\n    },\n    value: orderDetails.discount !== 0 && orderDetails.discount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6106,\n      columnNumber: 93\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-bg-epsilon t-pl-10 t-pr-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6194,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6195,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6196,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize font-weight-bold text-light d-block t-pt-8 t-pb-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6197,\n      columnNumber: 77\n    }\n  }, _t(t(\"total bill\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6201,\n      columnNumber: 73\n    }\n  }, totalPayable ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize font-weight-bold text-light d-block t-pt-8 t-pb-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6203,\n      columnNumber: 81\n    }\n  }, currencySymbolLeft(), formatPrice(totalPayable), currencySymbolRight()) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize font-weight-bold text-light d-block t-pt-8 t-pb-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6209,\n      columnNumber: 81\n    }\n  }, currencySymbolLeft(), formatPrice(0), currencySymbolRight())))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-0 align-items-center t-mt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6219,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6220,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-mr-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6221,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-calculator-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6222,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-info text-uppercase\",\n    onClick: () => setCalculatorMenu(!calculatorMenu),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6223,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-calculator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6230,\n      columnNumber: 85\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `calculator ${calculatorMenu && \"active\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6232,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(Calculator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6236,\n      columnNumber: 85\n    }\n  }))))), getSystemSettings(generalSettings, \"pos_screen\") === \"0\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6245,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6246,\n      columnNumber: 81\n    }\n  }, returnMoneyUsd > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-mr-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6248,\n      columnNumber: 89\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize font-weight-bold mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6249,\n      columnNumber: 93\n    }\n  }, _t(t(\"Return\"))), totalPayable ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize font-weight-bold t-pt-8 t-pb-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6253,\n      columnNumber: 97\n    }\n  }, currencySymbolLeft(), formatPrice(returnMoneyUsd), currencySymbolRight()) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize font-weight-bold t-pt-8 t-pb-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6259,\n      columnNumber: 97\n    }\n  }, currencySymbolLeft(), formatPrice(0), currencySymbolRight())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-mr-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6268,\n      columnNumber: 85\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary sm-text text-uppercase font-weight-bold\",\n    onClick: !loading && handleSettleOrder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6269,\n      columnNumber: 89\n    }\n  }, !loading ? _t(t(\"settle\")) : _t(t(\"Please wait\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6281,\n      columnNumber: 85\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-success sm-text text-uppercase font-weight-bold\",\n    onClick: !loading && handleSubmitOrder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6282,\n      columnNumber: 89\n    }\n  }, !loading ? _t(t(\"submit\")) : _t(t(\"Please wait\")))))), getSystemSettings(generalSettings, \"pos_screen\") === \"1\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6301,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6302,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-mr-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6303,\n      columnNumber: 85\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary sm-text text-uppercase font-weight-bold\",\n    onClick: handleSettleOrderButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6304,\n      columnNumber: 89\n    }\n  }, !loading ? _t(t(\"settle\")) : _t(t(\"Please wait\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6314,\n      columnNumber: 85\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-success sm-text text-uppercase font-weight-bold\",\n    onClick: !loading && handleSubmitOrder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6315,\n      columnNumber: 89\n    }\n  }, !loading ? _t(t(\"submit\")) : _t(t(\"Please wait\")))))))))))))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `fk-settle-container d-flex flex-column justify-content-center ${showSettle ? \"\" : \"d-none\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6349,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-settle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6353,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6354,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6355,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6 d-none d-lg-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6356,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sm-text d-block text-capitalize font-weight-bold py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6357,\n      columnNumber: 33\n    }\n  }, \"new order\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-settle__products d-flex flex-column\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6360,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6364,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6365,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6366,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-price-table__body t-mt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6368,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-price-table__body-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6369,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6370,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-table__head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6371,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-0 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6372,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-1 text-center border-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6373,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6374,\n      columnNumber: 73\n    }\n  }, _t(t(\"S/L\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 text-center border-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6378,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6379,\n      columnNumber: 73\n    }\n  }, _t(t(\"food item\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2 text-center border-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6383,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6384,\n      columnNumber: 73\n    }\n  }, _t(t(\"QTY\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6388,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6389,\n      columnNumber: 73\n    }\n  }, _t(t(\"price\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-pb-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6395,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sky-is-blue reverse-this\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6396,\n      columnNumber: 65\n    }\n  }, newOrder && newOrder.length > 0 ? newOrder.map((orderListItem, orderListItemIndex) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: `fk-table-container-order ${orderListItemIndex === activeItemInOrder && \"active\"} `,\n      onClick: e => {\n        e.preventDefault(); //orderListItem's group wise all items\n\n        let tempItems = foodForSearch && foodForSearch.filter(tempItem => {\n          return tempItem.food_group_id === orderListItem.item.food_group_id;\n        }); //orderListItem's group\n\n        let foodGroup = foodGroupForSearch && foodGroupForSearch.find(groupItem => {\n          return groupItem.id === parseInt(orderListItem.item.food_group_id);\n        }); // selected pos item\n\n        let selectedItemTemp = tempItems && tempItems.find(tempSelectedItem => {\n          return tempSelectedItem.id === orderListItem.item.id;\n        }); // Set variations, properties, selected item\n\n        setFoodItem({ ...foodItem,\n          foodGroup: foodGroup,\n          items: tempItems,\n          selectedItem: selectedItemTemp,\n          variations: selectedItemTemp && parseInt(selectedItemTemp.has_variation) === 1 ? selectedItemTemp.variations : null,\n          properties: selectedItemTemp && parseInt(selectedItemTemp.has_property) === 1 ? selectedItemTemp.properties : null\n        }); //set active order list index for background color of selected\n\n        setActiveItemInOrder(orderListItemIndex);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6403,\n        columnNumber: 89\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `row g-0 border-top-0 border-bottom `,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6479,\n        columnNumber: 93\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-1 text-center border-left d-flex justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6482,\n        columnNumber: 97\n      }\n    }, newOrder.length - orderListItemIndex), /*#__PURE__*/React.createElement(\"div\", {\n      className: `col-6 border-left border-right py-2`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6486,\n        columnNumber: 97\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6489,\n        columnNumber: 101\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-capitalize d-block t-pt-5 t-pb-5 t-pl-5 t-pr-5 sm-text font-weight-bold t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6490,\n        columnNumber: 105\n      }\n    }, orderListItem.item.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row g-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6494,\n        columnNumber: 101\n      }\n    }, parseInt(orderListItem.item.has_variation) === 1 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6500,\n        columnNumber: 113\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-capitalize sm-text d-inline-block font-weight-bold t-pr-5 t-pl-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6501,\n        columnNumber: 117\n      }\n    }, \"variation :\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-capitalize xsm-text d-inline-block badge rounded-pill bg-warning text-dark font-weight-md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6504,\n        columnNumber: 117\n      }\n    }, orderListItem.variation ? orderListItem.variation.variation_name : \"-\")), orderListItem.properties && orderListItem.properties.length > 0 && selectedPropertyGroup[orderListItemIndex] !== undefined && selectedPropertyGroup[orderListItemIndex].map(thisIsGroup => {\n      let theGroup = propertyGroupForSearch && propertyGroupForSearch.find(theItem => {\n        return theItem.id === thisIsGroup;\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 6535,\n          columnNumber: 117\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-capitalize sm-text d-inline-block font-weight-bold t-pr-5 t-pl-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 6536,\n          columnNumber: 121\n        }\n      }, theGroup && theGroup.name, \" \", \":\"), orderListItem.properties.map(propertyName => {\n        if (parseInt(propertyName.item.property_group_id) === theGroup.id) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            className: \"text-capitalize xsm-text d-inline-block badge rounded-pill bg-warning text-dark font-weight-md mr-1\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 6554,\n              columnNumber: 137\n            }\n          }, propertyName.item.name, \" \", /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 6560,\n              columnNumber: 141\n            }\n          }, \" \", propertyName.quantity > 1 && \"(\" + propertyName.quantity + \")\"));\n        } else {\n          return true;\n        }\n      }));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2 text-center border-right d-flex justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6583,\n        columnNumber: 97\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fk-qty t-pt-5 t-pb-5 justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6584,\n        columnNumber: 101\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: orderListItem.quantity,\n      className: \"fk-qty__input t-bg-clear\",\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6585,\n        columnNumber: 105\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3 text-center border-right d-flex justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6598,\n        columnNumber: 97\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-capitalize sm-text font-weight-bold t-pt-5 t-pb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6599,\n        columnNumber: 101\n      }\n    }, parseInt(orderListItem.item.has_variation) === 1 ? /*#__PURE__*/React.createElement(React.Fragment, null, currencySymbolLeft(), showPriceOfEachOrderItem(orderListItemIndex), currencySymbolRight()) : /*#__PURE__*/React.createElement(React.Fragment, null, currencySymbolLeft(), showPriceOfEachOrderItem(orderListItemIndex), currencySymbolRight()))))));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-primary text-center font-weight-bold pt-5 xsm-text text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6631,\n      columnNumber: 73\n    }\n  }, _t(t(\"Select food item to add to the list\"))))))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6647,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6648,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6649,\n      columnNumber: 37\n    }\n  }, returnMoneyUsd > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger text-center\",\n    style: {\n      height: \"56px\",\n      marginTop: \"16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6651,\n      columnNumber: 45\n    }\n  }, \"Return Amount: \", formatPrice(returnMoneyUsd)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-settle-group d-flex t-mt-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6659,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"settle-total\",\n    className: \"text-capitalize w-50 fk-settle-group__label font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6660,\n      columnNumber: 53\n    }\n  }, \"total:\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"settle-total\",\n    className: \"w-50 fk-settle-group__input text-right pr-2 font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6666,\n      columnNumber: 53\n    }\n  }, formatPrice(totalPayable))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-settle-group d-flex t-mt-10 t-mb-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6673,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"settle-paid-amount\",\n    className: \"text-capitalize w-50 fk-settle-group__label font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6674,\n      columnNumber: 53\n    }\n  }, \"paid amount:\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"settle-total\",\n    className: \"w-50 fk-settle-group__input text-right pr-2 font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6680,\n      columnNumber: 53\n    }\n  }, paidMoney))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-settle-cal container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6689,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row h-100 g-2 mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6690,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6691,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-2 h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6692,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6693,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fk-settle-cal-btn t-bg-p t-text-white\",\n    onClick: () => {\n      if (!returnMoneyUsd > 0) {\n        setPaidMoney(paidMoney + 10);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6694,\n      columnNumber: 61\n    }\n  }, \"10\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6705,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fk-settle-cal-btn t-bg-p t-text-white\",\n    onClick: () => {\n      if (!returnMoneyUsd > 0) {\n        setPaidMoney(paidMoney + 20);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6706,\n      columnNumber: 61\n    }\n  }, \"20\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6717,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fk-settle-cal-btn t-bg-p t-text-white\",\n    onClick: () => {\n      if (!returnMoneyUsd > 0) {\n        setPaidMoney(paidMoney + 50);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6718,\n      columnNumber: 61\n    }\n  }, \"50\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6729,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fk-settle-cal-btn t-bg-p t-text-white\",\n    onClick: () => {\n      if (!returnMoneyUsd > 0) {\n        setPaidMoney(paidMoney + 100);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6730,\n      columnNumber: 61\n    }\n  }, \"100\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6743,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-2 h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6744,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6745,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-2 h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6746,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6747,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fk-settle-cal-btn t-bg-w\",\n    onClick: () => {\n      if (!returnMoneyUsd > 0) {\n        setPaidMoney(paidMoney + 1);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6748,\n      columnNumber: 69\n    }\n  }, \"1\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6759,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fk-settle-cal-btn t-bg-w\",\n    onClick: () => {\n      if (!returnMoneyUsd > 0) {\n        setPaidMoney(paidMoney + 4);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6760,\n      columnNumber: 69\n    }\n  }, \"4\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6771,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fk-settle-cal-btn t-bg-w\",\n    onClick: () => {\n      if (!returnMoneyUsd > 0) {\n        setPaidMoney(paidMoney + 7);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6772,\n      columnNumber: 69\n    }\n  }, \"7\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6783,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fk-settle-cal-btn t-bg-p t-text-white\",\n    onClick: () => {\n      if (!returnMoneyUsd > 0) {\n        setPaidMoney(paidMoney + 500);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6784,\n      columnNumber: 69\n    }\n  }, \"500\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6797,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-2 h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6798,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6799,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fk-settle-cal-btn t-bg-w\",\n    onClick: () => {\n      if (!returnMoneyUsd > 0) {\n        setPaidMoney(paidMoney + 2);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6800,\n      columnNumber: 69\n    }\n  }, \"2\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6811,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fk-settle-cal-btn t-bg-w\",\n    onClick: () => {\n      if (!returnMoneyUsd > 0) {\n        setPaidMoney(paidMoney + 5);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6812,\n      columnNumber: 69\n    }\n  }, \"5\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6823,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fk-settle-cal-btn t-bg-w\",\n    onClick: () => {\n      if (!returnMoneyUsd > 0) {\n        setPaidMoney(paidMoney + 8);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6824,\n      columnNumber: 69\n    }\n  }, \"8\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6835,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fk-settle-cal-btn t-bg-p t-text-white\",\n    onClick: () => {\n      if (!returnMoneyUsd > 0) {\n        setPaidMoney(paidMoney + 1000);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6836,\n      columnNumber: 69\n    }\n  }, \"1000\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6849,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-2 h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6850,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6851,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fk-settle-cal-btn t-bg-w\",\n    onClick: () => {\n      if (!returnMoneyUsd > 0) {\n        setPaidMoney(paidMoney + 3);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6852,\n      columnNumber: 69\n    }\n  }, \"3\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6863,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fk-settle-cal-btn t-bg-w\",\n    onClick: () => {\n      if (!returnMoneyUsd > 0) {\n        setPaidMoney(paidMoney + 6);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6864,\n      columnNumber: 69\n    }\n  }, \"6\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6875,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fk-settle-cal-btn t-bg-w\",\n    onClick: () => {\n      if (!returnMoneyUsd > 0) {\n        setPaidMoney(paidMoney + 9);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6876,\n      columnNumber: 69\n    }\n  }, \"9\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6887,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fk-settle-cal-btn  t-bg-d t-text-white\",\n    onClick: () => {\n      setPaidMoney(0);\n      setReturnMoneyUsd(0);\n      setOrderDetails({ ...orderDetails,\n        payment_type: null\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6888,\n      columnNumber: 69\n    }\n  }, \"C\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6904,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-2 h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6905,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6906,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fk-settle-cal-btn t-text-white t-bg-ac text-capitalize\",\n    onClick: () => {\n      let theP = parseFloat(formatPrice(totalPayable));\n      setPaidMoney(theP);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6907,\n      columnNumber: 69\n    }\n  }, \"all\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6919,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fk-settle-cal-btn t-text-white t-bg-ac text-capitalize\",\n    onClick: () => {\n      if (!returnMoneyUsd > 0) {\n        let theP = formatPrice(parseFloat(totalPayable) / 2);\n        setPaidMoney(parseFloat(theP));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6920,\n      columnNumber: 69\n    }\n  }, \"1/2\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6934,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fk-settle-cal-btn t-text-white t-bg-ac text-capitalize\",\n    onClick: () => {\n      if (!returnMoneyUsd > 0) {\n        let theP = formatPrice(parseFloat(totalPayable) / 3);\n        setPaidMoney(parseFloat(theP));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6935,\n      columnNumber: 69\n    }\n  }, \"1/3\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6949,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fk-settle-cal-btn bg-primary t-text-white t-bg-r text-capitalize\",\n    onClick: !loading && handleSettleOrder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6950,\n      columnNumber: 69\n    }\n  }, !loading ? _t(t(\"settle\")) : _t(t(\"wait\"))))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6964,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column justify-content-center t-mt-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6965,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-settle__pay\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6966,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6967,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6968,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list fk-pos-nav list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6970,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"fk-pos-nav__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6971,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      setShowSettle(false);\n    },\n    className: \"w-100 t-text-dark t-heading-font btn alert alert-danger font-weight-bold text-uppercase py-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6972,\n      columnNumber: 65\n    }\n  }, \"Go back\")), paymentTypeForSearch && paymentTypeForSearch.map((groupItem, groupIndex) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"fk-pos-nav__list\",\n      key: groupIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6987,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\" //set active or !\n      ,\n      className: `w-100 t-text-dark t-heading-font btn btn-outline-danger font-weight-bold text-uppercase py-3 ${orderDetails && orderDetails.payment_type !== null && orderDetails.payment_type[0].id === groupItem.id ? \"active\" : \"\"}`,\n      onClick: () => {\n        handleSetpaymentTypeSingle(groupItem);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6991,\n        columnNumber: 81\n      }\n    }, groupItem.name));\n  }))))))))))))));\n};\n\nexport default EditSubmittedOrder;","map":{"version":3,"sources":["/Users/raza/Downloads/khadyo_source_code/client/src/resources/restaurant/auth/pos/EditSubmittedOrder.js"],"names":["React","useContext","useEffect","useState","useRef","NavLink","axios","BASE_URL","_t","getCookie","currencySymbolLeft","formatPrice","currencySymbolRight","getSystemSettings","useTranslation","Helmet","Select","makeAnimated","confirmAlert","toast","Moment","useReactToPrint","UserContext","SettingsContext","RestaurantContext","FoodContext","Calculator","EditSubmittedOrder","loading","setLoading","generalSettings","showManageStock","authUserInfo","customerForSearch","setCustomerForSearch","waiterForSearch","foodForSearch","foodGroupForSearch","getFoodGroup","propertyGroupForSearch","foodItemStock","workPeriodForSearch","setWorkPeriodListForSearch","branchForSearch","tableForSearch","deptTagForSearch","paymentTypeForSearch","t","foodItem","setFoodItem","foodGroup","items","selectedItem","variations","properties","showSettle","setShowSettle","calculatorMenu","setCalculatorMenu","newOrder","setNewOrder","activeItemInOrder","setActiveItemInOrder","selectedVariation","setSelectedVariation","selectedPropertyGroup","setSelectedPropertyGroup","selectedProperties","setSelectedProperties","theSubTotal","setTheSubTotal","totalPayable","setTotalPaybale","paidMoney","setPaidMoney","returnMoneyUsd","setReturnMoneyUsd","theVat","setTheVat","deptCommission","setDeptCommission","newSettings","setNewSettings","orderDetailUsers","setOrderDetailusers","theCustomers","theTables","theWaiters","orderDetails","setOrderDetails","branch","customer","table","waiter","dept_tag","payment_type","payment_amount","total_guest","newCustomer","newCustomerInfo","name","number","token","serviceCharge","discount","orderFoodGroups","setOrderFoodGroups","onlineCounter","setOnlineCounter","tempItems","filter","tempItem","parseInt","food_group_id","id","length","has_variation","has_property","details","theBranch","find","branch_id","undefined","theWorkPeriod","tempWorkPeriod","endAtNullItem","ended_at","vat","workPeriod","interval","setInterval","pendingUrl","get","headers","Authorization","then","res","data","order","document","getElementById","play","catch","err","handleGetStock","stock","item","food_id","qty","handleAlreadyOrderedQty","temp","map","quantity","handleOrderItem","tempFoodItem","oldOrderItems","newOrderItem","tempSelectedVariations","eachOldOrderItem","push","tempArray","variation","food_with_variation_id","time","Date","getTime","totalPrice","newSelectedGroup","eachOrderGroup","theGroup","grpFilter","grpFilterIndex","includes","theOrderFoodGroups","forEach","thisItem","thisItemIndex","findThegroup","filterThisGroup","filterThisGroupIndex","beep","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","className","handleOrderItemVariation","tempFoodItemVariation","newOrderItemTemp","index","checkChecked","variationItem","handleDeleteConfirmation","removeIndex","customUI","onClose","handleRemoveItemFromOrderList","selectedVariationItem","variationIndex","tempSelectedProperties","selectedPropertyItem","propertyIndex","tempSelectedPropertyGroup","selectedPropertyGroupItem","propertyGroupIndex","handleOrderItemQty","action","closeButton","handleCancelConfirmation","handleCancel","setTimeout","handleAddProperties","property","propertyItem","tempArrayPropertyGroup","tempPropertyArray","eachPropertyItem","property_group_id","newSelectedPropertyGroup","eachSelectedGroupArray","unique","Set","handleRemoveProperties","newSelectedProperties","allPropertyGroups","selectedProperty","theProperties","filterThis","groupItem","groupItemIndex","tempGroupArray","filterThisItem","pushThis","checkCheckedProperties","handlePropertyQty","tempPropertyItemsArray","newPropertyItemForQtyUpdate","checkCheckedPropertyQuantity","orderItem","theItem","theItemTemp","showPriceOfEachOrderItem","itemIndex","price","parseFloat","food_with_variation_price","getEachItemPrice","totalPropertyPrice","extra_price","formattedPrice","showPriceOfEachOrderItemPrint","allOrderItems","subTotal","tempVat","tempCommission","commission","localCurrency","JSON","parse","localStorage","getItem","usdServiceCharge","usdDiscount","rate","handleCalculatePaid","handleSearch","e","searchInput","target","value","toLowerCase","searchedList","lowerCaseItemName","lowerCaseItemGroup","food_group","handleSetBranch","tempCustomers","eachCustomer","tempTables","eachTable","tempWaiters","eachWaiter","handleSetCustomer","handleNewCustomer","handleSetTable","handleSetWaiter","handleSetDeptTag","handleSetpaymentType","handleSetpaymentTypeSingle","theUsdPaid","theReturnMoney","handlePaymentTypeAmount","tempPaymentAmount","handleTotalGuest","paymentAmount","paymentType","paidAmount","thePaymentArray","Object","entries","eachPaymentItem","thePaymentType","paymentTypeItem","handleSubmitOrder","preventDefault","axiosRequest","url","formData","orderItems","dept_commission","post","handlePrint","handleSettleOrderButton","handleSettleOrder","axiosRequestForSettle","componentRef","component2Ref","handleOnlyPrint","content","current","onAfterPrint","handleOnlyPrint2","handlePrint2","handleOrderSubmitSuccessful","success","address","phn_no","printItem","printItemIndex","variation_name","thisIsGroup","propertyName","thisIsGroupPaddingTopIndex","tax","theGrp","grpIndex","selectedGroup","singlePropertyGroup","eachItem","allow_multi_quantity","orderListItem","orderListItemIndex","selectedItemTemp","tempSelectedItem","Math","abs","user_type","option","eachPaymentType","paymentTypeIndex","mobileGroup","mobileGroupIndex","mobileItem","mobileItemIndex","backgroundImage","image","zIndex","window","location","pathname","deptItem","deptItemIndex","groupIndex","tempFoodItemIndex","paddingBottom","textAlign","paddingRight","height","marginTop","theP"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState, useRef } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n    _t,\r\n    getCookie,\r\n    currencySymbolLeft,\r\n    formatPrice,\r\n    currencySymbolRight,\r\n    getSystemSettings,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Moment from \"react-moment\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\n//importing context consumer here\r\nimport { UserContext } from \"../../../../contexts/User\";\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\nimport { RestaurantContext } from \"../../../../contexts/Restaurant\";\r\nimport { FoodContext } from \"../../../../contexts/Food\";\r\nimport Calculator from \"./calc/Calculator\";\r\n\r\nconst EditSubmittedOrder = () => {\r\n    //getting context values here\r\n    const {\r\n        //common\r\n        loading,\r\n        setLoading,\r\n        generalSettings,\r\n        showManageStock,\r\n    } = useContext(SettingsContext);\r\n\r\n    const {\r\n        authUserInfo,\r\n        //customer\r\n        customerForSearch,\r\n        setCustomerForSearch,\r\n        //waiter\r\n        waiterForSearch,\r\n    } = useContext(UserContext);\r\n\r\n    const {\r\n        //food\r\n        foodForSearch,\r\n        //food group\r\n        foodGroupForSearch,\r\n        getFoodGroup,\r\n        //property group\r\n        propertyGroupForSearch,\r\n        //food stock\r\n        foodItemStock,\r\n    } = useContext(FoodContext);\r\n\r\n    const {\r\n        //work period\r\n        workPeriodForSearch,\r\n        setWorkPeriodListForSearch,\r\n        //branch\r\n        branchForSearch,\r\n        //table\r\n        tableForSearch,\r\n        //dept-tag\r\n        deptTagForSearch,\r\n        //payment-type\r\n        paymentTypeForSearch,\r\n    } = useContext(RestaurantContext);\r\n\r\n    const { t } = useTranslation();\r\n\r\n    // State hooks here\r\n    const [foodItem, setFoodItem] = useState({\r\n        foodGroup: null,\r\n        items: null,\r\n        selectedItem: null,\r\n        variations: null,\r\n        properties: null,\r\n    });\r\n\r\n    // const [foodItem, setFoodItem] = useState({\r\n    //   foodGroup: [{\r\n    //     id: 22,\r\n    //     name: \"Bread\",\r\n    //     slug: \"34d-1639221643-bread\",\r\n    //     created_at: \"2021-12-11T07:50:43.000000Z\",\r\n    //     updated_at: \"2021-12-11T07:50:43.000000Z\",\r\n\r\n    //   }],\r\n    //   items: [{\r\n    //     id: 71,\r\n    //     food_group_id: \"22\",\r\n    //     food_group: \"Bread\",\r\n    //     name: \"Bread 1\",\r\n    //     slug: \"bXe-1639221673-bread-1\",\r\n    //     is_special: \"0\",\r\n    //     image: \"http://localhost/khadyo_updated_production_saas/laravel/public/images/food_item/1639221673-burgerjpg.jpg\", has_variation: \"0\",\r\n    //     price: \"11\",\r\n    //     has_property: \"0\",\r\n\r\n    //   }],\r\n    //   selectedItem: [{\r\n    //     id: 71,\r\n    //     food_group_id: \"22\",\r\n    //     food_group: \"Bread\",\r\n    //     name: \"Bread 1\",\r\n    //     slug: \"bXe-1639221673-bread-1\",\r\n    //     is_special: \"0\",\r\n    //     image: \"http://localhost/khadyo_updated_production_saas/laravel/public/images/food_item/1639221673-burgerjpg.jpg\", has_variation: \"0\",\r\n    //     price: \"11\",\r\n    //     has_property: \"0\",\r\n\r\n    //   }],\r\n    //   variations: null,\r\n    //   properties: null,\r\n    // });\r\n\r\n    // show settle\r\n    const [showSettle, setShowSettle] = useState(false);\r\n    //calculator\r\n    const [calculatorMenu, setCalculatorMenu] = useState(false);\r\n    //new order\r\n    const [newOrder, setNewOrder] = useState();\r\n    //active index of order list\r\n    const [activeItemInOrder, setActiveItemInOrder] = useState(null);\r\n    //checked variations\r\n    const [selectedVariation, setSelectedVariation] = useState([]);\r\n    //selected groups\r\n    const [selectedPropertyGroup, setSelectedPropertyGroup] = useState([]);\r\n    //checked properties\r\n    const [selectedProperties, setSelectedProperties] = useState([]);\r\n\r\n    //the sub total\r\n    const [theSubTotal, setTheSubTotal] = useState(0);\r\n    //total payable\r\n    const [totalPayable, setTotalPaybale] = useState(0);\r\n    // paidMoney\r\n    const [paidMoney, setPaidMoney] = useState(0);\r\n    //return\r\n    const [returnMoneyUsd, setReturnMoneyUsd] = useState(0);\r\n\r\n    //vat\r\n    const [theVat, setTheVat] = useState(0);\r\n\r\n    //deptCommission\r\n    const [deptCommission, setDeptCommission] = useState(0);\r\n\r\n    //vat settings\r\n    const [newSettings, setNewSettings] = useState(null);\r\n\r\n    //order details users\r\n    const [orderDetailUsers, setOrderDetailusers] = useState({\r\n        theCustomers: null,\r\n        theTables: null,\r\n        theWaiters: null,\r\n    });\r\n\r\n    //order details\r\n    const [orderDetails, setOrderDetails] = useState({\r\n        branch: null,\r\n        customer: null,\r\n        table: null,\r\n        waiter: null,\r\n        dept_tag: null,\r\n        payment_type: null,\r\n        payment_amount: null,\r\n        total_guest: 1,\r\n        newCustomer: false,\r\n        newCustomerInfo: {\r\n            name: \"\",\r\n            number: \"\",\r\n        },\r\n        token: null,\r\n        serviceCharge: 0,\r\n        discount: 0,\r\n    });\r\n\r\n    //orderFoodGroups\r\n    const [orderFoodGroups, setOrderFoodGroups] = useState(null);\r\n\r\n    //online order counter\r\n    const [onlineCounter, setOnlineCounter] = useState(0);\r\n\r\n    //useEffect- to get data on render\r\n    useEffect(() => {\r\n        if (foodGroupForSearch) {\r\n            let tempItems =\r\n                foodForSearch &&\r\n                foodForSearch.filter((tempItem) => {\r\n                    return parseInt(tempItem.food_group_id) === foodGroupForSearch[0].id;\r\n                });\r\n            if (tempItems && tempItems.length > 0) {\r\n                // initial group & item being active here, variations, properties\r\n                setFoodItem({\r\n                    foodGroup: foodGroupForSearch[0],\r\n                    items: tempItems,\r\n                    selectedItem: tempItems[0],\r\n                    variations:\r\n                        parseInt(tempItems[0].has_variation) === 1\r\n                            ? tempItems[0].variations\r\n                            : null,\r\n                    properties:\r\n                        parseInt(tempItems[0].has_property) === 1\r\n                            ? tempItems[0].properties\r\n                            : null,\r\n                });\r\n            }\r\n        }\r\n\r\n        if (authUserInfo.details) {\r\n            let theBranch =\r\n                branchForSearch &&\r\n                branchForSearch.find((branch) => {\r\n                    return parseInt(authUserInfo.details.branch_id) === branch.id;\r\n                });\r\n            setOrderDetails({\r\n                ...orderDetails,\r\n                branch: theBranch !== undefined ? theBranch : null,\r\n            });\r\n\r\n            //set work period\r\n            let theWorkPeriod = null;\r\n            if (theBranch !== undefined && theBranch !== null) {\r\n                theWorkPeriod =\r\n                    workPeriodForSearch &&\r\n                    workPeriodForSearch.filter((tempWorkPeriod) => {\r\n                        return theBranch.id === parseInt(tempWorkPeriod.branch_id);\r\n                    });\r\n\r\n                //filter it with ended_at === null;\r\n                theWorkPeriod =\r\n                    theWorkPeriod &&\r\n                    theWorkPeriod.find((endAtNullItem) => {\r\n                        return endAtNullItem.ended_at === null;\r\n                    });\r\n            }\r\n            //set work period here\r\n            setNewSettings({\r\n                ...newSettings,\r\n                vat: generalSettings && getSystemSettings(generalSettings, \"type_vat\"),\r\n                workPeriod: theWorkPeriod !== undefined ? theWorkPeriod : null,\r\n            });\r\n        } else {\r\n            // user type admin\r\n            setNewSettings({\r\n                ...newSettings,\r\n                vat: generalSettings && getSystemSettings(generalSettings, \"type_vat\"),\r\n            });\r\n        }\r\n        setOrderDetailusers({\r\n            theCustomers: customerForSearch ? customerForSearch : null,\r\n            theTables: tableForSearch ? tableForSearch : null,\r\n            theWaiters: waiterForSearch ? waiterForSearch : null,\r\n        });\r\n\r\n        //check online orders\r\n        const interval = setInterval(() => {\r\n            const pendingUrl = BASE_URL + \"/website/pending-order\";\r\n            return axios\r\n                .get(pendingUrl, {\r\n                    headers: { Authorization: `Bearer ${getCookie()}` },\r\n                })\r\n                .then((res) => {\r\n                    if (res.data > 0) {\r\n                        setOnlineCounter(res.data);\r\n                        let order = document.getElementById(\"myAudioOrder\");\r\n                        order.play();\r\n                    }\r\n                })\r\n                .catch((err) => { });\r\n        }, 30000);\r\n    }, [authUserInfo, generalSettings, foodForSearch, foodGroupForSearch]);\r\n\r\n    //stock\r\n    const handleGetStock = (id) => {\r\n        if (orderDetails.branch === null) {\r\n            return 0;\r\n        }\r\n        let stock = foodItemStock.find((item) => {\r\n            return (\r\n                parseInt(item.food_id) === parseInt(id) &&\r\n                parseInt(item.branch_id) === orderDetails.branch.id\r\n            );\r\n        });\r\n        if (stock === undefined || stock.qty < 0) {\r\n            return 0;\r\n        }\r\n        return stock.qty;\r\n    };\r\n\r\n    //get already ordered qty\r\n    const handleAlreadyOrderedQty = (id) => {\r\n        let temp = 0;\r\n        if (newOrder) {\r\n            newOrder.map((item) => {\r\n                if (parseInt(item.item.id) === id) {\r\n                    temp += parseInt(item.quantity);\r\n                }\r\n            });\r\n        }\r\n        return temp;\r\n    };\r\n\r\n    //add new item to order list\r\n    const handleOrderItem = (tempFoodItem) => {\r\n        // if manage is stock is enable\r\n        if (showManageStock) {\r\n            if (\r\n                handleGetStock(tempFoodItem.id) > handleAlreadyOrderedQty(tempFoodItem.id)\r\n            ) {\r\n                let oldOrderItems = [];\r\n                let newOrderItem = null;\r\n                let tempSelectedVariations = [];\r\n                if (newOrder) {\r\n                    newOrder.map((eachOldOrderItem) => {\r\n                        //push all old items to new array to setNewOrder\r\n                        oldOrderItems.push(eachOldOrderItem);\r\n\r\n                        //set selected variations of each order item\r\n                        let tempArray = [];\r\n                        if (eachOldOrderItem.variation !== null) {\r\n                            tempArray.push(eachOldOrderItem.variation.food_with_variation_id);\r\n                        } else {\r\n                            tempArray.push(null);\r\n                        }\r\n                        tempSelectedVariations.push(tempArray);\r\n                    });\r\n\r\n                    //add new order item\r\n                    newOrderItem = {\r\n                        item: tempFoodItem,\r\n                        variation:\r\n                            parseInt(tempFoodItem.has_variation) === 1\r\n                                ? tempFoodItem.variations[0]\r\n                                : null,\r\n                        quantity: 1,\r\n                    };\r\n\r\n                    //set selected variations of new item\r\n                    let tempArray = [];\r\n                    if (parseInt(tempFoodItem.has_variation) === 1) {\r\n                        tempArray.push(tempFoodItem.variations[0].food_with_variation_id);\r\n                    } else {\r\n                        tempArray.push(null);\r\n                    }\r\n                    tempSelectedVariations.push(tempArray);\r\n                    //push new item to new array to setNewOrder\r\n                    oldOrderItems.push(newOrderItem);\r\n                } else {\r\n                    //if no item in newOrder List\r\n                    setOrderDetails({\r\n                        //set token here on first order item add,\r\n                        ...orderDetails,\r\n                        token: {\r\n                            time: new Date().getTime(),\r\n                            id: newSettings.workPeriod.token,\r\n                        },\r\n                    });\r\n                    newOrderItem = {\r\n                        //add new order item\r\n                        item: tempFoodItem,\r\n                        variation:\r\n                            parseInt(tempFoodItem.has_variation) === 1\r\n                                ? tempFoodItem.variations[0]\r\n                                : null,\r\n                        quantity: 1,\r\n                    };\r\n\r\n                    //set selected variations of new item\r\n                    let tempArray = [];\r\n                    if (parseInt(tempFoodItem.has_variation) === 1) {\r\n                        tempArray.push(tempFoodItem.variations[0].food_with_variation_id);\r\n                    } else {\r\n                        tempArray.push(null);\r\n                    }\r\n                    tempSelectedVariations.push(tempArray);\r\n\r\n                    //push new item to new array to setNewOrder\r\n                    oldOrderItems.push(newOrderItem);\r\n                }\r\n\r\n                //set new order list with new array of all order items\r\n                setNewOrder(oldOrderItems);\r\n\r\n                //set order list active item index to add class \"actve\"\r\n                setActiveItemInOrder(oldOrderItems.length - 1);\r\n\r\n                //set selected variations\r\n                setSelectedVariation(tempSelectedVariations);\r\n\r\n                //calculate subTotalPrice\r\n                totalPrice(oldOrderItems);\r\n\r\n                //set order unique food groups\r\n                let newSelectedGroup = [];\r\n                oldOrderItems.map((eachOrderGroup) => {\r\n                    let theGroup = foodGroupForSearch.find((grpFilter, grpFilterIndex) => {\r\n                        return grpFilter.id === parseInt(eachOrderGroup.item.food_group_id);\r\n                    });\r\n\r\n                    if (!newSelectedGroup.includes(parseInt(theGroup.id))) {\r\n                        newSelectedGroup.push(parseInt(theGroup.id));\r\n                    }\r\n                });\r\n                let theOrderFoodGroups = [];\r\n                newSelectedGroup.forEach((thisItem, thisItemIndex) => {\r\n                    let findThegroup = foodGroupForSearch.find(\r\n                        (filterThisGroup, filterThisGroupIndex) => {\r\n                            return filterThisGroup.id === thisItem;\r\n                        }\r\n                    );\r\n                    theOrderFoodGroups.push(findThegroup);\r\n                });\r\n\r\n                setOrderFoodGroups(theOrderFoodGroups);\r\n\r\n                //sound\r\n                if (getSystemSettings(generalSettings, \"play_sound\") === \"1\") {\r\n                    let beep = document.getElementById(\"myAudio\");\r\n                    beep.play();\r\n                }\r\n            }\r\n            else {\r\n                toast.error(`${_t(t(\"Stock Out\"))}`, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                });\r\n            }\r\n        } else {\r\n            let oldOrderItems = [];\r\n            let newOrderItem = null;\r\n            let tempSelectedVariations = [];\r\n            if (newOrder) {\r\n                newOrder.map((eachOldOrderItem) => {\r\n                    //push all old items to new array to setNewOrder\r\n                    oldOrderItems.push(eachOldOrderItem);\r\n\r\n                    //set selected variations of each order item\r\n                    let tempArray = [];\r\n                    if (eachOldOrderItem.variation !== null) {\r\n                        tempArray.push(eachOldOrderItem.variation.food_with_variation_id);\r\n                    } else {\r\n                        tempArray.push(null);\r\n                    }\r\n                    tempSelectedVariations.push(tempArray);\r\n                });\r\n\r\n                //add new order item\r\n                newOrderItem = {\r\n                    item: tempFoodItem,\r\n                    variation:\r\n                        parseInt(tempFoodItem.has_variation) === 1\r\n                            ? tempFoodItem.variations[0]\r\n                            : null,\r\n                    quantity: 1,\r\n                };\r\n\r\n                //set selected variations of new item\r\n                let tempArray = [];\r\n                if (parseInt(tempFoodItem.has_variation) === 1) {\r\n                    tempArray.push(tempFoodItem.variations[0].food_with_variation_id);\r\n                } else {\r\n                    tempArray.push(null);\r\n                }\r\n                tempSelectedVariations.push(tempArray);\r\n                //push new item to new array to setNewOrder\r\n                oldOrderItems.push(newOrderItem);\r\n            } else {\r\n                //if no item in newOrder List\r\n                setOrderDetails({\r\n                    //set token here on first order item add,\r\n                    ...orderDetails,\r\n                    token: {\r\n                        time: new Date().getTime(),\r\n                        id: newSettings.workPeriod.token,\r\n                    },\r\n                });\r\n                newOrderItem = {\r\n                    //add new order item\r\n                    item: tempFoodItem,\r\n                    variation:\r\n                        parseInt(tempFoodItem.has_variation) === 1\r\n                            ? tempFoodItem.variations[0]\r\n                            : null,\r\n                    quantity: 1,\r\n                };\r\n\r\n                //set selected variations of new item\r\n                let tempArray = [];\r\n                if (parseInt(tempFoodItem.has_variation) === 1) {\r\n                    tempArray.push(tempFoodItem.variations[0].food_with_variation_id);\r\n                } else {\r\n                    tempArray.push(null);\r\n                }\r\n                tempSelectedVariations.push(tempArray);\r\n\r\n                //push new item to new array to setNewOrder\r\n                oldOrderItems.push(newOrderItem);\r\n            }\r\n\r\n            //set new order list with new array of all order items\r\n            setNewOrder(oldOrderItems);\r\n\r\n            //set order list active item index to add class \"actve\"\r\n            setActiveItemInOrder(oldOrderItems.length - 1);\r\n\r\n            //set selected variations\r\n            setSelectedVariation(tempSelectedVariations);\r\n\r\n            //calculate subTotalPrice\r\n            totalPrice(oldOrderItems);\r\n\r\n            //set order unique food groups\r\n            let newSelectedGroup = [];\r\n            oldOrderItems.map((eachOrderGroup) => {\r\n                let theGroup = foodGroupForSearch.find((grpFilter, grpFilterIndex) => {\r\n                    return grpFilter.id === parseInt(eachOrderGroup.item.food_group_id);\r\n                });\r\n\r\n                if (!newSelectedGroup.includes(parseInt(theGroup.id))) {\r\n                    newSelectedGroup.push(parseInt(theGroup.id));\r\n                }\r\n            });\r\n            let theOrderFoodGroups = [];\r\n            newSelectedGroup.forEach((thisItem, thisItemIndex) => {\r\n                let findThegroup = foodGroupForSearch.find(\r\n                    (filterThisGroup, filterThisGroupIndex) => {\r\n                        return filterThisGroup.id === thisItem;\r\n                    }\r\n                );\r\n                theOrderFoodGroups.push(findThegroup);\r\n            });\r\n\r\n            setOrderFoodGroups(theOrderFoodGroups);\r\n\r\n            //sound\r\n            if (getSystemSettings(generalSettings, \"play_sound\") === \"1\") {\r\n                let beep = document.getElementById(\"myAudio\");\r\n                beep.play();\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    //set order item's variation on change of variation\r\n    const handleOrderItemVariation = (tempFoodItemVariation) => {\r\n        if (activeItemInOrder !== null) {\r\n            if (newOrder) {\r\n                let oldOrderItems = []; //array to push order items\r\n                let newOrderItemTemp = null; //to edit selected item\r\n                let tempSelectedVariations = []; //to set selected variations array for order items\r\n                newOrder.map((newOrderItem, index) => {\r\n                    let tempArray = [];\r\n                    if (index === activeItemInOrder) {\r\n                        //changing variation of selected food item\r\n                        newOrderItemTemp = {\r\n                            ...newOrderItem,\r\n                            variation: tempFoodItemVariation,\r\n                        };\r\n                        //push updated item to orderlist\r\n                        oldOrderItems.push(newOrderItemTemp);\r\n\r\n                        //set updated variation for selected variation\r\n                        tempArray.push(tempFoodItemVariation.food_with_variation_id);\r\n                    } else {\r\n                        //set other items as it was which are not selected to edit\r\n                        newOrderItemTemp = newOrderItem;\r\n                        oldOrderItems.push(newOrderItemTemp);\r\n                        if (newOrderItemTemp.variation) {\r\n                            //set updated variation for selected variations\r\n                            tempArray.push(newOrderItemTemp.variation.food_with_variation_id);\r\n                        }\r\n                    }\r\n\r\n                    //push to the array to set selectedVariations\r\n                    tempSelectedVariations.push(tempArray);\r\n                });\r\n                //set variations here\r\n                setSelectedVariation(tempSelectedVariations);\r\n\r\n                //set updated order list\r\n                setNewOrder(oldOrderItems);\r\n\r\n                //calculate subTotalPrice\r\n                totalPrice(oldOrderItems);\r\n            }\r\n        }\r\n    };\r\n\r\n    //to check which variation is selected\r\n    const checkChecked = (variationItem) => {\r\n        //if variationItem.food_with_variation_id of selected item exist in selectedVariation - return true\r\n        if (selectedVariation[activeItemInOrder] !== undefined) {\r\n            if (\r\n                selectedVariation[activeItemInOrder][0] ===\r\n                variationItem.food_with_variation_id\r\n            ) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    //delete confirmation modal of item from order list\r\n    const handleDeleteConfirmation = (removeIndex) => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"card card-body\">\r\n                        <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n                        <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <button\r\n                                className=\"btn btn-primary\"\r\n                                onClick={() => {\r\n                                    handleRemoveItemFromOrderList(removeIndex);\r\n                                    onClose();\r\n                                }}\r\n                            >\r\n                                {_t(t(\"Yes, delete it!\"))}\r\n                            </button>\r\n                            <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                                {_t(t(\"No\"))}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n\r\n    //remove item from order list\r\n    const handleRemoveItemFromOrderList = (removeIndex) => {\r\n        let oldOrderItems = []; //array to push order items\r\n        newOrder.map((newOrderItem, index) => {\r\n            if (index !== removeIndex) {\r\n                //push item to orderlist\r\n                oldOrderItems.push(newOrderItem);\r\n            }\r\n        });\r\n\r\n        //delete variations here\r\n        let tempSelectedVariations = selectedVariation.filter(\r\n            (selectedVariationItem, variationIndex) => {\r\n                return variationIndex !== removeIndex;\r\n            }\r\n        );\r\n        //delete properties here\r\n        let tempSelectedProperties = selectedProperties.filter(\r\n            (selectedPropertyItem, propertyIndex) => {\r\n                return propertyIndex !== removeIndex;\r\n            }\r\n        );\r\n\r\n        //delete property group here\r\n        let tempSelectedPropertyGroup = selectedPropertyGroup.filter(\r\n            (selectedPropertyGroupItem, propertyGroupIndex) => {\r\n                return propertyGroupIndex !== removeIndex;\r\n            }\r\n        );\r\n\r\n        //set property group here\r\n        setSelectedPropertyGroup(tempSelectedPropertyGroup);\r\n\r\n        //set variations here\r\n        setSelectedVariation(tempSelectedVariations);\r\n\r\n        //set properties here\r\n        setSelectedProperties(tempSelectedProperties);\r\n\r\n        //set updated order list\r\n        setNewOrder(oldOrderItems);\r\n\r\n        //set active item in order list\r\n        setActiveItemInOrder(null);\r\n\r\n        //calculate subTotalPrice\r\n        totalPrice(oldOrderItems);\r\n\r\n        //set order unique food groups\r\n        let newSelectedGroup = [];\r\n        oldOrderItems.map((eachOrderGroup) => {\r\n            let theGroup = foodGroupForSearch.find((grpFilter, grpFilterIndex) => {\r\n                return grpFilter.id === parseInt(eachOrderGroup.item.food_group_id);\r\n            });\r\n\r\n            if (!newSelectedGroup.includes(parseInt(theGroup.id))) {\r\n                newSelectedGroup.push(parseInt(theGroup.id));\r\n            }\r\n        });\r\n        let theOrderFoodGroups = [];\r\n        newSelectedGroup.forEach((thisItem, thisItemIndex) => {\r\n            let findThegroup = foodGroupForSearch.find(\r\n                (filterThisGroup, filterThisGroupIndex) => {\r\n                    return filterThisGroup.id === thisItem;\r\n                }\r\n            );\r\n            theOrderFoodGroups.push(findThegroup);\r\n        });\r\n\r\n        setOrderFoodGroups(theOrderFoodGroups);\r\n\r\n        //sound\r\n        if (getSystemSettings(generalSettings, \"play_sound\") === \"1\") {\r\n            let beep = document.getElementById(\"myAudio\");\r\n            beep.play();\r\n        }\r\n    };\r\n\r\n    //handle order item quantity\r\n    const handleOrderItemQty = (action) => {\r\n        if (activeItemInOrder !== null) {\r\n            if (newOrder) {\r\n                let newOrderItemTemp = null; //to edit selected item\r\n                let oldOrderItems = []; //array to push order items\r\n                newOrder.map((newOrderItem, index) => {\r\n                    if (index === activeItemInOrder) {\r\n                        //update qty here\r\n                        if (action === \"+\") {\r\n                            // if manage is stock is enable\r\n                            if (showManageStock) {\r\n                                if (\r\n                                    handleGetStock(newOrderItem.item.id) >\r\n                                    handleAlreadyOrderedQty(newOrderItem.item.id)\r\n                                ) {\r\n                                    //increase qty\r\n                                    newOrderItemTemp = {\r\n                                        ...newOrderItem,\r\n                                        quantity: newOrderItem.quantity + 1,\r\n                                    };\r\n                                } else {\r\n                                    newOrderItemTemp = {\r\n                                        ...newOrderItem,\r\n                                        quantity: newOrderItem.quantity,\r\n                                    };\r\n                                    toast.error(`${_t(t(\"Reached Stock Limit\"))}`, {\r\n                                        position: \"bottom-center\",\r\n                                        closeButton: false,\r\n                                        autoClose: 10000,\r\n                                        hideProgressBar: false,\r\n                                        closeOnClick: true,\r\n                                        pauseOnHover: true,\r\n                                        className: \"text-center toast-notification\",\r\n                                    });\r\n                                }\r\n                            } else {\r\n                                //increase qty\r\n                                newOrderItemTemp = {\r\n                                    ...newOrderItem,\r\n                                    quantity: newOrderItem.quantity + 1,\r\n                                };\r\n                            }\r\n\r\n                        } else {\r\n                            //if qty !==1 decrease\r\n                            if (newOrderItem.quantity !== 1) {\r\n                                newOrderItemTemp = {\r\n                                    ...newOrderItem,\r\n                                    quantity: newOrderItem.quantity - 1,\r\n                                };\r\n                            } else {\r\n                                newOrderItemTemp = {\r\n                                    ...newOrderItem,\r\n                                    quantity: newOrderItem.quantity,\r\n                                };\r\n                            }\r\n                        }\r\n                        oldOrderItems.push(newOrderItemTemp);\r\n                    } else {\r\n                        // set other items as it was which are not selected to edit\r\n                        oldOrderItems.push(newOrderItem);\r\n                    }\r\n                });\r\n\r\n                //calculate subTotalPrice\r\n                totalPrice(oldOrderItems);\r\n                //set updated order list\r\n                setNewOrder(oldOrderItems);\r\n            }\r\n        }\r\n    };\r\n\r\n    //cancel order confirmation\r\n    const handleCancelConfirmation = () => {\r\n        confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n                return (\r\n                    <div className=\"card card-body bg-primary text-white\">\r\n                        <h1 className=\"text-white\">{_t(t(\"Are you sure?\"))}</h1>\r\n                        <p className=\"text-center\">\r\n                            {_t(t(\"You want to cancel this order?\"))}\r\n                        </p>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <button\r\n                                className=\"btn btn-warning text-dark\"\r\n                                onClick={() => {\r\n                                    handleCancel();\r\n                                    onClose();\r\n                                }}\r\n                            >\r\n                                {_t(t(\"Yes!\"))}\r\n                            </button>\r\n                            <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                                {_t(t(\"No\"))}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            },\r\n        });\r\n    };\r\n\r\n    //cancel order\r\n    const handleCancel = () => {\r\n        setLoading(true);\r\n        setNewOrder(null);\r\n        setActiveItemInOrder(null);\r\n        setSelectedVariation([]);\r\n        setSelectedPropertyGroup([]);\r\n        setSelectedProperties([]);\r\n        setTheSubTotal(0);\r\n        setDeptCommission(0);\r\n        setTheVat(0);\r\n        setTotalPaybale(0);\r\n        setReturnMoneyUsd(0);\r\n        setPaidMoney(0);\r\n        setOrderDetails({\r\n            branch: orderDetails.branch,\r\n            customer: null,\r\n            table: null,\r\n            waiter: null,\r\n            dept_tag: null,\r\n            payment_type: null,\r\n            payment_amount: null,\r\n            total_guest: 1,\r\n            newCustomer: false,\r\n            newCustomerInfo: {\r\n                name: \"\",\r\n                number: \"\",\r\n            },\r\n            token: null,\r\n            serviceCharge: 0,\r\n            discount: 0,\r\n        });\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 200);\r\n    };\r\n\r\n    //add properties\r\n    const handleAddProperties = (property) => {\r\n        let propertyItem = {\r\n            item: property,\r\n            quantity: 1,\r\n        };\r\n        if (activeItemInOrder !== null) {\r\n            if (newOrder) {\r\n                let oldOrderItems = []; //array to push order items\r\n                let newOrderItemTemp = null; //to edit selected item\r\n\r\n                let tempSelectedProperties = []; //to set selected properties array for order items\r\n                let tempSelectedPropertyGroup = []; //to set selected property group array for order items properties\r\n\r\n                newOrder.map((newOrderItem, index) => {\r\n                    let tempArray = []; //for selected properties\r\n                    let tempArrayPropertyGroup = []; //for selected property groups\r\n\r\n                    if (index === activeItemInOrder) {\r\n                        let tempPropertyArray = []; //for property items\r\n                        if (newOrderItem.properties) {\r\n                            newOrderItem.properties.map((eachPropertyItem) => {\r\n                                tempPropertyArray.push(eachPropertyItem);\r\n                                //set updated property for selected variation\r\n                                tempArray.push(eachPropertyItem.item.id);\r\n\r\n                                //handle selected property group\r\n                                tempArrayPropertyGroup.push(\r\n                                    parseInt(eachPropertyItem.item.property_group_id)\r\n                                );\r\n                            });\r\n                            tempPropertyArray.push(propertyItem);\r\n                            //for selected properties\r\n                            tempArray.push(propertyItem.item.id);\r\n                            //handle selected property group\r\n                            tempArrayPropertyGroup.push(\r\n                                parseInt(propertyItem.item.property_group_id)\r\n                            );\r\n                        } else {\r\n                            tempPropertyArray.push(propertyItem);\r\n                            //for selected properties\r\n                            tempArray.push(propertyItem.item.id);\r\n                            //handle selected property group\r\n                            tempArrayPropertyGroup.push(\r\n                                parseInt(propertyItem.item.property_group_id)\r\n                            );\r\n                        }\r\n\r\n                        //changing properties of selected food item\r\n                        newOrderItemTemp = {\r\n                            ...newOrderItem,\r\n                            properties: tempPropertyArray,\r\n                        };\r\n                        //push updated item to orderlist\r\n                        oldOrderItems.push(newOrderItemTemp);\r\n                    } else {\r\n                        // set other items as it was which are not selected to edit\r\n                        newOrderItemTemp = newOrderItem;\r\n                        oldOrderItems.push(newOrderItemTemp);\r\n                        if (newOrderItem.properties) {\r\n                            newOrderItem.properties.map((eachPropertyItem) => {\r\n                                //set updated properties for selected properties\r\n                                tempArray.push(eachPropertyItem.item.id);\r\n\r\n                                //set updated property groups for selected groups\r\n                                tempArrayPropertyGroup.push(\r\n                                    parseInt(eachPropertyItem.item.property_group_id)\r\n                                );\r\n                            });\r\n                        }\r\n                    }\r\n                    //push to the array to set selected properties\r\n                    tempSelectedProperties.push(tempArray);\r\n                    //push to the array to set selected property groups\r\n                    tempSelectedPropertyGroup.push(tempArrayPropertyGroup);\r\n                });\r\n\r\n                //set selected properties here\r\n                setSelectedProperties(tempSelectedProperties);\r\n\r\n                //handle selected property groups\r\n                let newSelectedPropertyGroup = [];\r\n                tempSelectedPropertyGroup.map((eachSelectedGroupArray) => {\r\n                    let unique = [...new Set(eachSelectedGroupArray)];\r\n                    newSelectedPropertyGroup.push(unique);\r\n                });\r\n                //set selected property groups here\r\n                setSelectedPropertyGroup(newSelectedPropertyGroup);\r\n\r\n                //calculate subTotalPrice\r\n                totalPrice(oldOrderItems);\r\n                //set updated order list\r\n                setNewOrder(oldOrderItems);\r\n            }\r\n        }\r\n    };\r\n\r\n    //remove properties\r\n    const handleRemoveProperties = (propertyItem) => {\r\n        if (activeItemInOrder !== null) {\r\n            if (newOrder) {\r\n                let oldOrderItems = []; //array to push order items\r\n                let newOrderItemTemp = null; //to edit selected item\r\n                let newSelectedProperties = []; //for selected properties\r\n                let allPropertyGroups = []; //for selected property groups\r\n\r\n                newOrder.map((newOrderItem, index) => {\r\n                    if (index === activeItemInOrder) {\r\n                        let tempPropertyArray = []; //for property items\r\n                        if (newOrderItem.properties) {\r\n                            newOrderItem.properties.map((eachPropertyItem) => {\r\n                                if (eachPropertyItem.item.id !== propertyItem.id) {\r\n                                    tempPropertyArray.push(eachPropertyItem);\r\n                                }\r\n                            });\r\n\r\n                            //removing properties from selected properties array\r\n                            selectedProperties.map((selectedProperty, propertyIndex) => {\r\n                                if (propertyIndex !== activeItemInOrder) {\r\n                                    //pushing other order items properties in selected array\r\n                                    newSelectedProperties.push(selectedProperty);\r\n                                } else {\r\n                                    let theProperties = selectedProperty.filter((filterThis) => {\r\n                                        return filterThis !== propertyItem.id;\r\n                                    });\r\n                                    //pushing this order items properties in selected array or [] if not a single property item is selected\r\n                                    newSelectedProperties.push(theProperties);\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        //changing properties of selected food item\r\n                        newOrderItemTemp = {\r\n                            ...newOrderItem,\r\n                            properties: tempPropertyArray,\r\n                        };\r\n\r\n                        //set selected properties here\r\n                        setSelectedProperties(newSelectedProperties);\r\n                        //push updated item to orderlist\r\n                        oldOrderItems.push(newOrderItemTemp);\r\n\r\n                        //property group for selected property group array\r\n                        selectedPropertyGroup.map((groupItem, groupItemIndex) => {\r\n                            if (index === groupItemIndex) {\r\n                                let tempGroupArray = []; // for selected group of each order item (index of array wise new array)\r\n                                groupItem.map((filterThisItem) => {\r\n                                    if (\r\n                                        filterThisItem !== parseInt(propertyItem.property_group_id)\r\n                                    ) {\r\n                                        //push if removable property item's group !== groupItem\r\n                                        tempGroupArray.push(filterThisItem);\r\n                                    }\r\n                                });\r\n\r\n                                //push all groups of modified new properties array of this item\r\n                                tempPropertyArray.map((pushThis) => {\r\n                                    tempGroupArray.push(\r\n                                        parseInt(pushThis.item.property_group_id)\r\n                                    );\r\n                                });\r\n\r\n                                //remove duplicate groups\r\n                                let unique = [...new Set(tempGroupArray)];\r\n                                allPropertyGroups.push(unique);\r\n                            } else {\r\n                                //keep other selected groups as it was\r\n                                allPropertyGroups.push(groupItem);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        // set other items as it was which are not selected to edit\r\n                        newOrderItemTemp = newOrderItem;\r\n                        oldOrderItems.push(newOrderItemTemp);\r\n                    }\r\n                });\r\n\r\n                //set new selected property groups\r\n                setSelectedPropertyGroup(allPropertyGroups);\r\n\r\n                //calculate subTotalPrice\r\n                totalPrice(oldOrderItems);\r\n\r\n                //set updated order list\r\n                setNewOrder(oldOrderItems);\r\n            }\r\n        }\r\n    };\r\n\r\n    //to check which property is selected\r\n    const checkCheckedProperties = (propertyItem) => {\r\n        //if property.id of selected item exist in selected properties - return true\r\n        if (selectedProperties[activeItemInOrder] !== undefined) {\r\n            if (selectedProperties[activeItemInOrder].includes(propertyItem.id)) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    //handle property quantity\r\n    const handlePropertyQty = (propertyItem, action) => {\r\n        if (activeItemInOrder !== null) {\r\n            if (newOrder) {\r\n                let newOrderItemTemp = null; //to edit selected item\r\n                let oldOrderItems = []; //array to push order items\r\n                let tempPropertyItemsArray = []; //for each property items\r\n                newOrder.map((newOrderItem, index) => {\r\n                    if (index === activeItemInOrder) {\r\n                        //if has property items\r\n                        if (newOrderItem.properties) {\r\n                            newOrderItem.properties.map((eachPropertyItem) => {\r\n                                //loop through the properties to change the specific one's quantity and keep the rest as it was\r\n                                if (eachPropertyItem.item.id !== propertyItem.id) {\r\n                                    //keep others as it was\r\n                                    tempPropertyItemsArray.push(eachPropertyItem);\r\n                                } else {\r\n                                    //coming here if the specific item's id === selected property item's id\r\n                                    let newPropertyItemForQtyUpdate = null;\r\n                                    //update qty here\r\n                                    if (action === \"+\") {\r\n                                        //increase qty\r\n                                        newPropertyItemForQtyUpdate = {\r\n                                            ...eachPropertyItem,\r\n                                            quantity: eachPropertyItem.quantity + 1,\r\n                                        };\r\n                                        tempPropertyItemsArray.push(newPropertyItemForQtyUpdate);\r\n                                    } else {\r\n                                        //if qty !==1 decrease\r\n                                        if (eachPropertyItem.quantity !== 1) {\r\n                                            newPropertyItemForQtyUpdate = {\r\n                                                ...eachPropertyItem,\r\n                                                quantity: eachPropertyItem.quantity - 1,\r\n                                            };\r\n                                            tempPropertyItemsArray.push(newPropertyItemForQtyUpdate);\r\n                                        } else {\r\n                                            tempPropertyItemsArray.push(eachPropertyItem);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                            //changing properties of selected food item\r\n                            newOrderItemTemp = {\r\n                                ...newOrderItem,\r\n                                properties: tempPropertyItemsArray,\r\n                            };\r\n                            //push updated item to orderlist\r\n                            oldOrderItems.push(newOrderItemTemp);\r\n                        } else {\r\n                            //push updated item to orderlist\r\n                            oldOrderItems.push(newOrderItem);\r\n                        }\r\n                    } else {\r\n                        // set other items as it was which are not selected to edit\r\n                        oldOrderItems.push(newOrderItem);\r\n                    }\r\n                });\r\n\r\n                //calculate subTotalPrice\r\n                totalPrice(oldOrderItems);\r\n                //set updated order list\r\n                setNewOrder(oldOrderItems);\r\n            }\r\n        }\r\n    };\r\n\r\n    //to check selected property item's quantity\r\n    const checkCheckedPropertyQuantity = (propertyItem) => {\r\n        //if propertyItem.id of selected item exist in selectedProperties - return the quantity of that property item from the order list item\r\n        if (selectedProperties[activeItemInOrder] !== undefined) {\r\n            if (selectedProperties[activeItemInOrder].includes(propertyItem.id)) {\r\n                //get order of activeItemInOrder index\r\n                if (newOrder) {\r\n                    if (newOrder[activeItemInOrder] !== undefined) {\r\n                        let orderItem = newOrder[activeItemInOrder];\r\n                        let theItem = orderItem.properties.find((theItemTemp) => {\r\n                            return theItemTemp.item.id === propertyItem.id;\r\n                        });\r\n                        return theItem.quantity;\r\n                    } else {\r\n                        return 1;\r\n                    }\r\n                } else {\r\n                    return 1;\r\n                }\r\n            } else {\r\n                return 1;\r\n            }\r\n        } else {\r\n            return 1;\r\n        }\r\n    };\r\n\r\n    //show price of each item in order list\r\n    const showPriceOfEachOrderItem = (itemIndex) => {\r\n        if (newOrder) {\r\n            let price = 0;\r\n            let orderItem = newOrder[itemIndex];\r\n            //check price * quantity (variation price / item price)\r\n            if (parseInt(orderItem.item.has_variation) === 1) {\r\n                price = parseFloat(orderItem.variation.food_with_variation_price);\r\n            } else {\r\n                price = parseFloat(orderItem.item.price);\r\n            }\r\n\r\n            //calculate total price of properties\r\n            if (orderItem.properties) {\r\n                if (orderItem.properties.length > 0) {\r\n                    orderItem.properties.map((getEachItemPrice) => {\r\n                        let totalPropertyPrice =\r\n                            parseFloat(getEachItemPrice.item.extra_price) *\r\n                            getEachItemPrice.quantity;\r\n                        price = price + totalPropertyPrice;\r\n                    });\r\n                }\r\n            }\r\n\r\n            let formattedPrice = formatPrice(price * orderItem.quantity);\r\n            return formattedPrice;\r\n        }\r\n    };\r\n\r\n    //show price of each item in print\r\n    const showPriceOfEachOrderItemPrint = (itemIndex) => {\r\n        if (newOrder) {\r\n            let price = 0;\r\n            let orderItem = newOrder[itemIndex];\r\n            //check price * quantity (variation price / item price)\r\n            if (parseInt(orderItem.item.has_variation) === 1) {\r\n                price = parseFloat(orderItem.variation.food_with_variation_price);\r\n            } else {\r\n                price = parseFloat(orderItem.item.price);\r\n            }\r\n\r\n            let formattedPrice = formatPrice(price * orderItem.quantity);\r\n            return formattedPrice;\r\n        }\r\n    };\r\n\r\n    //show total price\r\n    const totalPrice = (allOrderItems) => {\r\n        let subTotal = 0;\r\n        allOrderItems.map((orderItem) => {\r\n            let price = 0;\r\n            //check price * quantity (variation price / item price)\r\n            if (parseInt(orderItem.item.has_variation) === 1) {\r\n                price = parseFloat(orderItem.variation.food_with_variation_price);\r\n            } else {\r\n                price = parseFloat(orderItem.item.price);\r\n            }\r\n\r\n            //calculate total price of properties\r\n            if (orderItem.properties) {\r\n                if (orderItem.properties.length > 0) {\r\n                    orderItem.properties.map((getEachItemPrice) => {\r\n                        let totalPropertyPrice =\r\n                            parseFloat(getEachItemPrice.item.extra_price) *\r\n                            getEachItemPrice.quantity;\r\n                        price = price + totalPropertyPrice;\r\n                    });\r\n                }\r\n            }\r\n            subTotal = subTotal + price * orderItem.quantity;\r\n        });\r\n        setTheSubTotal(subTotal);\r\n\r\n        let tempVat = 0;\r\n        if (newSettings) {\r\n            tempVat = (subTotal * parseFloat(newSettings.vat)) / 100;\r\n            setTheVat(tempVat);\r\n        }\r\n\r\n        let tempCommission = 0;\r\n        if (orderDetails && orderDetails.dept_tag) {\r\n            tempCommission =\r\n                (subTotal * parseFloat(orderDetails.dept_tag.commission)) / 100;\r\n            setDeptCommission(tempCommission);\r\n        }\r\n\r\n        let totalPayable = 0;\r\n        let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\r\n\r\n        let usdServiceCharge;\r\n        let usdDiscount;\r\n        if (getSystemSettings(generalSettings, \"sDiscount\") === \"flat\") {\r\n            usdServiceCharge =\r\n                parseFloat(orderDetails.serviceCharge) / localCurrency.rate;\r\n            usdDiscount = parseFloat(orderDetails.discount) / localCurrency.rate;\r\n        } else {\r\n            usdServiceCharge =\r\n                subTotal * (parseFloat(orderDetails.serviceCharge) / 100);\r\n            usdDiscount = subTotal * (parseFloat(orderDetails.discount) / 100);\r\n        }\r\n\r\n        totalPayable =\r\n            subTotal + tempVat + usdServiceCharge - usdDiscount - tempCommission;\r\n        setTotalPaybale(totalPayable);\r\n\r\n        //calculate paid amount to set return amount\r\n        handleCalculatePaid(orderDetails.payment_amount, orderDetails.payment_type);\r\n    };\r\n\r\n    //search food here\r\n    const handleSearch = (e) => {\r\n        setActiveItemInOrder(null);\r\n        let searchInput = e.target.value.toLowerCase();\r\n        let searchedList = foodForSearch.filter((item) => {\r\n            let lowerCaseItemName = item.name.toLowerCase();\r\n            let lowerCaseItemGroup = item.food_group.toLowerCase();\r\n            return (\r\n                lowerCaseItemName.includes(searchInput) ||\r\n                lowerCaseItemGroup.includes(searchInput)\r\n            );\r\n        });\r\n        setFoodItem({\r\n            foodGroup: null,\r\n            items: searchedList.length > 0 ? searchedList : null,\r\n            selectedItem: null,\r\n            variations: null,\r\n            properties: null,\r\n        });\r\n    };\r\n\r\n    //set order detals additional info here\r\n    //set branch\r\n    const handleSetBranch = (branch) => {\r\n        setLoading(true);\r\n        let tempCustomers =\r\n            customerForSearch !== null &&\r\n            customerForSearch.filter((eachCustomer) => {\r\n                return parseInt(eachCustomer.branch_id) === branch.id;\r\n            });\r\n        let tempTables =\r\n            tableForSearch !== null &&\r\n            tableForSearch.filter((eachTable) => {\r\n                return parseInt(eachTable.branch_id) === branch.id;\r\n            });\r\n        let tempWaiters =\r\n            waiterForSearch !== null &&\r\n            waiterForSearch.filter((eachWaiter) => {\r\n                return parseInt(eachWaiter.branch_id) === branch.id;\r\n            });\r\n        setOrderDetailusers({\r\n            theCustomers: tempCustomers,\r\n            theTables: tempTables,\r\n            theWaiters: tempWaiters,\r\n        });\r\n\r\n        setNewOrder(null);\r\n        setActiveItemInOrder(null);\r\n        setSelectedVariation([]);\r\n        setSelectedPropertyGroup([]);\r\n        setSelectedProperties([]);\r\n        setTheSubTotal(0);\r\n        setTheVat(0);\r\n        setTotalPaybale(0);\r\n        setReturnMoneyUsd(0);\r\n        setPaidMoney(0);\r\n        setOrderDetails({\r\n            branch: branch,\r\n            customer: null,\r\n            table: null,\r\n            waiter: null,\r\n            dept_tag: null,\r\n            payment_type: null,\r\n            payment_amount: null,\r\n            total_guest: 1,\r\n            newCustomer: false,\r\n            newCustomerInfo: {\r\n                name: \"\",\r\n                number: \"\",\r\n            },\r\n            token: null,\r\n            serviceCharge: 0,\r\n            discount: 0,\r\n        });\r\n        // set work period according to branch for admin on branch change\r\n        let theWorkPeriod = null;\r\n        theWorkPeriod =\r\n            workPeriodForSearch &&\r\n            workPeriodForSearch.filter((tempWorkPeriod) => {\r\n                return branch.id === parseInt(tempWorkPeriod.branch_id);\r\n            });\r\n\r\n        theWorkPeriod = theWorkPeriod.find((endAtNullItem) => {\r\n            return endAtNullItem.ended_at === null;\r\n        });\r\n        setNewSettings({\r\n            ...newSettings,\r\n            workPeriod: theWorkPeriod !== undefined ? theWorkPeriod : null,\r\n            vat: newSettings.vat,\r\n        });\r\n\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 300);\r\n    };\r\n\r\n    //customer\r\n    const handleSetCustomer = (customer) => {\r\n        setOrderDetails({\r\n            ...orderDetails,\r\n            customer,\r\n        });\r\n    };\r\n\r\n    //new Customer\r\n    const handleNewCustomer = (e) => {\r\n        //if name is not there, set new customer === false\r\n        if (e.target.name === \"name\") {\r\n            if (e.target.value.length > 0) {\r\n                setOrderDetails({\r\n                    ...orderDetails,\r\n                    newCustomer: true,\r\n                    newCustomerInfo: {\r\n                        ...orderDetails.newCustomerInfo,\r\n                        [e.target.name]: e.target.value,\r\n                    },\r\n                });\r\n            } else {\r\n                setOrderDetails({\r\n                    ...orderDetails,\r\n                    newCustomer: false,\r\n                    newCustomerInfo: {\r\n                        ...orderDetails.newCustomerInfo,\r\n                        [e.target.name]: e.target.value,\r\n                    },\r\n                });\r\n            }\r\n        } else {\r\n            //set phn number here\r\n            setOrderDetails({\r\n                ...orderDetails,\r\n                newCustomerInfo: {\r\n                    ...orderDetails.newCustomerInfo,\r\n                    [e.target.name]: e.target.value,\r\n                },\r\n            });\r\n        }\r\n    };\r\n\r\n    //  table\r\n    const handleSetTable = (table) => {\r\n        setOrderDetails({\r\n            ...orderDetails,\r\n            table,\r\n        });\r\n    };\r\n\r\n    // waiter\r\n    const handleSetWaiter = (waiter) => {\r\n        setOrderDetails({\r\n            ...orderDetails,\r\n            waiter,\r\n        });\r\n    };\r\n\r\n    // department tag\r\n    const handleSetDeptTag = (dept_tag) => {\r\n        setOrderDetails({\r\n            ...orderDetails,\r\n            dept_tag,\r\n        });\r\n\r\n        let allOrderItems = newOrder;\r\n        if (allOrderItems) {\r\n            let subTotal = 0;\r\n            allOrderItems.map((orderItem) => {\r\n                let price = 0;\r\n                //check price * quantity (variation price / item price)\r\n                if (parseInt(orderItem.item.has_variation) === 1) {\r\n                    price = parseFloat(orderItem.variation.food_with_variation_price);\r\n                } else {\r\n                    price = parseFloat(orderItem.item.price);\r\n                }\r\n\r\n                //calculate total price of properties\r\n                if (orderItem.properties) {\r\n                    if (orderItem.properties.length > 0) {\r\n                        orderItem.properties.map((getEachItemPrice) => {\r\n                            let totalPropertyPrice =\r\n                                parseFloat(getEachItemPrice.item.extra_price) *\r\n                                getEachItemPrice.quantity;\r\n                            price = price + totalPropertyPrice;\r\n                        });\r\n                    }\r\n                }\r\n                subTotal = subTotal + price * orderItem.quantity;\r\n            });\r\n            setTheSubTotal(subTotal);\r\n\r\n            let tempVat = 0;\r\n            if (newSettings) {\r\n                tempVat = (subTotal * parseFloat(newSettings.vat)) / 100;\r\n                setTheVat(tempVat);\r\n            }\r\n\r\n            let tempCommission = 0;\r\n            tempCommission = (subTotal * parseFloat(dept_tag.commission)) / 100;\r\n            setDeptCommission(tempCommission);\r\n\r\n            let totalPayable = 0;\r\n            let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\r\n\r\n            let usdServiceCharge;\r\n            let usdDiscount;\r\n            if (getSystemSettings(generalSettings, \"sDiscount\") === \"flat\") {\r\n                usdServiceCharge =\r\n                    parseFloat(orderDetails.serviceCharge) / localCurrency.rate;\r\n                usdDiscount = parseFloat(orderDetails.discount) / localCurrency.rate;\r\n            } else {\r\n                usdServiceCharge =\r\n                    subTotal * (parseFloat(orderDetails.serviceCharge) / 100);\r\n                usdDiscount = subTotal * (parseFloat(orderDetails.discount) / 100);\r\n            }\r\n\r\n            totalPayable =\r\n                subTotal + tempVat + usdServiceCharge - usdDiscount - tempCommission;\r\n            setTotalPaybale(totalPayable);\r\n\r\n            //calculate paid amount to set return amount\r\n            handleCalculatePaid(\r\n                orderDetails.payment_amount,\r\n                orderDetails.payment_type\r\n            );\r\n        }\r\n    };\r\n\r\n    //payment type\r\n    const handleSetpaymentType = (payment_type) => {\r\n        setOrderDetails({\r\n            ...orderDetails,\r\n            payment_type,\r\n        });\r\n\r\n        //calculate paid amount to set return amount\r\n        handleCalculatePaid(orderDetails.payment_amount, payment_type);\r\n    };\r\n\r\n    //payment type pos 2\r\n    const handleSetpaymentTypeSingle = (payment_type) => {\r\n        let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\r\n        let theUsdPaid = paidMoney / localCurrency.rate;\r\n        if (theUsdPaid < totalPayable) {\r\n            setReturnMoneyUsd(0);\r\n            toast.error(\r\n                `${_t(\r\n                    t(\"Please enter paid amount atleast equal to the total bill amount\")\r\n                )}`,\r\n                {\r\n                    position: \"bottom-center\",\r\n                    closeButton: false,\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                }\r\n            );\r\n        } else {\r\n            setOrderDetails({\r\n                ...orderDetails,\r\n                payment_type: [payment_type],\r\n            });\r\n            let theReturnMoney = theUsdPaid - totalPayable;\r\n            setReturnMoneyUsd(theReturnMoney);\r\n        }\r\n    };\r\n\r\n    //payment type amount\r\n    const handlePaymentTypeAmount = (e) => {\r\n        let tempPaymentAmount = {\r\n            ...orderDetails.payment_amount,\r\n            [e.target.name]: e.target.value,\r\n        };\r\n\r\n        setOrderDetails({\r\n            ...orderDetails,\r\n            payment_amount: tempPaymentAmount,\r\n        });\r\n\r\n        //calculate paid amount to set return amount\r\n        handleCalculatePaid(tempPaymentAmount, orderDetails.payment_type);\r\n    };\r\n\r\n    //guest\r\n    const handleTotalGuest = (e) => {\r\n        setOrderDetails({\r\n            ...orderDetails,\r\n            total_guest: e.target.value,\r\n        });\r\n    };\r\n\r\n    //calculate paid amount\r\n    const handleCalculatePaid = (paymentAmount, paymentType) => {\r\n        let paidAmount = 0;\r\n        if (paymentAmount !== null && paymentType !== null) {\r\n            let thePaymentArray = [];\r\n            if (paymentAmount) {\r\n                thePaymentArray = Object.entries(paymentAmount);\r\n            }\r\n            thePaymentArray.map((eachPaymentItem) => {\r\n                let thePaymentType = paymentType.find((paymentTypeItem) => {\r\n                    return paymentTypeItem.id === parseInt(eachPaymentItem[0]);\r\n                });\r\n                if (eachPaymentItem[1] !== \"\") {\r\n                    if (\r\n                        thePaymentType &&\r\n                        thePaymentType.id === parseInt(eachPaymentItem[0])\r\n                    ) {\r\n                        paidAmount = paidAmount + parseFloat(eachPaymentItem[1]);\r\n                    }\r\n                }\r\n            });\r\n            let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\r\n            paidAmount = paidAmount / localCurrency.rate;\r\n            let theReturnMoney = paidAmount - totalPayable;\r\n            setReturnMoneyUsd(theReturnMoney);\r\n        } else {\r\n            setReturnMoneyUsd(0);\r\n        }\r\n        setPaidMoney(paidAmount);\r\n    };\r\n\r\n    //send server req\r\n    const handleSubmitOrder = (e) => {\r\n        e.preventDefault();\r\n        if (newOrder && newOrder.length > 0) {\r\n            if (paidMoney !== 0) {\r\n                toast.error(\r\n                    `${_t(\r\n                        t(\"Settle order to add payments, or remove payment's amount\")\r\n                    )}`,\r\n                    {\r\n                        position: \"bottom-center\",\r\n                        closeButton: false,\r\n                        autoClose: 10000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        className: \"text-center toast-notification\",\r\n                    }\r\n                );\r\n            } else {\r\n                axiosRequest();\r\n            }\r\n        } else {\r\n            toast.error(`${_t(t(\"Please add items in order list\"))}`, {\r\n                position: \"bottom-center\",\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n            });\r\n        }\r\n    };\r\n\r\n    //axios request for submit\r\n    const axiosRequest = () => {\r\n        let url = BASE_URL + \"/settings/new-order\";\r\n        let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\r\n        let formData = {\r\n            branch: orderDetails.branch,\r\n            customer: orderDetails.customer,\r\n            table: orderDetails.table,\r\n            waiter: orderDetails.waiter,\r\n            dept_tag: orderDetails.dept_tag,\r\n            payment_type: orderDetails.payment_type,\r\n            payment_amount: orderDetails.payment_amount,\r\n            newCustomer: orderDetails.newCustomer ? 1 : 0,\r\n            newCustomerInfo: orderDetails.newCustomerInfo,\r\n            token: orderDetails.token,\r\n            total_guest: orderDetails.total_guest,\r\n            orderItems: newOrder,\r\n            serviceCharge: orderDetails.serviceCharge,\r\n            discount: orderDetails.discount,\r\n            subTotal: theSubTotal,\r\n            totalPayable: totalPayable,\r\n            paidMoney: paidMoney,\r\n            theVat: theVat,\r\n            dept_commission: deptCommission,\r\n            localCurrency: localCurrency,\r\n            workPeriod: newSettings.workPeriod,\r\n        };\r\n        setLoading(true);\r\n        axios\r\n            .post(url, formData, {\r\n                headers: { Authorization: `Bearer ${getCookie()}` },\r\n            })\r\n            .then((res) => {\r\n                if (res.data !== \"ended\") {\r\n                    getFoodGroup();\r\n                    handlePrint();\r\n                    setCustomerForSearch(res.data[0][1]);\r\n                    setWorkPeriodListForSearch(res.data[1][1]);\r\n                    let tempCustomers =\r\n                        res.data[0][1] !== null &&\r\n                        res.data[0][1].filter((eachCustomer) => {\r\n                            return (\r\n                                parseInt(eachCustomer.branch_id) === orderDetails.branch.id\r\n                            );\r\n                        });\r\n                    setOrderDetailusers({\r\n                        ...orderDetailUsers,\r\n                        theCustomers: tempCustomers,\r\n                    });\r\n\r\n                    //set work period\r\n                    let theWorkPeriod = null;\r\n                    if (\r\n                        orderDetails.branch !== undefined &&\r\n                        orderDetails.branch !== null\r\n                    ) {\r\n                        theWorkPeriod =\r\n                            res.data[1][1] &&\r\n                            res.data[1][1].filter((tempWorkPeriod) => {\r\n                                return (\r\n                                    orderDetails.branch.id === parseInt(tempWorkPeriod.branch_id)\r\n                                );\r\n                            });\r\n\r\n                        //filter it with ended_at === null;\r\n                        theWorkPeriod =\r\n                            theWorkPeriod &&\r\n                            theWorkPeriod.find((endAtNullItem) => {\r\n                                return endAtNullItem.ended_at === null;\r\n                            });\r\n                    }\r\n                    //set work period here\r\n                    setNewSettings({\r\n                        ...newSettings,\r\n                        vat:\r\n                            generalSettings && getSystemSettings(generalSettings, \"type_vat\"),\r\n                        workPeriod: theWorkPeriod !== undefined ? theWorkPeriod : null,\r\n                    });\r\n\r\n                    setLoading(false);\r\n                } else {\r\n                    setLoading(false);\r\n                    toast.error(`${_t(t(\"Please restart the work period\"))}`, {\r\n                        position: \"bottom-center\",\r\n                        autoClose: 10000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        className: \"text-center toast-notification\",\r\n                    });\r\n                }\r\n            })\r\n            .catch(() => {\r\n                setLoading(false);\r\n                toast.error(`${_t(t(\"Please try again\"))}`, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                });\r\n            });\r\n    };\r\n\r\n    //settle button\r\n    const handleSettleOrderButton = (e) => {\r\n        if (newOrder && newOrder.length > 0) {\r\n            if (orderDetails && orderDetails.dept_tag !== null) {\r\n                setShowSettle(true);\r\n            } else {\r\n                toast.error(`${_t(t(\"Please select a department tag\"))}`, {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                });\r\n            }\r\n        } else {\r\n            toast.error(`${_t(t(\"Please add items in order first\"))}`, {\r\n                position: \"bottom-center\",\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n            });\r\n        }\r\n    };\r\n\r\n    //handle settle order\r\n    const handleSettleOrder = (e) => {\r\n        e.preventDefault();\r\n        if (newOrder && newOrder.length > 0) {\r\n            if (paidMoney < totalPayable) {\r\n                toast.error(\r\n                    `${_t(\r\n                        t(\"Please enter paid amount atleast equal to the total bill amount\")\r\n                    )}`,\r\n                    {\r\n                        position: \"bottom-center\",\r\n                        closeButton: false,\r\n                        autoClose: 10000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        className: \"text-center toast-notification\",\r\n                    }\r\n                );\r\n            } else {\r\n                axiosRequestForSettle();\r\n            }\r\n        } else {\r\n            toast.error(`${_t(t(\"Please add items in order list\"))}`, {\r\n                position: \"bottom-center\",\r\n                closeButton: false,\r\n                autoClose: 10000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                className: \"text-center toast-notification\",\r\n            });\r\n        }\r\n    };\r\n\r\n    //axios request for settlement\r\n    const axiosRequestForSettle = () => {\r\n        let url = BASE_URL + \"/settings/settle-order\";\r\n        let localCurrency = JSON.parse(localStorage.getItem(\"currency\"));\r\n        let formData = {\r\n            branch: orderDetails.branch,\r\n            customer: orderDetails.customer,\r\n            table: orderDetails.table,\r\n            waiter: orderDetails.waiter,\r\n            dept_tag: orderDetails.dept_tag,\r\n            payment_type: orderDetails.payment_type,\r\n            payment_amount: orderDetails.payment_amount,\r\n            newCustomer: orderDetails.newCustomer ? 1 : 0,\r\n            newCustomerInfo: orderDetails.newCustomerInfo,\r\n            token: orderDetails.token,\r\n            total_guest: orderDetails.total_guest,\r\n            orderItems: newOrder,\r\n            serviceCharge: orderDetails.serviceCharge,\r\n            discount: orderDetails.discount,\r\n            subTotal: theSubTotal,\r\n            totalPayable: totalPayable,\r\n            paidMoney: paidMoney,\r\n            theVat: theVat,\r\n            dept_commission: deptCommission,\r\n            localCurrency: localCurrency,\r\n            workPeriod: newSettings.workPeriod,\r\n        };\r\n        setLoading(true);\r\n        axios\r\n            .post(url, formData, {\r\n                headers: { Authorization: `Bearer ${getCookie()}` },\r\n            })\r\n            .then((res) => {\r\n                if (res.data !== \"ended\") {\r\n                    if (res.data !== \"paymentIssue\") {\r\n                        getFoodGroup();\r\n                        handlePrint();\r\n                        setCustomerForSearch(res.data[0][1]);\r\n                        setWorkPeriodListForSearch(res.data[1][1]);\r\n                        let tempCustomers =\r\n                            res.data[0][1] !== null &&\r\n                            res.data[0][1].filter((eachCustomer) => {\r\n                                return (\r\n                                    parseInt(eachCustomer.branch_id) === orderDetails.branch.id\r\n                                );\r\n                            });\r\n                        setOrderDetailusers({\r\n                            ...orderDetailUsers,\r\n                            theCustomers: tempCustomers,\r\n                        });\r\n                        //set work period\r\n                        let theWorkPeriod = null;\r\n                        if (\r\n                            orderDetails.branch !== undefined &&\r\n                            orderDetails.branch !== null\r\n                        ) {\r\n                            theWorkPeriod =\r\n                                res.data[1][1] &&\r\n                                res.data[1][1].filter((tempWorkPeriod) => {\r\n                                    return (\r\n                                        orderDetails.branch.id ===\r\n                                        parseInt(tempWorkPeriod.branch_id)\r\n                                    );\r\n                                });\r\n\r\n                            //filter it with ended_at === null;\r\n                            theWorkPeriod =\r\n                                theWorkPeriod &&\r\n                                theWorkPeriod.find((endAtNullItem) => {\r\n                                    return endAtNullItem.ended_at === null;\r\n                                });\r\n                        }\r\n                        //set work period here\r\n                        setNewSettings({\r\n                            ...newSettings,\r\n                            vat:\r\n                                generalSettings &&\r\n                                getSystemSettings(generalSettings, \"type_vat\"),\r\n                            workPeriod: theWorkPeriod !== undefined ? theWorkPeriod : null,\r\n                        });\r\n                    } else {\r\n                        setLoading(false);\r\n                        toast.error(\r\n                            `${_t(\r\n                                t(\r\n                                    \"Please enter paid amount atleast equal to the total bill amount\"\r\n                                )\r\n                            )}`,\r\n                            {\r\n                                position: \"bottom-center\",\r\n                                closeButton: false,\r\n                                autoClose: 10000,\r\n                                hideProgressBar: false,\r\n                                closeOnClick: true,\r\n                                pauseOnHover: true,\r\n                                className: \"text-center toast-notification\",\r\n                            }\r\n                        );\r\n                    }\r\n                } else {\r\n                    setLoading(false);\r\n                    toast.error(`${_t(t(\"Please restart the work period\"))}`, {\r\n                        position: \"bottom-center\",\r\n                        closeButton: false,\r\n                        autoClose: 10000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        className: \"text-center toast-notification\",\r\n                    });\r\n                }\r\n            })\r\n            .catch(() => {\r\n                setLoading(false);\r\n                toast.error(`${_t(t(\"Please try again\"))}`, {\r\n                    position: \"bottom-center\",\r\n                    closeButton: false,\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                });\r\n            });\r\n    };\r\n\r\n    //print bills\r\n    const componentRef = useRef();\r\n    const component2Ref = useRef();\r\n\r\n    // only print bill\r\n    //for pos manager\r\n    const handleOnlyPrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n        onAfterPrint: () => {\r\n            if (getSystemSettings(generalSettings, \"print_kitchen_bill\") === \"1\") {\r\n                handleOnlyPrint2();\r\n            }\r\n        },\r\n    });\r\n\r\n    //for kithcen\r\n    const handleOnlyPrint2 = useReactToPrint({\r\n        content: () => component2Ref.current,\r\n    });\r\n\r\n    //after order submit or settle\r\n    //for pos manager\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n        onAfterPrint: () => {\r\n            if (getSystemSettings(generalSettings, \"print_kitchen_bill\") === \"1\") {\r\n                handlePrint2();\r\n            } else {\r\n                handleOrderSubmitSuccessful();\r\n            }\r\n        },\r\n    });\r\n\r\n    //for kithcen\r\n    const handlePrint2 = useReactToPrint({\r\n        content: () => component2Ref.current,\r\n        onAfterPrint: () => {\r\n            handleOrderSubmitSuccessful();\r\n        },\r\n    });\r\n\r\n    //call after successful order submit and settle\r\n    const handleOrderSubmitSuccessful = () => {\r\n        setNewOrder(null);\r\n        setActiveItemInOrder(null);\r\n        setSelectedVariation([]);\r\n        setSelectedPropertyGroup([]);\r\n        setSelectedProperties([]);\r\n        setTheSubTotal(0);\r\n        setTheVat(0);\r\n        setTotalPaybale(0);\r\n        setReturnMoneyUsd(0);\r\n        setPaidMoney(0);\r\n        setOrderDetails({\r\n            branch: orderDetails.branch,\r\n            customer: null,\r\n            table: null,\r\n            waiter: null,\r\n            dept_tag: null,\r\n            payment_type: null,\r\n            payment_amount: null,\r\n            total_guest: 1,\r\n            newCustomer: false,\r\n            newCustomerInfo: {\r\n                name: \"\",\r\n                number: \"\",\r\n            },\r\n            token: null,\r\n            serviceCharge: 0,\r\n            discount: 0,\r\n        });\r\n        toast.success(`${_t(t(\"Order has been taken\"))}`, {\r\n            position: \"bottom-center\",\r\n            closeButton: false,\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n        });\r\n\r\n        setShowSettle(false);\r\n\r\n        setLoading(false);\r\n        //sound\r\n        if (getSystemSettings(generalSettings, \"play_sound\") === \"1\") {\r\n            let beep = document.getElementById(\"myAudio\");\r\n            beep.play();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{_t(t(\"POS\"))}</title>\r\n            </Helmet>\r\n\r\n            {/* beep sound */}\r\n            <audio id=\"myAudio\">\r\n                <source src=\"/assets/beep/beep.mp3\" type=\"audio/mpeg\" />\r\n            </audio>\r\n\r\n            <audio id=\"myAudioOrder\">\r\n                <source src=\"/assets/beep/order.mp3\" type=\"audio/mpeg\" />\r\n            </audio>\r\n\r\n            {/* Print bill */}\r\n            <div className=\"d-none\">\r\n                <div ref={componentRef}>\r\n                    {newOrder && (\r\n                        <div className=\"fk-print\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <span className=\"d-block fk-print-text font-weight-bold text-uppercase text-center sm-text\">\r\n                                            {getSystemSettings(generalSettings, \"siteName\")}\r\n                                            {\",\"}\r\n                                            {orderDetails &&\r\n                                                orderDetails.branch !== null &&\r\n                                                orderDetails.branch.name}\r\n                                        </span>\r\n                                        <p className=\"mb-0 sm-text fk-print-text text-center text-capitalize\">\r\n                                            {orderDetails &&\r\n                                                orderDetails.branch !== null &&\r\n                                                orderDetails.branch.address}\r\n                                        </p>\r\n                                        <p className=\"mb-0 sm-text fk-print-text text-center text-capitalize\">\r\n                                            {_t(t(\"call\"))}:{\" \"}\r\n                                            {orderDetails &&\r\n                                                orderDetails.branch !== null &&\r\n                                                orderDetails.branch.phn_no\r\n                                                ? orderDetails.branch.phn_no\r\n                                                : \"\"}\r\n                                        </p>\r\n                                        <p className=\"mb-0 sm-text fk-print-text text-center text-capitalize\">\r\n                                            {getSystemSettings(generalSettings, \"type_print_heading\")}\r\n                                        </p>\r\n                                        <span className=\"d-block fk-print-text text-uppercase text-center lg-text myBorderTopCustomer\">\r\n                                            {_t(t(\"Token No\"))}-\r\n                                            {orderDetails && orderDetails.token.id}\r\n                                        </span>\r\n                                        <p className=\"mb-0 fk-print-text text-capitalize lg-text\">\r\n                                            {orderDetails &&\r\n                                                orderDetails.dept_tag &&\r\n                                                orderDetails.dept_tag.name}\r\n                                        </p>\r\n                                        <p className=\"mb-0 mt-0 sm-text fk-print-text text-capitalize text-center\">\r\n                                            {_t(t(\"Customer Copy\"))}\r\n                                        </p>\r\n                                        {/* <p className=\"mb-0 xsm-text fk-print-text text-capitalize\">\r\n                      {_t(t(\"Vat reg\"))}: {_t(t(\"Applied\"))}\r\n                    </p> */}\r\n                                        <p className=\"mb-0 xsm-text fk-print-text text-capitalize\">\r\n                                            {_t(t(\"date\"))}: <Moment format=\"LL\">{new Date()}</Moment>\r\n                                            {\", \"}\r\n                                            {orderDetails && (\r\n                                                <Moment format=\"LT\">{orderDetails.token.time}</Moment>\r\n                                            )}\r\n                                        </p>\r\n                                        <p className=\"mb-0 xsm-text fk-print-text text-capitalize\">\r\n                                            {_t(t(\"Total guests\"))}:{\" \"}\r\n                                            {orderDetails && orderDetails.total_guest}\r\n                                        </p>\r\n\r\n                                        {orderDetails && orderDetails.waiter !== null ? (\r\n                                            <p className=\"mb-0 xsm-text fk-print-text text-capitalize\">\r\n                                                {_t(t(\"waiter name\"))}: {orderDetails.waiter.name}\r\n                                            </p>\r\n                                        ) : (\r\n                                            \"\"\r\n                                        )}\r\n\r\n                                        <p className=\"mb-0 sm-text fk-print-text text-capitalize lg-text\">\r\n                                            PAID\r\n                                        </p>\r\n\r\n                                        <table className=\"table mb-0 table-borderless akash-table-for-print-padding\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th\r\n                                                        scope=\"col\"\r\n                                                        className=\"fk-print-text xsm-text text-capitalize\"\r\n                                                    >\r\n                                                        {_t(t(\"qty\"))} {_t(t(\"item\"))}\r\n                                                    </th>\r\n                                                    <th\r\n                                                        scope=\"col\"\r\n                                                        className=\"fk-print-text xsm-text text-capitalize text-right\"\r\n                                                    >\r\n                                                        {_t(t(\"T\"))}.{_t(t(\"price\"))}\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {newOrder.map((printItem, printItemIndex) => {\r\n                                                    return (\r\n                                                        <tr>\r\n                                                            <td className=\"fk-print-text xsm-text text-capitalize\">\r\n                                                                <div className=\"d-flex flex-wrap\">\r\n                                                                    <span className=\"d-inline-block xsm-text\">\r\n                                                                        -{printItem.quantity} {printItem.item.name}\r\n                                                                        {parseInt(printItem.item.has_variation) ===\r\n                                                                            1 &&\r\n                                                                            printItem.variation &&\r\n                                                                            \"(\" +\r\n                                                                            printItem.variation.variation_name +\r\n                                                                            \")\"}\r\n                                                                    </span>\r\n                                                                </div>\r\n\r\n                                                                {/* properties */}\r\n                                                                {printItem.properties &&\r\n                                                                    printItem.properties.length > 0 &&\r\n                                                                    selectedPropertyGroup[printItemIndex] !==\r\n                                                                    undefined &&\r\n                                                                    selectedPropertyGroup[printItemIndex].map(\r\n                                                                        (thisIsGroup) => {\r\n                                                                            let theGroup =\r\n                                                                                propertyGroupForSearch &&\r\n                                                                                propertyGroupForSearch.find(\r\n                                                                                    (theItem) => {\r\n                                                                                        return theItem.id === thisIsGroup;\r\n                                                                                    }\r\n                                                                                );\r\n                                                                            return (\r\n                                                                                <div className=\"d-block\">\r\n                                                                                    {printItem.properties.map(\r\n                                                                                        (propertyName, propertyIndex) => {\r\n                                                                                            if (\r\n                                                                                                parseInt(\r\n                                                                                                    propertyName.item\r\n                                                                                                        .property_group_id\r\n                                                                                                ) === theGroup.id\r\n                                                                                            ) {\r\n                                                                                                return (\r\n                                                                                                    <span className=\"text-capitalize xsm-text d-inline-block mr-1\">\r\n                                                                                                        -{printItem.quantity}\r\n                                                                                                        {propertyName.quantity > 1\r\n                                                                                                            ? \"*\" +\r\n                                                                                                            propertyName.quantity\r\n                                                                                                            : \"\"}{\" \"}\r\n                                                                                                        {propertyName.item.name}\r\n                                                                                                        <br />\r\n                                                                                                    </span>\r\n                                                                                                );\r\n                                                                                            } else {\r\n                                                                                                return true;\r\n                                                                                            }\r\n                                                                                        }\r\n                                                                                    )}\r\n                                                                                </div>\r\n                                                                            );\r\n                                                                        }\r\n                                                                    )}\r\n                                                            </td>\r\n                                                            <td className=\"fk-print-text xsm-text text-capitalize text-right\">\r\n                                                                <div className=\"d-block xsm-text\">\r\n                                                                    {showPriceOfEachOrderItemPrint(\r\n                                                                        printItemIndex\r\n                                                                    )}\r\n                                                                </div>\r\n\r\n                                                                {printItem.properties &&\r\n                                                                    printItem.properties.length > 0 &&\r\n                                                                    selectedPropertyGroup[printItemIndex] !==\r\n                                                                    undefined &&\r\n                                                                    selectedPropertyGroup[printItemIndex].map(\r\n                                                                        (\r\n                                                                            thisIsGroup,\r\n                                                                            thisIsGroupPaddingTopIndex\r\n                                                                        ) => {\r\n                                                                            let theGroup =\r\n                                                                                propertyGroupForSearch &&\r\n                                                                                propertyGroupForSearch.find(\r\n                                                                                    (theItem) => {\r\n                                                                                        return theItem.id === thisIsGroup;\r\n                                                                                    }\r\n                                                                                );\r\n                                                                            return (\r\n                                                                                <div\r\n                                                                                    className=\"d-block\"\r\n                                                                                    className={`text-capitalize xsm-text ${thisIsGroupPaddingTopIndex === 0\r\n                                                                                        ? [\r\n                                                                                            parseInt(\r\n                                                                                                printItem.item.has_variation\r\n                                                                                            ) === 1\r\n                                                                                                ? [\r\n                                                                                                    printItem.properties &&\r\n                                                                                                        printItem.properties\r\n                                                                                                            .length > 0\r\n                                                                                                        ? \"addonPadding35\"\r\n                                                                                                        : \"addonPadding24\",\r\n                                                                                                ]\r\n                                                                                                : [\r\n                                                                                                    printItem.properties &&\r\n                                                                                                        printItem.properties\r\n                                                                                                            .length > 0\r\n                                                                                                        ? \"addonPadding24\"\r\n                                                                                                        : \"\",\r\n                                                                                                ],\r\n                                                                                        ]\r\n                                                                                        : \"\"\r\n                                                                                        }`}\r\n                                                                                >\r\n                                                                                    {printItem.properties.map(\r\n                                                                                        (propertyName, propertyIndex) => {\r\n                                                                                            if (\r\n                                                                                                parseInt(\r\n                                                                                                    propertyName.item\r\n                                                                                                        .property_group_id\r\n                                                                                                ) === theGroup.id\r\n                                                                                            ) {\r\n                                                                                                return (\r\n                                                                                                    <span>\r\n                                                                                                        {formatPrice(\r\n                                                                                                            printItem.quantity *\r\n                                                                                                            propertyName.quantity *\r\n                                                                                                            propertyName.item\r\n                                                                                                                .extra_price\r\n                                                                                                        )}\r\n                                                                                                        <br />\r\n                                                                                                    </span>\r\n                                                                                                );\r\n                                                                                            } else {\r\n                                                                                                return true;\r\n                                                                                            }\r\n                                                                                        }\r\n                                                                                    )}\r\n                                                                                </div>\r\n                                                                            );\r\n                                                                        }\r\n                                                                    )}\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    );\r\n                                                })}\r\n                                            </tbody>\r\n                                        </table>\r\n                                        <div className=\"myBorder\"></div>\r\n                                        <table className=\"table mb-0 table-borderless\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <th className=\"fk-print-text xsm-text text-capitalize\">\r\n                                                        <span className=\"d-block\">{_t(t(\"total\"))}</span>\r\n                                                    </th>\r\n                                                    <td className=\"fk-print-text xsm-text text-capitalize text-right\">\r\n                                                        {formatPrice(theSubTotal)}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n                                        {theVat > 0 && (\r\n                                            <table className=\"table mb-0 table-borderless\">\r\n                                                <tbody>\r\n                                                    {getSystemSettings(generalSettings, \"vat_system\") ===\r\n                                                        \"igst\" ? (\r\n                                                        <tr>\r\n                                                            <th className=\"fk-print-text xsm-text\">\r\n                                                                <span className=\"d-block xsm-text\">\r\n                                                                    VAT({newSettings !== null && newSettings.vat}\r\n                                                                    %)\r\n                                                                </span>\r\n                                                            </th>\r\n                                                            <td className=\"fk-print-text xsm-text text-capitalize text-right\">\r\n                                                                {formatPrice(theVat)}\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    ) : getSystemSettings(generalSettings, \"vat_system\") ===\r\n                                                        \"cgst\" ? (\r\n                                                        <>\r\n                                                            <tr>\r\n                                                                <th className=\"fk-print-text xsm-text\">\r\n                                                                    <span className=\"d-block xsm-text\">\r\n                                                                        CGST(\r\n                                                                        {getSystemSettings(generalSettings, \"cgst\")}\r\n                                                                        %)\r\n                                                                    </span>\r\n                                                                </th>\r\n                                                                <td className=\"fk-print-text xsm-text text-capitalize text-right\">\r\n                                                                    {formatPrice(\r\n                                                                        theSubTotal *\r\n                                                                        (parseFloat(\r\n                                                                            getSystemSettings(\r\n                                                                                generalSettings,\r\n                                                                                \"cgst\"\r\n                                                                            )\r\n                                                                        ) /\r\n                                                                            100)\r\n                                                                    )}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <th className=\"fk-print-text xsm-text\">\r\n                                                                    <span className=\"d-block xsm-text\">\r\n                                                                        SGST(\r\n                                                                        {getSystemSettings(generalSettings, \"sgst\")}\r\n                                                                        %)\r\n                                                                    </span>\r\n                                                                </th>\r\n                                                                <td className=\"fk-print-text xsm-text text-capitalize text-right\">\r\n                                                                    {formatPrice(\r\n                                                                        theSubTotal *\r\n                                                                        (parseFloat(\r\n                                                                            getSystemSettings(\r\n                                                                                generalSettings,\r\n                                                                                \"sgst\"\r\n                                                                            )\r\n                                                                        ) /\r\n                                                                            100)\r\n                                                                    )}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        <tr>\r\n                                                            <th className=\"fk-print-text xsm-text\">\r\n                                                                <span className=\"d-block xsm-text\">\r\n                                                                    TAX({newSettings !== null && newSettings.tax}\r\n                                                                    %)\r\n                                                                </span>\r\n                                                            </th>\r\n                                                            <td className=\"fk-print-text xsm-text text-capitalize text-right\">\r\n                                                                {formatPrice(theVat)}\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )}\r\n                                                </tbody>\r\n                                            </table>\r\n                                        )}\r\n\r\n                                        {getSystemSettings(generalSettings, \"sDiscount\") ===\r\n                                            \"flat\" && (\r\n                                                <>\r\n                                                    {orderDetails.serviceCharge > 0 && (\r\n                                                        <table className=\"table mb-0 table-borderless\">\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <th className=\"fk-print-text xsm-text text-capitalize\">\r\n                                                                        <span className=\"d-block\">\r\n                                                                            {_t(t(\"S.Charge\"))}\r\n                                                                        </span>\r\n                                                                    </th>\r\n\r\n                                                                    {orderDetails && (\r\n                                                                        <td className=\"fk-print-text xsm-text text-capitalize text-right\">\r\n                                                                            {formatPrice(orderDetails.serviceCharge)}\r\n                                                                        </td>\r\n                                                                    )}\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    )}\r\n\r\n                                                    {orderDetails.discount > 0 && (\r\n                                                        <table className=\"table mb-0 table-borderless\">\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <th className=\"fk-print-text xsm-text text-capitalize\">\r\n                                                                        <span className=\"d-block\">\r\n                                                                            {_t(t(\"discount\"))}\r\n                                                                        </span>\r\n                                                                    </th>\r\n                                                                    {orderDetails && (\r\n                                                                        <td className=\"fk-print-text xsm-text text-capitalize text-right\">\r\n                                                                            {formatPrice(orderDetails.discount)}\r\n                                                                        </td>\r\n                                                                    )}\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    )}\r\n                                                </>\r\n                                            )}\r\n\r\n                                        {getSystemSettings(generalSettings, \"sDiscount\") ===\r\n                                            \"percentage\" && (\r\n                                                <>\r\n                                                    {orderDetails.serviceCharge > 0 && (\r\n                                                        <table className=\"table mb-0 table-borderless\">\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <th className=\"fk-print-text xsm-text text-capitalize\">\r\n                                                                        <span className=\"d-block\">\r\n                                                                            {_t(t(\"S.Charge\"))}\r\n                                                                            {orderDetails &&\r\n                                                                                \"(\" + orderDetails.serviceCharge + \"%)\"}\r\n                                                                        </span>\r\n                                                                    </th>\r\n\r\n                                                                    {orderDetails && (\r\n                                                                        <td className=\"fk-print-text xsm-text text-capitalize text-right\">\r\n                                                                            {formatPrice(\r\n                                                                                theSubTotal *\r\n                                                                                (orderDetails.serviceCharge / 100)\r\n                                                                            )}\r\n                                                                        </td>\r\n                                                                    )}\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    )}\r\n\r\n                                                    {orderDetails.discount > 0 && (\r\n                                                        <table className=\"table mb-0 table-borderless\">\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <th className=\"fk-print-text xsm-text text-capitalize\">\r\n                                                                        <span className=\"d-block\">\r\n                                                                            {_t(t(\"discount\"))}\r\n                                                                            {orderDetails &&\r\n                                                                                \"(\" + orderDetails.discount + \"%)\"}\r\n                                                                        </span>\r\n                                                                    </th>\r\n                                                                    {orderDetails && (\r\n                                                                        <td className=\"fk-print-text xsm-text text-capitalize text-right\">\r\n                                                                            {formatPrice(\r\n                                                                                theSubTotal *\r\n                                                                                (orderDetails.discount / 100)\r\n                                                                            )}\r\n                                                                        </td>\r\n                                                                    )}\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    )}\r\n                                                </>\r\n                                            )}\r\n\r\n                                        <div className=\"myBorder\"></div>\r\n                                        <table className=\"table mb-0 table-borderless\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <th className=\"fk-print-text xsm-text text-capitalize\">\r\n                                                        <span className=\"d-block\">\r\n                                                            {_t(t(\"grand total\"))}\r\n                                                        </span>\r\n                                                    </th>\r\n                                                    <td className=\"fk-print-text xsm-text text-capitalize text-right\">\r\n                                                        {formatPrice(totalPayable)}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th className=\"fk-print-text xsm-text text-capitalize\">\r\n                                                        <span className=\"d-block\">\r\n                                                            {_t(t(\"Return Amount\"))}\r\n                                                        </span>\r\n                                                    </th>\r\n                                                    <td className=\"fk-print-text xsm-text text-capitalize text-right\">\r\n                                                        {formatPrice(returnMoneyUsd)}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n                                        <div className=\"myBorder\"></div>\r\n                                        <p className=\"mb-0 xsm-text fk-print-text text-center text-capitalize\">\r\n                                            {getSystemSettings(generalSettings, \"type_print_footer\")}\r\n                                        </p>\r\n                                        <p className=\"mb-0 xsm-text fk-print-text text-capitalize text-center\">\r\n                                            {_t(t(\"bill prepared by\"))}:{\" \"}\r\n                                            {authUserInfo &&\r\n                                                authUserInfo.details &&\r\n                                                authUserInfo.details.name}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Print bill kitchen */}\r\n            <div className=\"d-none\">\r\n                <div ref={component2Ref}>\r\n                    {newOrder && (\r\n                        <div className=\"fk-print\">\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12\">\r\n                                        <span className=\"d-block fk-print-text fk-print-text--bold text-uppercase text-center lg-text\">\r\n                                            {_t(t(\"Token No\"))}-\r\n                                            {orderDetails && orderDetails.token.id}\r\n                                        </span>\r\n                                        <p className=\"mb-0 fk-print-text text-capitalize lg-text fk-print-text--bold\">\r\n                                            {orderDetails &&\r\n                                                orderDetails.dept_tag &&\r\n                                                orderDetails.dept_tag.name}\r\n                                        </p>\r\n                                        <p className=\"mb-0 mt-0 fk-print-text text-capitalize text-center\">\r\n                                            {_t(t(\"kitchen orders\"))}\r\n                                        </p>\r\n\r\n                                        <table className=\"table mb-0 table-borderless\">\r\n                                            <tbody>\r\n                                                {orderFoodGroups &&\r\n                                                    orderFoodGroups.map((theGrp, grpIndex) => {\r\n                                                        return (\r\n                                                            <>\r\n                                                                <tr>\r\n                                                                    <td className=\"text-center\">\r\n                                                                        <div\r\n                                                                            className={`${grpIndex === 0\r\n                                                                                ? \"myBorder\"\r\n                                                                                : \"myBorderBottom\"\r\n                                                                                } lg-text fk-print-text--bold fk-print-text`}\r\n                                                                        >\r\n                                                                            {theGrp.name}\r\n                                                                        </div>\r\n                                                                    </td>\r\n                                                                </tr>\r\n\r\n                                                                {newOrder.map((printItem, printItemIndex) => {\r\n                                                                    if (\r\n                                                                        theGrp.id ===\r\n                                                                        parseInt(printItem.item.food_group_id)\r\n                                                                    ) {\r\n                                                                        return (\r\n                                                                            <>\r\n                                                                                <tr className=\"myBorderBottom\">\r\n                                                                                    <th className=\"fk-print-text text-capitalize\">\r\n                                                                                        <div className=\"d-flex flex-wrap\">\r\n                                                                                            <span className=\"d-inline-block lg-text fk-print-text--bold fk-print-text\">\r\n                                                                                                {printItem.item.name}\r\n                                                                                            </span>\r\n                                                                                            {parseInt(\r\n                                                                                                printItem.item.has_variation\r\n                                                                                            ) === 1 &&\r\n                                                                                                printItem.variation && (\r\n                                                                                                    <span className=\"d-inline-block lg-text fk-print-text--bold fk-print-text\">\r\n                                                                                                        (\r\n                                                                                                        {\r\n                                                                                                            printItem.variation\r\n                                                                                                                .variation_name\r\n                                                                                                        }\r\n                                                                                                        )\r\n                                                                                                    </span>\r\n                                                                                                )}\r\n                                                                                            :-{printItem.quantity}\r\n                                                                                        </div>\r\n\r\n                                                                                        {/* properties */}\r\n                                                                                        {printItem.properties &&\r\n                                                                                            printItem.properties.length > 0 &&\r\n                                                                                            selectedPropertyGroup[\r\n                                                                                            printItemIndex\r\n                                                                                            ] !== undefined &&\r\n                                                                                            selectedPropertyGroup[\r\n                                                                                                printItemIndex\r\n                                                                                            ].map((thisIsGroup) => {\r\n                                                                                                let theGroup =\r\n                                                                                                    propertyGroupForSearch &&\r\n                                                                                                    propertyGroupForSearch.find(\r\n                                                                                                        (theItem) => {\r\n                                                                                                            return (\r\n                                                                                                                theItem.id ===\r\n                                                                                                                thisIsGroup\r\n                                                                                                            );\r\n                                                                                                        }\r\n                                                                                                    );\r\n                                                                                                return (\r\n                                                                                                    <div className=\"d-flex flex-wrap\">\r\n                                                                                                        {printItem.properties.map(\r\n                                                                                                            (\r\n                                                                                                                propertyName,\r\n                                                                                                                propertyIndex\r\n                                                                                                            ) => {\r\n                                                                                                                if (\r\n                                                                                                                    parseInt(\r\n                                                                                                                        propertyName.item\r\n                                                                                                                            .property_group_id\r\n                                                                                                                    ) === theGroup.id\r\n                                                                                                                ) {\r\n                                                                                                                    return (\r\n                                                                                                                        <span className=\"text-capitalize d-inline-block mr-1 fk-print-text lg-text fk-print-text--bold\">\r\n                                                                                                                            {\r\n                                                                                                                                propertyName\r\n                                                                                                                                    .item.name\r\n                                                                                                                            }{\" \"}\r\n                                                                                                                            <span>\r\n                                                                                                                                {\" \"}\r\n                                                                                                                                {propertyName.quantity >\r\n                                                                                                                                    1 &&\r\n                                                                                                                                    \"(\" +\r\n                                                                                                                                    propertyName.quantity +\r\n                                                                                                                                    \")\"}\r\n                                                                                                                            </span>\r\n                                                                                                                            {printItem\r\n                                                                                                                                .properties\r\n                                                                                                                                .length -\r\n                                                                                                                                1 !==\r\n                                                                                                                                propertyIndex &&\r\n                                                                                                                                \",\"}\r\n                                                                                                                        </span>\r\n                                                                                                                    );\r\n                                                                                                                } else {\r\n                                                                                                                    return true;\r\n                                                                                                                }\r\n                                                                                                            }\r\n                                                                                                        )}\r\n                                                                                                    </div>\r\n                                                                                                );\r\n                                                                                            })}\r\n                                                                                    </th>\r\n                                                                                </tr>\r\n                                                                            </>\r\n                                                                        );\r\n                                                                    }\r\n                                                                })}\r\n                                                            </>\r\n                                                        );\r\n                                                    })}\r\n                                            </tbody>\r\n                                        </table>\r\n\r\n                                        <div className=\"\">\r\n                                            <p className=\"mb-0 xsm-text fk-print-text text-capitalize lg-text fk-print-text--bold\">\r\n                                                {_t(t(\"date\"))}:{\" \"}\r\n                                                <Moment format=\"LL\">{new Date()}</Moment>\r\n                                            </p>\r\n                                            <p className=\"mb-0 xsm-text fk-print-text text-capitalize lg-text fk-print-text--bold\">\r\n                                                {_t(t(\"Time\"))}:\r\n                                                {orderDetails && (\r\n                                                    <Moment format=\"LT\">{orderDetails.token.time}</Moment>\r\n                                                )}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Menu Addons  */}\r\n            <div className=\"modal fade\" id=\"menuAddons\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog modal-fullscreen\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header align-items-start\">\r\n                            <div className=\"fk-sm-card__content\">\r\n                                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                                    {foodItem.selectedItem !== null && foodItem.selectedItem.name}\r\n                                </h5>\r\n                            </div>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn-close\"\r\n                                data-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                            ></button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {/* Variations */}\r\n                            <div className=\"fk-sm-card__container\">\r\n                                <div className=\"fk-sm-card__content\">\r\n                                    <h6 className=\"text-capitalize fk-sm-card__title t-mb-5\">\r\n                                        {_t(t(\"Variations\"))}\r\n                                    </h6>\r\n                                </div>\r\n                                {foodItem.variations && (\r\n                                    <span className=\"text-capitalize xxsm-text fk-badge fk-badge--secondary\">\r\n                                        {_t(t(\"Required\"))}\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                            <hr />\r\n                            <ul className=\"t-list addons-list\">\r\n                                {foodItem.variations ? (\r\n                                    <>\r\n                                        {foodItem.variations.map((variationItem) => {\r\n                                            return (\r\n                                                <li className=\"addons-list__item\">\r\n                                                    <div className=\"d-flex align-items-center justify-content-between\">\r\n                                                        <div className=\"col\">\r\n                                                            <label className=\"mx-checkbox flex-grow-1\">\r\n                                                                <input\r\n                                                                    type=\"checkbox\"\r\n                                                                    className=\"mx-checkbox__input mx-checkbox__input-solid mx-checkbox__input-solid--danger mx-checkbox__input-sm mt-0-kitchen\"\r\n                                                                    name=\"variation\"\r\n                                                                    onChange={() => {\r\n                                                                        handleOrderItemVariation(variationItem);\r\n                                                                    }}\r\n                                                                    checked={checkChecked(variationItem)}\r\n                                                                />\r\n                                                                <span className=\"mx-checkbox__text text-capitalize t-text-heading t-ml-8\">\r\n                                                                    {variationItem.variation_name}\r\n                                                                </span>\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        <div className=\"col text-right\">\r\n                                                            <span className=\"t-text-heading text-uppercase sm-text flex-grow-1\">\r\n                                                                {currencySymbolLeft()}\r\n                                                                {formatPrice(\r\n                                                                    variationItem.food_with_variation_price\r\n                                                                )}\r\n                                                                {currencySymbolRight()}\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </>\r\n                                ) : (\r\n                                    <li className=\"addons-list__item\">\r\n                                        <div className=\"d-flex align-items-center justify-content-between\">\r\n                                            <div className=\"col text-center text-primary text-uppercase\">\r\n                                                {_t(t(\"No Variations\"))}\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                )}\r\n                                {/* Variations end*/}\r\n                            </ul>\r\n\r\n                            <div className={foodItem.properties ? \"\" : \"d-none\"}>\r\n                                {/* Property group and items */}\r\n                                {foodItem.properties && (\r\n                                    <>\r\n                                        {foodItem.properties.length > 0 ? (\r\n                                            foodItem.properties.map((propertyItem) => {\r\n                                                let selectedGroup = null;\r\n                                                //property group\r\n                                                if (propertyItem.length > 0) {\r\n                                                    selectedGroup =\r\n                                                        propertyGroupForSearch &&\r\n                                                        propertyGroupForSearch.find(\r\n                                                            (singlePropertyGroup) => {\r\n                                                                return (\r\n                                                                    singlePropertyGroup.id ===\r\n                                                                    parseInt(propertyItem[0].property_group_id)\r\n                                                                );\r\n                                                            }\r\n                                                        );\r\n                                                }\r\n\r\n                                                return (\r\n                                                    <>\r\n                                                        <div className=\"fk-sm-card__container t-mt-30\">\r\n                                                            <div className=\"fk-sm-card__content\">\r\n                                                                <h6 className=\"text-capitalize fk-sm-card__title t-mb-5\">\r\n                                                                    {selectedGroup && selectedGroup.name}\r\n                                                                </h6>\r\n                                                            </div>\r\n                                                            <span className=\"text-capitalize xxsm-text fk-badge fk-badge--secondary\">\r\n                                                                {_t(t(\"Optional\"))}\r\n                                                            </span>\r\n                                                        </div>\r\n                                                        <hr />\r\n                                                        <ul className=\"t-list addons-list\">\r\n                                                            {propertyItem.map((eachItem) => {\r\n                                                                return (\r\n                                                                    <li className=\"addons-list__item\">\r\n                                                                        <div className=\"d-flex align-items-center justify-content-between\">\r\n                                                                            <div className=\"col\">\r\n                                                                                <label className=\"mx-checkbox flex-grow-1\">\r\n                                                                                    <input\r\n                                                                                        type=\"checkbox\"\r\n                                                                                        className=\"mx-checkbox__input mx-checkbox__input-solid mx-checkbox__input-solid--danger mx-checkbox__input-sm mt-0-kitchen\"\r\n                                                                                        onChange={() => {\r\n                                                                                            newOrder &&\r\n                                                                                                newOrder.map(\r\n                                                                                                    (newOrderItem, index) => {\r\n                                                                                                        if (\r\n                                                                                                            index ===\r\n                                                                                                            activeItemInOrder\r\n                                                                                                        ) {\r\n                                                                                                            if (\r\n                                                                                                                newOrderItem.properties\r\n                                                                                                            ) {\r\n                                                                                                                let theItem =\r\n                                                                                                                    newOrderItem.properties.find(\r\n                                                                                                                        (\r\n                                                                                                                            eachPropertyItem\r\n                                                                                                                        ) => {\r\n                                                                                                                            return (\r\n                                                                                                                                eachPropertyItem\r\n                                                                                                                                    .item.id ===\r\n                                                                                                                                eachItem.id\r\n                                                                                                                            );\r\n                                                                                                                        }\r\n                                                                                                                    );\r\n\r\n                                                                                                                if (\r\n                                                                                                                    theItem === undefined\r\n                                                                                                                ) {\r\n                                                                                                                    handleAddProperties(\r\n                                                                                                                        eachItem\r\n                                                                                                                    );\r\n                                                                                                                } else {\r\n                                                                                                                    handleRemoveProperties(\r\n                                                                                                                        eachItem\r\n                                                                                                                    );\r\n                                                                                                                }\r\n                                                                                                            } else {\r\n                                                                                                                handleAddProperties(\r\n                                                                                                                    eachItem\r\n                                                                                                                );\r\n                                                                                                            }\r\n                                                                                                        }\r\n                                                                                                    }\r\n                                                                                                );\r\n                                                                                        }}\r\n                                                                                        checked={checkCheckedProperties(\r\n                                                                                            eachItem\r\n                                                                                        )}\r\n                                                                                    />\r\n                                                                                    <span className=\"mx-checkbox__text text-capitalize t-text-heading t-ml-8\">\r\n                                                                                        {eachItem.name}\r\n                                                                                    </span>\r\n                                                                                </label>\r\n                                                                            </div>\r\n                                                                            <div className=\"col\">\r\n                                                                                <div className=\"fk-qty flex-grow-1 justify-content-end\">\r\n                                                                                    {parseInt(\r\n                                                                                        eachItem.allow_multi_quantity\r\n                                                                                    ) === 1 && (\r\n                                                                                            <span\r\n                                                                                                className=\"fk-qty__icon fk-qty__deduct\"\r\n                                                                                                onClick={() => {\r\n                                                                                                    handlePropertyQty(\r\n                                                                                                        eachItem,\r\n                                                                                                        \"-\"\r\n                                                                                                    );\r\n                                                                                                }}\r\n                                                                                            >\r\n                                                                                                <i className=\"las la-minus\"></i>\r\n                                                                                            </span>\r\n                                                                                        )}\r\n                                                                                    {parseInt(\r\n                                                                                        eachItem.allow_multi_quantity\r\n                                                                                    ) === 1 ? (\r\n                                                                                        <input\r\n                                                                                            type=\"text\"\r\n                                                                                            value={checkCheckedPropertyQuantity(\r\n                                                                                                eachItem\r\n                                                                                            )}\r\n                                                                                            className=\"fk-qty__input t-bg-clear\"\r\n                                                                                            readOnly\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        \"-\"\r\n                                                                                    )}\r\n                                                                                    {parseInt(\r\n                                                                                        eachItem.allow_multi_quantity\r\n                                                                                    ) === 1 && (\r\n                                                                                            <span\r\n                                                                                                className=\"fk-qty__icon fk-qty__add\"\r\n                                                                                                onClick={() => {\r\n                                                                                                    handlePropertyQty(\r\n                                                                                                        eachItem,\r\n                                                                                                        \"+\"\r\n                                                                                                    );\r\n                                                                                                }}\r\n                                                                                            >\r\n                                                                                                <i className=\"las la-plus\"></i>\r\n                                                                                            </span>\r\n                                                                                        )}\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div className=\"col text-right\">\r\n                                                                                <span className=\"t-text-heading text-uppercase sm-text flex-grow-1\">\r\n                                                                                    {currencySymbolLeft()}\r\n                                                                                    {formatPrice(eachItem.extra_price)}\r\n                                                                                    {currencySymbolRight()}\r\n                                                                                </span>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </li>\r\n                                                                );\r\n                                                            })}\r\n                                                        </ul>\r\n                                                        <hr />\r\n                                                    </>\r\n                                                );\r\n                                            })\r\n                                        ) : (\r\n                                            <li className=\"addons-list__item\">\r\n                                                <div className=\"d-flex align-items-center justify-content-between\">\r\n                                                    <div className=\"col text-center text-primary text-uppercase\">\r\n                                                        {_t(t(\"No properties\"))}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </li>\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                            {/* Property group and items */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Menu Addons End */}\r\n\r\n            {/* Show Cart  */}\r\n            <div className=\"modal fade\" id=\"showCart\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog modal-fullscreen\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header align-items-center\">\r\n                            <h3>{_t(t(\"Order details\"))}</h3>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn-close\"\r\n                                data-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                            ></button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <span className=\"sm-text font-weight-bold text-uppercase font-italic\">\r\n                                        {_t(t(\"Order token\"))}:{\" \"}\r\n                                        {newOrder ? (\r\n                                            <>\r\n                                                #{orderDetails.token.id} -{\" \"}\r\n                                                <Moment format=\"LT\">{orderDetails.token.time}</Moment>\r\n                                            </>\r\n                                        ) : (\r\n                                            \"\"\r\n                                        )}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"fk-sm-card__container t-mt-30\">\r\n                                <div className=\"fk-sm-card__content\">\r\n                                    <h6 className=\"text-capitalize fk-sm-card__title t-mb-5\">\r\n                                        {_t(t(\"order items\"))}\r\n                                    </h6>\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            <ul className=\"t-list addons-list\">\r\n                                {/* loop through order list items */}\r\n                                {newOrder && newOrder.length > 0 ? (\r\n                                    newOrder.map((orderListItem, orderListItemIndex) => {\r\n                                        return (\r\n                                            <>\r\n                                                <li\r\n                                                    className={`addons-list__item px-1 ${orderListItemIndex === activeItemInOrder && \"active\"\r\n                                                        }`}\r\n                                                >\r\n                                                    <div\r\n                                                        className=\"d-flex align-items-center justify-content-between\"\r\n                                                        onClick={(e) => {\r\n                                                            e.preventDefault();\r\n                                                            //orderListItem's group wise all items\r\n                                                            let tempItems =\r\n                                                                foodForSearch &&\r\n                                                                foodForSearch.filter((tempItem) => {\r\n                                                                    return (\r\n                                                                        tempItem.food_group_id ===\r\n                                                                        orderListItem.item.food_group_id\r\n                                                                    );\r\n                                                                });\r\n\r\n                                                            //orderListItem's group\r\n                                                            let foodGroup =\r\n                                                                foodGroupForSearch &&\r\n                                                                foodGroupForSearch.find((groupItem) => {\r\n                                                                    return (\r\n                                                                        groupItem.id ===\r\n                                                                        parseInt(orderListItem.item.food_group_id)\r\n                                                                    );\r\n                                                                });\r\n\r\n                                                            // selected pos item\r\n                                                            let selectedItemTemp =\r\n                                                                tempItems &&\r\n                                                                tempItems.find((tempSelectedItem) => {\r\n                                                                    return (\r\n                                                                        tempSelectedItem.id ===\r\n                                                                        orderListItem.item.id\r\n                                                                    );\r\n                                                                });\r\n\r\n                                                            // Set variations, properties, selected item\r\n                                                            setFoodItem({\r\n                                                                ...foodItem,\r\n                                                                foodGroup: foodGroup,\r\n                                                                items: tempItems,\r\n                                                                selectedItem: selectedItemTemp,\r\n                                                                variations:\r\n                                                                    selectedItemTemp &&\r\n                                                                        parseInt(selectedItemTemp.has_variation) === 1\r\n                                                                        ? selectedItemTemp.variations\r\n                                                                        : null,\r\n                                                                properties:\r\n                                                                    selectedItemTemp &&\r\n                                                                        parseInt(selectedItemTemp.has_property) === 1\r\n                                                                        ? selectedItemTemp.properties\r\n                                                                        : null,\r\n                                                            });\r\n\r\n                                                            //set active order list index for background color of selected\r\n                                                            setActiveItemInOrder(orderListItemIndex);\r\n                                                        }}\r\n                                                    >\r\n                                                        <div className=\"col\">\r\n                                                            <span\r\n                                                                className={`t-text-heading sm-text text-capitalize d-block ${orderListItemIndex === activeItemInOrder &&\r\n                                                                    \"text-white\"\r\n                                                                    }`}\r\n                                                            >\r\n                                                                {orderListItem.item.name}\r\n                                                            </span>\r\n                                                            {parseInt(orderListItem.item.has_variation) ===\r\n                                                                1 &&\r\n                                                                orderListItem.variation && (\r\n                                                                    <span\r\n                                                                        className={`xxsm-text text-capitalize d-block ${orderListItemIndex ===\r\n                                                                            activeItemInOrder && \"text-white\"\r\n                                                                            }`}\r\n                                                                    >\r\n                                                                        {_t(t(\"Variation\"))}:{\" \"}\r\n                                                                        {orderListItem.variation.variation_name}\r\n                                                                    </span>\r\n                                                                )}\r\n\r\n                                                            {/* properties */}\r\n                                                            {orderListItem.properties &&\r\n                                                                orderListItem.properties.length > 0 &&\r\n                                                                selectedPropertyGroup[orderListItemIndex] !==\r\n                                                                undefined &&\r\n                                                                selectedPropertyGroup[orderListItemIndex].map(\r\n                                                                    (thisIsGroup) => {\r\n                                                                        let theGroup =\r\n                                                                            propertyGroupForSearch &&\r\n                                                                            propertyGroupForSearch.find((theItem) => {\r\n                                                                                return theItem.id === thisIsGroup;\r\n                                                                            });\r\n                                                                        return (\r\n                                                                            <div className=\"d-block\">\r\n                                                                                <span className=\"text-capitalize xxsm-text d-inline-block mr-1\">\r\n                                                                                    {theGroup && theGroup.name} :\r\n                                                                                </span>\r\n                                                                                {orderListItem.properties.map(\r\n                                                                                    (propertyName, propertyIndex) => {\r\n                                                                                        if (\r\n                                                                                            parseInt(\r\n                                                                                                propertyName.item\r\n                                                                                                    .property_group_id\r\n                                                                                            ) === theGroup.id\r\n                                                                                        ) {\r\n                                                                                            return (\r\n                                                                                                <span className=\"text-capitalize xxsm-text d-inline-block mr-1\">\r\n                                                                                                    {propertyName.item.name}{\" \"}\r\n                                                                                                    <span>\r\n                                                                                                        {\" \"}\r\n                                                                                                        {propertyName.quantity >\r\n                                                                                                            1 &&\r\n                                                                                                            \"(\" +\r\n                                                                                                            propertyName.quantity +\r\n                                                                                                            \")\"}\r\n                                                                                                    </span>\r\n                                                                                                    {orderListItem.properties\r\n                                                                                                        .length -\r\n                                                                                                        1 !==\r\n                                                                                                        propertyIndex && \",\"}\r\n                                                                                                </span>\r\n                                                                                            );\r\n                                                                                        } else {\r\n                                                                                            return true;\r\n                                                                                        }\r\n                                                                                    }\r\n                                                                                )}\r\n                                                                            </div>\r\n                                                                        );\r\n                                                                    }\r\n                                                                )}\r\n                                                        </div>\r\n\r\n                                                        {/* Quantity */}\r\n                                                        <div className=\"col\">\r\n                                                            <div className=\"fk-qty flex-grow-1 justify-content-end\">\r\n                                                                <span\r\n                                                                    className=\"fk-qty__icon\"\r\n                                                                    onClick={() => {\r\n                                                                        handleOrderItemQty(\"-\");\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <i className=\"las la-minus\"></i>\r\n                                                                </span>\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    value={orderListItem.quantity}\r\n                                                                    className={`fk-qty__input t-bg-clear ${orderListItemIndex === activeItemInOrder &&\r\n                                                                        \"text-white\"\r\n                                                                        }`}\r\n                                                                    readOnly\r\n                                                                />\r\n                                                                <span\r\n                                                                    className=\"fk-qty__icon\"\r\n                                                                    onClick={() => {\r\n                                                                        handleOrderItemQty(\"+\");\r\n                                                                    }}\r\n                                                                >\r\n                                                                    <i className=\"las la-plus\"></i>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"col text-right\">\r\n                                                            <span\r\n                                                                className={`t-text-heading text-uppercase sm-text flex-grow-1 ${orderListItemIndex === activeItemInOrder &&\r\n                                                                    \"text-white\"\r\n                                                                    }`}\r\n                                                            >\r\n                                                                {parseInt(orderListItem.item.has_variation) ===\r\n                                                                    1 ? (\r\n                                                                    <>\r\n                                                                        {currencySymbolLeft()}\r\n\r\n                                                                        {showPriceOfEachOrderItem(\r\n                                                                            orderListItemIndex\r\n                                                                        )}\r\n                                                                        {currencySymbolRight()}\r\n                                                                    </>\r\n                                                                ) : (\r\n                                                                    <>\r\n                                                                        {currencySymbolLeft()}\r\n                                                                        {showPriceOfEachOrderItem(\r\n                                                                            orderListItemIndex\r\n                                                                        )}\r\n                                                                        {currencySymbolRight()}\r\n                                                                    </>\r\n                                                                )}\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </li>\r\n                                                <span className=\"text-capitalize  t-pt-5 t-pb-5 t-pl-5 t-pr-5 sm-text font-weight-bold make-this-relative-mobile\">\r\n                                                    <span\r\n                                                        className=\"badge rounded-pill bg-secondary text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                            handleRemoveItemFromOrderList(orderListItemIndex);\r\n                                                        }}\r\n                                                    >\r\n                                                        <i className=\"fa fa-times\"></i>\r\n                                                    </span>\r\n                                                </span>\r\n                                            </>\r\n                                        );\r\n                                    })\r\n                                ) : (\r\n                                    <div className=\"text-primary text-center font-weight-bold pt-2 xsm-text text-uppercase\">\r\n                                        {_t(t(\"Select food item to add to the list\"))}\r\n                                    </div>\r\n                                )}\r\n                            </ul>\r\n                            <hr />\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <span className=\"text-capitalize sm-text\">\r\n                                                {\" \"}\r\n                                                {_t(t(\"sub total\"))}{\" \"}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"col text-center\">:</div>\r\n                                        <div className=\"col text-right\">\r\n                                            <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                                                {newOrder ? (\r\n                                                    <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                        {currencySymbolLeft()}\r\n                                                        {formatPrice(theSubTotal)}\r\n                                                        {currencySymbolRight()}\r\n                                                    </span>\r\n                                                ) : (\r\n                                                    <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                        {currencySymbolLeft()}\r\n                                                        {formatPrice(0)}\r\n                                                        {currencySymbolRight()}\r\n                                                    </span>\r\n                                                )}\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <span className=\"sm-text\">\r\n                                                {getSystemSettings(generalSettings, \"vat_system\") ===\r\n                                                    \"igst\"\r\n                                                    ? `vat(${newSettings !== null && newSettings.vat})`\r\n                                                    : getSystemSettings(generalSettings, \"vat_system\") ===\r\n                                                        \"cgst\"\r\n                                                        ? \"cgst+sgst\" +\r\n                                                        \"(\" +\r\n                                                        getSystemSettings(generalSettings, \"cgst\") +\r\n                                                        \"+\" +\r\n                                                        getSystemSettings(generalSettings, \"sgst\") +\r\n                                                        \")\" :\r\n                                                        `tax(${newSettings !== null && newSettings.tax})`}\r\n                                                %:\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"col text-center\">:</div>\r\n                                        <div className=\"col text-right\">\r\n                                            <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                                                {currencySymbolLeft()}\r\n                                                {formatPrice(theVat)}\r\n                                                {currencySymbolRight()}\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {getSystemSettings(generalSettings, \"sDiscount\") === \"flat\" && (\r\n                                    <>\r\n                                        <div className=\"col-12 mb-2\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col\">\r\n                                                    <span className=\"text-capitalize sm-text\">\r\n                                                        {\" \"}\r\n                                                        {_t(t(\"service\"))}{\" \"}\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div className=\"col text-center\">:</div>\r\n                                                <div className=\"col text-right\">\r\n                                                    <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            step=\"0.01\"\r\n                                                            min=\"0\"\r\n                                                            className=\"text-capitalize xsm-text d-inline-block font-weight-bold form-control rounded-0 text-right\"\r\n                                                            onChange={(e) => {\r\n                                                                if (e.target.value !== \"\") {\r\n                                                                    setOrderDetails({\r\n                                                                        ...orderDetails,\r\n                                                                        serviceCharge: parseFloat(e.target.value),\r\n                                                                    });\r\n                                                                    let totalPayable = 0;\r\n                                                                    let localCurrency = JSON.parse(\r\n                                                                        localStorage.getItem(\"currency\")\r\n                                                                    );\r\n                                                                    let usdServiceCharge =\r\n                                                                        parseFloat(e.target.value) /\r\n                                                                        localCurrency.rate;\r\n                                                                    let usdDiscount =\r\n                                                                        parseFloat(orderDetails.discount) /\r\n                                                                        localCurrency.rate;\r\n\r\n                                                                    totalPayable =\r\n                                                                        theSubTotal +\r\n                                                                        theVat +\r\n                                                                        usdServiceCharge -\r\n                                                                        usdDiscount;\r\n                                                                    setTotalPaybale(totalPayable);\r\n                                                                    setReturnMoneyUsd(totalPayable - paidMoney);\r\n                                                                } else {\r\n                                                                    setOrderDetails({\r\n                                                                        ...orderDetails,\r\n                                                                        serviceCharge: 0,\r\n                                                                    });\r\n                                                                    let totalPayable = 0;\r\n                                                                    let localCurrency = JSON.parse(\r\n                                                                        localStorage.getItem(\"currency\")\r\n                                                                    );\r\n                                                                    let usdServiceCharge =\r\n                                                                        parseFloat(0) / localCurrency.rate;\r\n                                                                    let usdDiscount =\r\n                                                                        parseFloat(orderDetails.discount) /\r\n                                                                        localCurrency.rate;\r\n\r\n                                                                    totalPayable =\r\n                                                                        theSubTotal +\r\n                                                                        theVat +\r\n                                                                        usdServiceCharge -\r\n                                                                        usdDiscount;\r\n                                                                    setTotalPaybale(totalPayable);\r\n                                                                    setReturnMoneyUsd(totalPayable - paidMoney);\r\n                                                                }\r\n                                                            }}\r\n                                                            value={\r\n                                                                orderDetails.serviceCharge !== 0 &&\r\n                                                                orderDetails.serviceCharge\r\n                                                            }\r\n                                                        />\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col\">\r\n                                                    <span className=\"text-capitalize sm-text\">\r\n                                                        {\" \"}\r\n                                                        {_t(t(\"discount\"))}{\" \"}\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div className=\"col text-center\">:</div>\r\n                                                <div className=\"col text-right\">\r\n                                                    <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                                                        <input\r\n                                                            type=\"number\"\r\n                                                            step=\"0.01\"\r\n                                                            min=\"0\"\r\n                                                            className=\"text-capitalize xsm-text d-inline-block font-weight-bold form-control rounded-0 text-right\"\r\n                                                            onChange={(e) => {\r\n                                                                if (e.target.value !== \"\") {\r\n                                                                    setOrderDetails({\r\n                                                                        ...orderDetails,\r\n                                                                        discount: parseFloat(e.target.value),\r\n                                                                    });\r\n                                                                    let totalPayable = 0;\r\n                                                                    let localCurrency = JSON.parse(\r\n                                                                        localStorage.getItem(\"currency\")\r\n                                                                    );\r\n                                                                    let usdServiceCharge =\r\n                                                                        parseFloat(orderDetails.serviceCharge) /\r\n                                                                        localCurrency.rate;\r\n                                                                    let usdDiscount =\r\n                                                                        parseFloat(e.target.value) /\r\n                                                                        localCurrency.rate;\r\n\r\n                                                                    totalPayable =\r\n                                                                        theSubTotal +\r\n                                                                        theVat +\r\n                                                                        usdServiceCharge -\r\n                                                                        usdDiscount;\r\n\r\n                                                                    setTotalPaybale(totalPayable);\r\n                                                                    setReturnMoneyUsd(totalPayable - paidMoney);\r\n                                                                } else {\r\n                                                                    setOrderDetails({\r\n                                                                        ...orderDetails,\r\n                                                                        discount: 0,\r\n                                                                    });\r\n                                                                    let totalPayable = 0;\r\n                                                                    let localCurrency = JSON.parse(\r\n                                                                        localStorage.getItem(\"currency\")\r\n                                                                    );\r\n                                                                    let usdServiceCharge =\r\n                                                                        parseFloat(orderDetails.serviceCharge) /\r\n                                                                        localCurrency.rate;\r\n                                                                    let usdDiscount =\r\n                                                                        parseFloat(0) / localCurrency.rate;\r\n\r\n                                                                    totalPayable =\r\n                                                                        theSubTotal +\r\n                                                                        theVat +\r\n                                                                        usdServiceCharge -\r\n                                                                        usdDiscount;\r\n                                                                    setTotalPaybale(totalPayable);\r\n                                                                    setReturnMoneyUsd(totalPayable - paidMoney);\r\n                                                                }\r\n                                                            }}\r\n                                                            value={\r\n                                                                orderDetails.discount !== 0 &&\r\n                                                                orderDetails.discount\r\n                                                            }\r\n                                                        />\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n\r\n                                {getSystemSettings(generalSettings, \"sDiscount\") ===\r\n                                    \"percentage\" && (\r\n                                        <>\r\n                                            <div className=\"col-12 mb-2\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col\">\r\n                                                        <span className=\"text-capitalize sm-text\">\r\n                                                            {\" \"}\r\n                                                            {_t(t(\"service\"))}\r\n                                                            {\" %\"}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                    <div className=\"col text-center\">:</div>\r\n                                                    <div className=\"col text-right\">\r\n                                                        <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                                                            <input\r\n                                                                type=\"number\"\r\n                                                                step=\"0.01\"\r\n                                                                min=\"0\"\r\n                                                                className=\"text-capitalize xsm-text d-inline-block font-weight-bold form-control rounded-0 text-right\"\r\n                                                                onChange={(e) => {\r\n                                                                    if (e.target.value !== \"\") {\r\n                                                                        setOrderDetails({\r\n                                                                            ...orderDetails,\r\n                                                                            serviceCharge: parseFloat(e.target.value),\r\n                                                                        });\r\n                                                                        let totalPayable = 0;\r\n                                                                        // let localCurrency = JSON.parse(\r\n                                                                        //   localStorage.getItem(\r\n                                                                        //     \"currency\"\r\n                                                                        //   )\r\n                                                                        // );\r\n                                                                        // let usdServiceCharge =\r\n                                                                        //   parseFloat(e.target.value) /\r\n                                                                        //   localCurrency.rate;\r\n                                                                        // console.log(\"coming\");\r\n                                                                        let usdServiceCharge =\r\n                                                                            theSubTotal *\r\n                                                                            (parseFloat(e.target.value) / 100);\r\n\r\n                                                                        // let usdDiscount =\r\n                                                                        //   parseFloat(\r\n                                                                        //     orderDetails.discount\r\n                                                                        //   ) / localCurrency.rate;\r\n\r\n                                                                        let usdDiscount =\r\n                                                                            theSubTotal *\r\n                                                                            (parseFloat(orderDetails.discount) / 100);\r\n\r\n                                                                        totalPayable =\r\n                                                                            theSubTotal +\r\n                                                                            theVat +\r\n                                                                            usdServiceCharge -\r\n                                                                            usdDiscount;\r\n                                                                        setTotalPaybale(totalPayable);\r\n                                                                    } else {\r\n                                                                        setOrderDetails({\r\n                                                                            ...orderDetails,\r\n                                                                            serviceCharge: 0,\r\n                                                                        });\r\n                                                                        let totalPayable = 0;\r\n                                                                        // let localCurrency = JSON.parse(\r\n                                                                        //   localStorage.getItem(\r\n                                                                        //     \"currency\"\r\n                                                                        //   )\r\n                                                                        // );\r\n                                                                        // let usdServiceCharge =\r\n                                                                        //   parseFloat(0) /\r\n                                                                        //   localCurrency.rate;\r\n                                                                        let usdServiceCharge = 0;\r\n\r\n                                                                        // let usdDiscount =\r\n                                                                        //   parseFloat(\r\n                                                                        //     orderDetails.discount\r\n                                                                        //   ) / localCurrency.rate;\r\n\r\n                                                                        let usdDiscount =\r\n                                                                            theSubTotal *\r\n                                                                            (parseFloat(orderDetails.discount) / 100);\r\n\r\n                                                                        totalPayable =\r\n                                                                            theSubTotal +\r\n                                                                            theVat +\r\n                                                                            usdServiceCharge -\r\n                                                                            usdDiscount;\r\n                                                                        setTotalPaybale(totalPayable);\r\n                                                                    }\r\n                                                                }}\r\n                                                                value={\r\n                                                                    orderDetails.serviceCharge !== 0 &&\r\n                                                                    orderDetails.serviceCharge\r\n                                                                }\r\n                                                            />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-12\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col\">\r\n                                                        <span className=\"text-capitalize sm-text\">\r\n                                                            {\" \"}\r\n                                                            {_t(t(\"discount\"))}\r\n                                                            {\" %\"}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                    <div className=\"col text-center\">:</div>\r\n                                                    <div className=\"col text-right\">\r\n                                                        <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                                                            <input\r\n                                                                type=\"number\"\r\n                                                                step=\"0.01\"\r\n                                                                min=\"0\"\r\n                                                                className=\"text-capitalize xsm-text d-inline-block font-weight-bold form-control rounded-0 text-right\"\r\n                                                                onChange={(e) => {\r\n                                                                    if (e.target.value !== \"\") {\r\n                                                                        setOrderDetails({\r\n                                                                            ...orderDetails,\r\n                                                                            discount: parseFloat(e.target.value),\r\n                                                                        });\r\n                                                                        let totalPayable = 0;\r\n                                                                        // let localCurrency = JSON.parse(\r\n                                                                        //   localStorage.getItem(\r\n                                                                        //     \"currency\"\r\n                                                                        //   )\r\n                                                                        // );\r\n                                                                        // let usdServiceCharge =\r\n                                                                        //   parseFloat(\r\n                                                                        //     orderDetails.serviceCharge\r\n                                                                        //   ) / localCurrency.rate;\r\n                                                                        let usdServiceCharge =\r\n                                                                            theSubTotal *\r\n                                                                            (parseFloat(orderDetails.serviceCharge) /\r\n                                                                                100);\r\n\r\n                                                                        // let usdDiscount =\r\n                                                                        //   parseFloat(e.target.value) /\r\n                                                                        //   localCurrency.rate;\r\n\r\n                                                                        let usdDiscount =\r\n                                                                            theSubTotal *\r\n                                                                            (parseFloat(e.target.value) / 100);\r\n\r\n                                                                        totalPayable =\r\n                                                                            theSubTotal +\r\n                                                                            theVat +\r\n                                                                            usdServiceCharge -\r\n                                                                            usdDiscount;\r\n\r\n                                                                        setTotalPaybale(totalPayable);\r\n                                                                    } else {\r\n                                                                        setOrderDetails({\r\n                                                                            ...orderDetails,\r\n                                                                            discount: 0,\r\n                                                                        });\r\n                                                                        let totalPayable = 0;\r\n                                                                        // let localCurrency = JSON.parse(\r\n                                                                        //   localStorage.getItem(\r\n                                                                        //     \"currency\"\r\n                                                                        //   )\r\n                                                                        // );\r\n\r\n                                                                        let usdServiceCharge =\r\n                                                                            theSubTotal *\r\n                                                                            (parseFloat(orderDetails.serviceCharge) /\r\n                                                                                100);\r\n\r\n                                                                        let usdDiscount = 0;\r\n\r\n                                                                        totalPayable =\r\n                                                                            theSubTotal +\r\n                                                                            theVat +\r\n                                                                            usdServiceCharge -\r\n                                                                            usdDiscount;\r\n                                                                        setTotalPaybale(totalPayable);\r\n                                                                    }\r\n                                                                }}\r\n                                                                value={\r\n                                                                    orderDetails.discount !== 0 &&\r\n                                                                    orderDetails.discount\r\n                                                                }\r\n                                                            />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                                                {_t(t(\"total bill\"))}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"col text-center\">:</div>\r\n                                        <div className=\"col text-right\">\r\n                                            <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                                                {currencySymbolLeft()}\r\n                                                {formatPrice(totalPayable)}\r\n                                                {currencySymbolRight()}\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            {returnMoneyUsd > 0 && (\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 mb-2\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col\">\r\n                                                <span className=\"text-capitalize sm-text font-weight-bold text-primary\">\r\n                                                    {_t(t(\"Return\"))}\r\n                                                </span>\r\n                                            </div>\r\n                                            <div className=\"col text-center\">:</div>\r\n                                            <div className=\"col text-right\">\r\n                                                <span className=\"text-capitalize sm-text font-weight-bold text-primary\">\r\n                                                    {currencySymbolLeft()}\r\n                                                    {formatPrice(Math.abs(returnMoneyUsd))}\r\n                                                    {currencySymbolRight()}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"row py-2 mx-1\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-secondary xsm-text text-uppercase col-3\"\r\n                                onClick={handleCancel}\r\n                            >\r\n                                {_t(t(\"Cancel\"))}\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary xsm-text text-uppercase ml-auto mr-1 col-4\"\r\n                                onClick={!loading && handleSettleOrder}\r\n                            >\r\n                                {!loading ? _t(t(\"settle\")) : _t(t(\"Please wait\"))}\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-success xsm-text text-uppercase col-4\"\r\n                                onClick={!loading && handleSubmitOrder}\r\n                            >\r\n                                {!loading ? _t(t(\"submit\")) : _t(t(\"Please wait\"))}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Show Cart End */}\r\n\r\n            {/* Extra Info  */}\r\n            <div className=\"modal fade\" id=\"extraInfo\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog modal-fullscreen\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header align-items-center\">\r\n                            <div className=\"fk-sm-card__content\">\r\n                                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                                    {_t(t(\"additional information\"))}\r\n                                </h5>\r\n                            </div>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn-close\"\r\n                                data-dismiss=\"modal\"\r\n                                aria-label=\"Close\"\r\n                            ></button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <ul className=\"t-list addons-list\">\r\n                                {authUserInfo.details &&\r\n                                    authUserInfo.details.user_type !== \"staff\" && (\r\n                                        <li className=\"addons-list__item mt-1 mx-1\">\r\n                                            <Select\r\n                                                options={branchForSearch && branchForSearch}\r\n                                                components={makeAnimated()}\r\n                                                getOptionLabel={(option) => option.name}\r\n                                                getOptionValue={(option) => option.name}\r\n                                                classNamePrefix=\"select\"\r\n                                                className=\"xsm-text\"\r\n                                                onChange={handleSetBranch}\r\n                                                maxMenuHeight=\"200px\"\r\n                                                placeholder={_t(t(\"Branch\")) + \"..\"}\r\n                                            />\r\n                                        </li>\r\n                                    )}\r\n                                {!loading && (\r\n                                    <>\r\n                                        {orderDetails.branch !== null && (\r\n                                            <>\r\n                                                <li\r\n                                                    className={`addons-list__item mx-1 ${authUserInfo.details &&\r\n                                                        authUserInfo.details.user_type === \"staff\" &&\r\n                                                        \"mt-1\"\r\n                                                        }`}\r\n                                                >\r\n                                                    <Select\r\n                                                        options={\r\n                                                            orderDetailUsers.theCustomers !== null &&\r\n                                                            orderDetailUsers.theCustomers\r\n                                                        }\r\n                                                        components={makeAnimated()}\r\n                                                        getOptionLabel={(option) =>\r\n                                                            option.name + \" (\" + option.phn_no + \")\"\r\n                                                        }\r\n                                                        getOptionValue={(option) => option.name}\r\n                                                        classNamePrefix=\"select\"\r\n                                                        className=\"xsm-text\"\r\n                                                        onChange={handleSetCustomer}\r\n                                                        maxMenuHeight=\"200px\"\r\n                                                        placeholder={_t(t(\"Customer\")) + \"..\"}\r\n                                                    />\r\n                                                </li>\r\n                                                <li className=\"addons-list__item mx-1 border border-2 rounded-lg\">\r\n                                                    <div className=\"btn-group w-100\">\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            className=\"fk-right-nav__guest-btn btn w-100 t-bg-white dropdown-toggle new-customer-pos xsm-text pl-2\"\r\n                                                            data-toggle=\"dropdown\"\r\n                                                            aria-expanded=\"false\"\r\n                                                        >\r\n                                                            + {_t(t(\"Customer\"))}?\r\n                                                        </button>\r\n                                                        <ul className=\"dropdown-menu w-100 border-0 pt-4 change-background\">\r\n                                                            <li>\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"name\"\r\n                                                                    className=\"form-control font-10px rounded-lg\"\r\n                                                                    placeholder=\"Name\"\r\n                                                                    autoComplete=\"off\"\r\n                                                                    value={orderDetails.newCustomerInfo.name}\r\n                                                                    onChange={handleNewCustomer}\r\n                                                                />\r\n                                                            </li>\r\n                                                            <li className=\"pb-2\">\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    name=\"number\"\r\n                                                                    className=\"form-control font-10px mt-2 rounded-lg\"\r\n                                                                    autoComplete=\"off\"\r\n                                                                    placeholder=\"Number\"\r\n                                                                    value={orderDetails.newCustomerInfo.number}\r\n                                                                    onChange={handleNewCustomer}\r\n                                                                />\r\n                                                            </li>\r\n                                                            <li className=\"pb-1 text-right\">\r\n                                                                <button\r\n                                                                    className=\"btn t-bg-white text-dark xsm-text text-uppercase btn-sm py-0 px-2 mr-1\"\r\n                                                                    onClick={() => {\r\n                                                                        setOrderDetails({\r\n                                                                            ...orderDetails,\r\n                                                                            newCustomer: false,\r\n                                                                            newCustomerInfo: {\r\n                                                                                name: \"\",\r\n                                                                                number: \"\",\r\n                                                                            },\r\n                                                                        });\r\n                                                                    }}\r\n                                                                >\r\n                                                                    {_t(t(\"Cancel\"))}\r\n                                                                </button>\r\n                                                            </li>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </li>\r\n\r\n                                                <li className=\"addons-list__item mx-1\">\r\n                                                    <Select\r\n                                                        options={deptTagForSearch && deptTagForSearch}\r\n                                                        components={makeAnimated()}\r\n                                                        getOptionLabel={(option) => option.name}\r\n                                                        getOptionValue={(option) => option.name}\r\n                                                        classNamePrefix=\"select\"\r\n                                                        className=\"xsm-text\"\r\n                                                        onChange={handleSetDeptTag}\r\n                                                        maxMenuHeight=\"200px\"\r\n                                                        placeholder={_t(t(\"Dept tag\")) + \"..\"}\r\n                                                    />\r\n                                                </li>\r\n                                                <li\r\n                                                    className={`addons-list__item mx-1 payment-type-parent ${orderDetails.payment_type !== null && \"mb-1\"\r\n                                                        }`}\r\n                                                >\r\n                                                    <Select\r\n                                                        options={\r\n                                                            paymentTypeForSearch && paymentTypeForSearch\r\n                                                        }\r\n                                                        components={makeAnimated()}\r\n                                                        getOptionLabel={(option) => option.name}\r\n                                                        getOptionValue={(option) => option.name}\r\n                                                        classNamePrefix=\"select\"\r\n                                                        className=\"xsm-text\"\r\n                                                        onChange={handleSetpaymentType}\r\n                                                        maxMenuHeight=\"200px\"\r\n                                                        isMulti\r\n                                                        backspaceRemovesValue={false}\r\n                                                        clearIndicator={null}\r\n                                                        placeholder={_t(t(\"Payments\")) + \"..\"}\r\n                                                    />\r\n                                                </li>\r\n                                                {orderDetails.payment_type !== null && (\r\n                                                    <div className=\"border mt-0 mb-2 change-background mx-1 rounded-lg\">\r\n                                                        <div className=\"xsm-text text-center text-white pt-1\">\r\n                                                            {_t(t(\"Amount\"))}\r\n                                                        </div>\r\n                                                        {orderDetails.payment_type.map(\r\n                                                            (eachPaymentType, paymentTypeIndex) => {\r\n                                                                return (\r\n                                                                    <li className=\"addons-list__item mx-1 mb-1\">\r\n                                                                        <input\r\n                                                                            type=\"number\"\r\n                                                                            min=\"0\"\r\n                                                                            step=\"0.01\"\r\n                                                                            name={eachPaymentType.id}\r\n                                                                            autoComplete=\"off\"\r\n                                                                            className=\"form-control xsm-text pl-2\"\r\n                                                                            onChange={handlePaymentTypeAmount}\r\n                                                                            placeholder={eachPaymentType.name}\r\n                                                                            value={\r\n                                                                                orderDetails.payment_amount &&\r\n                                                                                orderDetails.payment_amount[\r\n                                                                                eachPaymentType.id\r\n                                                                                ]\r\n                                                                            }\r\n                                                                        />\r\n                                                                    </li>\r\n                                                                );\r\n                                                            }\r\n                                                        )}\r\n                                                    </div>\r\n                                                )}\r\n\r\n                                                {getSystemSettings(generalSettings, \"table_waiter\") ===\r\n                                                    \"1\" ? (\r\n                                                    <>\r\n                                                        <li className=\"addons-list__item mx-1\">\r\n                                                            <Select\r\n                                                                options={\r\n                                                                    orderDetailUsers.theTables !== null &&\r\n                                                                    orderDetailUsers.theTables\r\n                                                                }\r\n                                                                components={makeAnimated()}\r\n                                                                getOptionLabel={(option) => option.name}\r\n                                                                getOptionValue={(option) => option.name}\r\n                                                                classNamePrefix=\"select\"\r\n                                                                className=\"xsm-text\"\r\n                                                                onChange={handleSetTable}\r\n                                                                maxMenuHeight=\"200px\"\r\n                                                                placeholder={_t(t(\"Table\")) + \"..\"}\r\n                                                            />\r\n                                                        </li>\r\n                                                        <li className=\"addons-list__item mx-1\">\r\n                                                            <Select\r\n                                                                options={\r\n                                                                    orderDetailUsers.theWaiters !== null &&\r\n                                                                    orderDetailUsers.theWaiters\r\n                                                                }\r\n                                                                components={makeAnimated()}\r\n                                                                getOptionLabel={(option) => option.name}\r\n                                                                getOptionValue={(option) => option.name}\r\n                                                                classNamePrefix=\"select\"\r\n                                                                className=\"xsm-text\"\r\n                                                                onChange={handleSetWaiter}\r\n                                                                maxMenuHeight=\"200px\"\r\n                                                                placeholder={_t(t(\"Waiter\")) + \"..\"}\r\n                                                            />\r\n                                                        </li>\r\n                                                    </>\r\n                                                ) : (\r\n                                                    \"\"\r\n                                                )}\r\n\r\n                                                <li className=\"addons-list__item mx-1\">\r\n                                                    <input\r\n                                                        type=\"number\"\r\n                                                        className=\"form-control xsm-text py-2 pl-2\"\r\n                                                        min=\"1\"\r\n                                                        onChange={handleTotalGuest}\r\n                                                        placeholder={_t(t(\"Total guests\")) + \"..\"}\r\n                                                    />\r\n                                                </li>\r\n                                            </>\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Extra Info End */}\r\n            <div className={` ${showSettle ? \"d-none\" : \"\"}`}>\r\n                <main id=\"main\" data-simplebar>\r\n                    {/* Mobile Screen Only   */}\r\n                    <div className=\"d-md-none t-mb-15\">\r\n                        {/* Show start work period options here */}\r\n                        {newSettings && newSettings.workPeriod === null && (\r\n                            <div className=\"fk-left-overlay\">\r\n                                <div className=\"fk-left-overlay__content text-center m-auto\">\r\n                                    <h5\r\n                                        className={`text-primary text-uppercase ${authUserInfo.details &&\r\n                                            authUserInfo.details.user_type !== \"staff\" &&\r\n                                            \"mb-0\"\r\n                                            }`}\r\n                                    >\r\n                                        {authUserInfo.details &&\r\n                                            authUserInfo.details.user_type !== \"staff\"\r\n                                            ? _t(t(\"Select branch to active POS\"))\r\n                                            : _t(t(\"start workperiod\"))}\r\n                                    </h5>\r\n                                    {authUserInfo.details &&\r\n                                        authUserInfo.details.user_type !== \"staff\" && (\r\n                                            <>\r\n                                                <h6 className=\"mt-1 text-uppercase xsm-text mb-1\">\r\n                                                    {_t(t(\"Start workperiod if it is not started\"))}\r\n                                                </h6>\r\n                                                <small className=\"d-flex justify-content-center text-lowercase xsm-text mt-0 mb-2\">\r\n                                                    (\r\n                                                    {_t(\r\n                                                        t(\r\n                                                            \"Use staff account not to see this multiple times\"\r\n                                                        )\r\n                                                    )}\r\n                                                    )\r\n                                                </small>\r\n                                            </>\r\n                                        )}\r\n                                    <NavLink\r\n                                        to=\"/dashboard\"\r\n                                        className=\"t-heading-font btn btn-primary btn-sm text-uppercase sm-text\"\r\n                                    >\r\n                                        {_t(t(\"Goto Dashboard\"))}\r\n                                    </NavLink>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        {/* Show start work period options here */}\r\n                        {foodGroupForSearch &&\r\n                            foodGroupForSearch.map((mobileGroup, mobileGroupIndex) => {\r\n                                let tempItems =\r\n                                    foodForSearch &&\r\n                                    foodForSearch.filter((tempItem) => {\r\n                                        return parseInt(tempItem.food_group_id) === mobileGroup.id;\r\n                                    });\r\n                                return (\r\n                                    <div\r\n                                        className=\"fk-sm-card t-mt-10\"\r\n                                        id={`card-${mobileGroupIndex + 1}`}\r\n                                    >\r\n                                        <h3 className=\"mt-0 t-mb-30 text-capitalize\">\r\n                                            {mobileGroup.name}\r\n                                        </h3>\r\n                                        <ul className=\"t-list fk-sm-card-list\">\r\n                                            {tempItems !== null && tempItems.length > 0\r\n                                                ? [\r\n                                                    tempItems.map((mobileItem, mobileItemIndex) => {\r\n                                                        return (\r\n                                                            <li\r\n                                                                className=\"fk-sm-card-list__item\"\r\n                                                                data-toggle={\r\n                                                                    handleGetStock(mobileItem.id) === 0\r\n                                                                        ? \"\"\r\n                                                                        : \"modal\"\r\n                                                                }\r\n                                                                data-target={\r\n                                                                    handleGetStock(mobileItem.id) === 0\r\n                                                                        ? \"\"\r\n                                                                        : \"#menuAddons\"\r\n                                                                }\r\n                                                                key={mobileItemIndex}\r\n                                                                onClick={() => {\r\n                                                                    // if manage is stock is enable\r\n                                                                    if (showManageStock) {\r\n                                                                        if (handleGetStock(mobileItem.id) === 0) {\r\n                                                                            toast.error(`${_t(t(\"Out of stock\"))}`, {\r\n                                                                                position: \"bottom-center\",\r\n                                                                                closeButton: false,\r\n                                                                                autoClose: 10000,\r\n                                                                                hideProgressBar: false,\r\n                                                                                closeOnClick: true,\r\n                                                                                pauseOnHover: true,\r\n                                                                                className:\r\n                                                                                    \"text-center toast-notification\",\r\n                                                                            });\r\n                                                                        } else {\r\n                                                                            //set active item in order list\r\n                                                                            setActiveItemInOrder(mobileItemIndex);\r\n                                                                            // set variations, properties and selected items here\r\n                                                                            setFoodItem({\r\n                                                                                ...foodItem,\r\n                                                                                foodGroup: mobileGroup,\r\n                                                                                selectedItem: mobileItem,\r\n                                                                                variations:\r\n                                                                                    mobileItem &&\r\n                                                                                        parseInt(mobileItem.has_variation) ===\r\n                                                                                        1\r\n                                                                                        ? mobileItem.variations\r\n                                                                                        : null,\r\n                                                                                properties:\r\n                                                                                    mobileItem &&\r\n                                                                                        parseInt(mobileItem.has_property) ===\r\n                                                                                        1\r\n                                                                                        ? mobileItem.properties\r\n                                                                                        : null,\r\n                                                                            });\r\n                                                                            handleOrderItem(mobileItem);\r\n                                                                        }\r\n                                                                    } else {\r\n\r\n                                                                        setActiveItemInOrder(mobileItemIndex);\r\n                                                                        // set variations, properties and selected items here\r\n                                                                        setFoodItem({\r\n                                                                            ...foodItem,\r\n                                                                            foodGroup: mobileGroup,\r\n                                                                            selectedItem: mobileItem,\r\n                                                                            variations:\r\n                                                                                mobileItem &&\r\n                                                                                    parseInt(mobileItem.has_variation) ===\r\n                                                                                    1\r\n                                                                                    ? mobileItem.variations\r\n                                                                                    : null,\r\n                                                                            properties:\r\n                                                                                mobileItem &&\r\n                                                                                    parseInt(mobileItem.has_property) ===\r\n                                                                                    1\r\n                                                                                    ? mobileItem.properties\r\n                                                                                    : null,\r\n                                                                        });\r\n                                                                        handleOrderItem(mobileItem);\r\n                                                                    }\r\n\r\n                                                                }}\r\n                                                            >\r\n                                                                <div className=\"fk-sm-card__container align-items-center\">\r\n                                                                    <div className=\"fk-sm-card__content\">\r\n                                                                        <h6 className=\"text-capitalize fk-sm-card__title\">\r\n                                                                            {/* {mobileItem.name}, {_t(t(\"In Stock\"))}:{\" \"}\r\n                                      {handleGetStock(mobileItem.id)} */}\r\n                                                                            stock na thakleo baire theke khuje ene dibo\r\n                                                                        </h6>\r\n                                                                        {mobileItem.has_variation === \"0\" && (\r\n                                                                            <p className=\"t-mt-10 mb-0 sm-text text-uppercase t-text-dark--light-20\">\r\n                                                                                {currencySymbolLeft()}\r\n                                                                                {formatPrice(\r\n                                                                                    parseFloat(mobileItem.price)\r\n                                                                                )}\r\n                                                                                {currencySymbolRight()}\r\n                                                                            </p>\r\n                                                                        )}\r\n                                                                    </div>\r\n                                                                    <div className=\"fk-sm-card__action\">\r\n                                                                        <div\r\n                                                                            className=\"fk-sm-card__img fk-sm-card__img--1\"\r\n                                                                            style={{\r\n                                                                                backgroundImage: `url(${mobileItem.image})`,\r\n                                                                            }}\r\n                                                                        ></div>\r\n                                                                        <div className=\"fk-sm-card__cart\">\r\n                                                                            <i className=\"las la-plus\"></i>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </li>\r\n                                                        );\r\n                                                    }),\r\n                                                ]\r\n                                                : \"\"}\r\n                                        </ul>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n\r\n                        <div className=\"fk-sm-footnav\" style={{ zIndex: 10 }}>\r\n                            <div className=\"fk-sm-footnav__container\">\r\n                                <ul className=\"t-list fk-sm-footnav__list justify-content-center\">\r\n                                    <li\r\n                                        className=\"fk-sm-footnav__list-item\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#extraInfo\"\r\n                                    >\r\n                                        <span className=\"t-link fk-sm-footnav__link\">\r\n                                            <i className=\"las la-edit\"></i>\r\n                                        </span>\r\n                                    </li>\r\n                                    <li\r\n                                        className=\"fk-sm-footnav__list-item\"\r\n                                        data-toggle=\"modal\"\r\n                                        data-target=\"#showCart\"\r\n                                    >\r\n                                        <span className=\"t-link fk-sm-footnav__link\">\r\n                                            <i className=\"las la-shopping-cart\"></i>\r\n                                        </span>\r\n                                    </li>\r\n                                    <li className=\"fk-sm-footnav__list-item\">\r\n                                        <NavLink\r\n                                            to=\"/dashboard/pos/submitted\"\r\n                                            className=\"t-link fk-sm-footnav__link\"\r\n                                        >\r\n                                            <i className=\"las la-share-square\"></i>\r\n                                        </NavLink>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* Mobile Screen Only   */}\r\n\r\n                    {/* Show In Tab   */}\r\n                    <div className=\"fk-main d-none d-md-block t-mt-10\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row gx-2\">\r\n                                {/* Left Side  */}\r\n                                <div className=\"col-md-7\">\r\n                                    <div className=\"fk-left-over\">\r\n                                        {/* Show start work period options here */}\r\n                                        {newSettings && newSettings.workPeriod === null && (\r\n                                            <div className=\"fk-left-overlay\">\r\n                                                <div className=\"fk-left-overlay__content text-center m-auto\">\r\n                                                    <h5\r\n                                                        className={`text-primary text-uppercase ${authUserInfo.details &&\r\n                                                            authUserInfo.details.user_type !== \"staff\" &&\r\n                                                            \"mb-0\"\r\n                                                            }`}\r\n                                                    >\r\n                                                        {authUserInfo.details &&\r\n                                                            authUserInfo.details.user_type !== \"staff\"\r\n                                                            ? _t(t(\"Select branch to active POS\"))\r\n                                                            : _t(t(\"start workperiod\"))}\r\n                                                    </h5>\r\n                                                    {authUserInfo.details &&\r\n                                                        authUserInfo.details.user_type !== \"staff\" && (\r\n                                                            <>\r\n                                                                <h6 className=\"mt-1 text-uppercase xsm-text mb-1\">\r\n                                                                    {_t(\r\n                                                                        t(\"Start workperiod if it is not started\")\r\n                                                                    )}\r\n                                                                </h6>\r\n                                                                <small className=\"d-flex justify-content-center text-lowercase xsm-text mt-0 mb-2\">\r\n                                                                    (\r\n                                                                    {_t(\r\n                                                                        t(\r\n                                                                            \"Use staff account not to see this multiple times\"\r\n                                                                        )\r\n                                                                    )}\r\n                                                                    )\r\n                                                                </small>\r\n                                                            </>\r\n                                                        )}\r\n                                                    <NavLink\r\n                                                        to=\"/dashboard\"\r\n                                                        className=\"t-heading-font btn btn-primary btn-sm text-uppercase sm-text\"\r\n                                                    >\r\n                                                        {_t(t(\"Goto Dashboard\"))}\r\n                                                    </NavLink>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                        {/* Show start work period options here */}\r\n\r\n                                        <div className=\"row gx-2 align-items-center\">\r\n                                            <div className=\"col-md-4 col-lg-5 col-xl-6 col-xxl-7\">\r\n                                                <NavLink\r\n                                                    to=\"/dashboard/pos/online-orders\"\r\n                                                    className=\"t-link t-pt-8 t-pb-8 t-pl-12 t-pr-12 btn btn-outline-danger xsm-text text-uppercase text-center w-100\"\r\n                                                >\r\n                                                    {_t(t(\"Online Orders\"))}{\" \"}\r\n                                                    {onlineCounter > 0 && (\r\n                                                        <span className=\"bg-danger text-white p-2 rounded-md\">\r\n                                                            ({onlineCounter})\r\n                                                        </span>\r\n                                                    )}\r\n                                                </NavLink>\r\n                                            </div>\r\n                                            <div className=\"col-md-8 col-lg-7 col-xl-6 col-xxl-5\">\r\n                                                <div className=\"row align-items-center gx-2\">\r\n                                                    <div className=\"col\">\r\n                                                        {window.location.pathname ===\r\n                                                            \"/dashboard/pos/settled\" ? (\r\n                                                            <NavLink\r\n                                                                to=\"/refresh\"\r\n                                                                className=\"t-link t-pt-8 t-pb-8 t-pl-12 t-pr-12 btn btn-success xsm-text text-uppercase text-center w-100\"\r\n                                                            >\r\n                                                                {_t(t(\"Settled\"))}\r\n                                                            </NavLink>\r\n                                                        ) : (\r\n                                                            <NavLink\r\n                                                                to=\"/dashboard/pos/settled\"\r\n                                                                className=\"t-link t-pt-8 t-pb-8 t-pl-12 t-pr-12 btn btn-success xsm-text text-uppercase text-center w-100\"\r\n                                                            >\r\n                                                                {_t(t(\"Settled\"))}\r\n                                                            </NavLink>\r\n                                                        )}\r\n                                                    </div>\r\n                                                    <div className=\"col\">\r\n                                                        {window.location.pathname ===\r\n                                                            \"/dashboard/pos/submitted\" ? (\r\n                                                            <NavLink\r\n                                                                to=\"/refresh\"\r\n                                                                className=\"t-link t-pt-8 t-pb-8 t-pl-12 t-pr-12 btn btn-primary xsm-text text-uppercase text-center w-100\"\r\n                                                            >\r\n                                                                {_t(t(\"Submitted\"))}\r\n                                                            </NavLink>\r\n                                                        ) : (\r\n                                                            <NavLink\r\n                                                                to=\"/dashboard/pos/submitted\"\r\n                                                                className=\"t-link t-pt-8 t-pb-8 t-pl-12 t-pr-12 btn btn-primary xsm-text text-uppercase text-center w-100\"\r\n                                                            >\r\n                                                                {_t(t(\"Submitted\"))}\r\n                                                            </NavLink>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row t-mt-10 gx-2\">\r\n                                            {/* Left Menu   */}\r\n                                            <div className=\"col-md-4 col-xl-3\">\r\n                                                <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                                                    <ul className=\"t-list fk-pos-nav list-group\">\r\n                                                        {getSystemSettings(\r\n                                                            generalSettings,\r\n                                                            \"pos_screen\"\r\n                                                        ) === \"1\" &&\r\n                                                            deptTagForSearch && (\r\n                                                                <>\r\n                                                                    {deptTagForSearch.map(\r\n                                                                        (deptItem, deptItemIndex) => {\r\n                                                                            return (\r\n                                                                                <li\r\n                                                                                    className={`t-mb-10 ${deptItemIndex ===\r\n                                                                                        deptTagForSearch.length - 1\r\n                                                                                        ? \"t-mb-30\"\r\n                                                                                        : \"\"\r\n                                                                                        }`}\r\n                                                                                >\r\n                                                                                    <style></style>\r\n                                                                                    <button\r\n                                                                                        class={`button arrow text-uppercase ${orderDetails &&\r\n                                                                                            orderDetails.dept_tag &&\r\n                                                                                            orderDetails.dept_tag.id ===\r\n                                                                                            deptItem.id\r\n                                                                                            ? \"active\"\r\n                                                                                            : \"\"\r\n                                                                                            }`}\r\n                                                                                        onClick={() => {\r\n                                                                                            handleSetDeptTag(deptItem);\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {deptItem.name}\r\n                                                                                    </button>\r\n                                                                                </li>\r\n                                                                            );\r\n                                                                        }\r\n                                                                    )}\r\n                                                                </>\r\n                                                            )}\r\n\r\n                                                        {/* Food groups */}\r\n                                                        {foodGroupForSearch &&\r\n                                                            foodGroupForSearch.map(\r\n                                                                (groupItem, groupIndex) => {\r\n                                                                    return (\r\n                                                                        <li\r\n                                                                            className=\"fk-pos-nav__list\"\r\n                                                                            key={groupIndex}\r\n                                                                        >\r\n                                                                            <button\r\n                                                                                type=\"button\"\r\n                                                                                onClick={() => {\r\n                                                                                    // set active group, group items, initial item active, todo:: set variations and properties\r\n                                                                                    let tempItems =\r\n                                                                                        foodForSearch &&\r\n                                                                                        foodForSearch.filter((tempItem) => {\r\n                                                                                            return (\r\n                                                                                                parseInt(\r\n                                                                                                    tempItem.food_group_id\r\n                                                                                                ) === groupItem.id\r\n                                                                                            );\r\n                                                                                        });\r\n\r\n                                                                                    if (\r\n                                                                                        tempItems &&\r\n                                                                                        tempItems.length > 0\r\n                                                                                    ) {\r\n                                                                                        setFoodItem({\r\n                                                                                            ...foodItem,\r\n                                                                                            foodGroup: groupItem,\r\n                                                                                            items: tempItems,\r\n                                                                                            selectedItem:\r\n                                                                                                tempItems && tempItems[0],\r\n                                                                                            variations:\r\n                                                                                                tempItems &&\r\n                                                                                                    parseInt(\r\n                                                                                                        tempItems[0].has_variation\r\n                                                                                                    ) === 1\r\n                                                                                                    ? tempItems[0].variations\r\n                                                                                                    : null,\r\n                                                                                            properties:\r\n                                                                                                tempItems &&\r\n                                                                                                    parseInt(\r\n                                                                                                        tempItems[0].has_property\r\n                                                                                                    ) === 1\r\n                                                                                                    ? tempItems[0].properties\r\n                                                                                                    : null,\r\n                                                                                        });\r\n                                                                                    } else {\r\n                                                                                        setFoodItem({\r\n                                                                                            foodGroup: groupItem,\r\n                                                                                            items: null,\r\n                                                                                            selectedItem: null,\r\n                                                                                            variations: null,\r\n                                                                                            properties: null,\r\n                                                                                        });\r\n                                                                                    }\r\n\r\n                                                                                    //set active item in order list\r\n                                                                                    setActiveItemInOrder(null);\r\n                                                                                }}\r\n                                                                                //set active or !\r\n                                                                                className={`w-100 t-text-dark t-heading-font btn btn-outline-danger font-weight-bold text-uppercase ${foodItem.foodGroup &&\r\n                                                                                    foodItem.foodGroup.id ===\r\n                                                                                    groupItem.id &&\r\n                                                                                    \"active\"\r\n                                                                                    }`}\r\n                                                                            >\r\n                                                                                {groupItem.name}\r\n                                                                            </button>\r\n                                                                        </li>\r\n                                                                    );\r\n                                                                }\r\n                                                            )}\r\n                                                        {/* Food groups */}\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* Left Menu  End */}\r\n\r\n                                            {/* Dish Addons   */}\r\n                                            <div className=\"col-md-8 col-xl-9\">\r\n                                                <div className=\"\">\r\n                                                    <div className=\"active\" id=\"nav-1\">\r\n                                                        <div className=\"row gx-1\">\r\n                                                            <div className=\"col-xl-6 col-xxl-5 order-xl-2\">\r\n                                                                <div className=\"tab-content t-mb-10 mb-xl-0\">\r\n                                                                    <div className=\"\" id=\"addons-1\">\r\n                                                                        <div className=\"t-bg-white\">\r\n                                                                            <div\r\n                                                                                className=\"fk-addons-variation\"\r\n                                                                                data-simplebar\r\n                                                                            >\r\n                                                                                {/* Variations */}\r\n                                                                                <div className=\"fk-addons-table\">\r\n                                                                                    <div className=\"fk-addons-table__head text-center\">\r\n                                                                                        {_t(t(\"variations\"))}\r\n                                                                                    </div>\r\n                                                                                    {foodItem.variations ? (\r\n                                                                                        <>\r\n                                                                                            <div className=\"fk-addons-table__info\">\r\n                                                                                                <div className=\"row g-0\">\r\n                                                                                                    <div className=\"col-8 pl-3 border-right\">\r\n                                                                                                        <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                                                                                            {_t(t(\"name\"))}\r\n                                                                                                        </span>\r\n                                                                                                    </div>\r\n                                                                                                    <div className=\"col-4 text-center\">\r\n                                                                                                        <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                                                                                            {_t(t(\"price\"))}\r\n                                                                                                        </span>\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                            <div className=\"fk-addons-table__body\">\r\n                                                                                                {foodItem.variations.map(\r\n                                                                                                    (variationItem) => {\r\n                                                                                                        return (\r\n                                                                                                            <div className=\"fk-addons-table__body-row\">\r\n                                                                                                                <div className=\"row g-0\">\r\n                                                                                                                    <div className=\"col-8 border-right t-pl-10 t-pr-10\">\r\n                                                                                                                        <label className=\"mx-checkbox\">\r\n                                                                                                                            <input\r\n                                                                                                                                type=\"radio\"\r\n                                                                                                                                className=\"mx-checkbox__input mx-checkbox__input-solid mx-checkbox__input-solid--danger mx-checkbox__input-sm\"\r\n                                                                                                                                name=\"variation\"\r\n                                                                                                                                onChange={() => {\r\n                                                                                                                                    handleOrderItemVariation(\r\n                                                                                                                                        variationItem\r\n                                                                                                                                    );\r\n                                                                                                                                }}\r\n                                                                                                                                checked={checkChecked(\r\n                                                                                                                                    variationItem\r\n                                                                                                                                )}\r\n                                                                                                                            />\r\n                                                                                                                            <span className=\"mx-checkbox__text text-capitalize t-text-heading t-ml-8 fk-addons-table__body-text\">\r\n                                                                                                                                {\r\n                                                                                                                                    variationItem.variation_name\r\n                                                                                                                                }\r\n                                                                                                                            </span>\r\n                                                                                                                        </label>\r\n                                                                                                                    </div>\r\n                                                                                                                    <div className=\"col-4 text-center\">\r\n                                                                                                                        <span className=\"fk-addons-table__body-text sm-text\">\r\n                                                                                                                            {currencySymbolLeft()}\r\n                                                                                                                            {formatPrice(\r\n                                                                                                                                variationItem.food_with_variation_price\r\n                                                                                                                            )}\r\n                                                                                                                            {currencySymbolRight()}\r\n                                                                                                                        </span>\r\n                                                                                                                    </div>\r\n                                                                                                                </div>\r\n                                                                                                            </div>\r\n                                                                                                        );\r\n                                                                                                    }\r\n                                                                                                )}\r\n                                                                                            </div>\r\n                                                                                        </>\r\n                                                                                    ) : (\r\n                                                                                        <div className=\"fk-addons-table__info py-4\">\r\n                                                                                            <div className=\"row g-0\">\r\n                                                                                                <div className=\"col-12 text-center border-right\">\r\n                                                                                                    <span className=\"fk-addons-table__info-text text-capitalize text-primary\">\r\n                                                                                                        {_t(t(\"No variations\"))}\r\n                                                                                                    </span>\r\n                                                                                                </div>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    )}\r\n                                                                                </div>\r\n                                                                                {/* Variations end*/}\r\n\r\n                                                                                <div\r\n                                                                                    className={\r\n                                                                                        foodItem.properties ? \"\" : \"d-none\"\r\n                                                                                    }\r\n                                                                                >\r\n                                                                                    {/* Property group and items */}\r\n                                                                                    {foodItem.properties && (\r\n                                                                                        <>\r\n                                                                                            {foodItem.properties.length >\r\n                                                                                                0 ? (\r\n                                                                                                foodItem.properties.map(\r\n                                                                                                    (propertyItem) => {\r\n                                                                                                        //property group\r\n                                                                                                        let selectedGroup = null;\r\n                                                                                                        //property group\r\n                                                                                                        if (\r\n                                                                                                            propertyItem.length > 0\r\n                                                                                                        ) {\r\n                                                                                                            selectedGroup =\r\n                                                                                                                propertyGroupForSearch &&\r\n                                                                                                                propertyGroupForSearch.find(\r\n                                                                                                                    (\r\n                                                                                                                        singlePropertyGroup\r\n                                                                                                                    ) => {\r\n                                                                                                                        return (\r\n                                                                                                                            singlePropertyGroup.id ===\r\n                                                                                                                            parseInt(\r\n                                                                                                                                propertyItem[0]\r\n                                                                                                                                    .property_group_id\r\n                                                                                                                            )\r\n                                                                                                                        );\r\n                                                                                                                    }\r\n                                                                                                                );\r\n                                                                                                        }\r\n                                                                                                        return (\r\n                                                                                                            <div className=\"fk-addons-table\">\r\n                                                                                                                <div className=\"fk-addons-table__head text-center\">\r\n                                                                                                                    {selectedGroup &&\r\n                                                                                                                        selectedGroup.name}\r\n                                                                                                                </div>\r\n                                                                                                                <div className=\"fk-addons-table__info\">\r\n                                                                                                                    <div className=\"row g-0\">\r\n                                                                                                                        <div className=\"col-5 pl-3 border-right\">\r\n                                                                                                                            <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                                                                                                                {_t(t(\"name\"))}\r\n                                                                                                                            </span>\r\n                                                                                                                        </div>\r\n                                                                                                                        <div className=\"col-3 text-center border-right\">\r\n                                                                                                                            <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                                                                                                                {_t(t(\"QTY\"))}\r\n                                                                                                                            </span>\r\n                                                                                                                        </div>\r\n                                                                                                                        <div className=\"col-4 text-center\">\r\n                                                                                                                            <span className=\"fk-addons-table__info-text text-capitalize\">\r\n                                                                                                                                {_t(\r\n                                                                                                                                    t(\r\n                                                                                                                                        \"Unit price\"\r\n                                                                                                                                    )\r\n                                                                                                                                )}\r\n                                                                                                                            </span>\r\n                                                                                                                        </div>\r\n                                                                                                                    </div>\r\n                                                                                                                </div>\r\n                                                                                                                <div className=\"fk-addons-table__body\">\r\n                                                                                                                    {propertyItem.map(\r\n                                                                                                                        (eachItem) => {\r\n                                                                                                                            return (\r\n                                                                                                                                <div className=\"fk-addons-table__body-row\">\r\n                                                                                                                                    <div className=\"row g-0\">\r\n                                                                                                                                        <div className=\"col-5 border-right t-pl-10 t-pr-10\">\r\n                                                                                                                                            <label className=\"mx-checkbox\">\r\n                                                                                                                                                <input\r\n                                                                                                                                                    type=\"checkbox\"\r\n                                                                                                                                                    className=\"mx-checkbox__input mx-checkbox__input-solid mx-checkbox__input-solid--danger mx-checkbox__input-sm\"\r\n                                                                                                                                                    onChange={() => {\r\n                                                                                                                                                        newOrder &&\r\n                                                                                                                                                            newOrder.map(\r\n                                                                                                                                                                (\r\n                                                                                                                                                                    newOrderItem,\r\n                                                                                                                                                                    index\r\n                                                                                                                                                                ) => {\r\n                                                                                                                                                                    if (\r\n                                                                                                                                                                        index ===\r\n                                                                                                                                                                        activeItemInOrder\r\n                                                                                                                                                                    ) {\r\n                                                                                                                                                                        if (\r\n                                                                                                                                                                            newOrderItem.properties\r\n                                                                                                                                                                        ) {\r\n                                                                                                                                                                            let theItem =\r\n                                                                                                                                                                                newOrderItem.properties.find(\r\n                                                                                                                                                                                    (\r\n                                                                                                                                                                                        eachPropertyItem\r\n                                                                                                                                                                                    ) => {\r\n                                                                                                                                                                                        return (\r\n                                                                                                                                                                                            eachPropertyItem\r\n                                                                                                                                                                                                .item\r\n                                                                                                                                                                                                .id ===\r\n                                                                                                                                                                                            eachItem.id\r\n                                                                                                                                                                                        );\r\n                                                                                                                                                                                    }\r\n                                                                                                                                                                                );\r\n\r\n                                                                                                                                                                            if (\r\n                                                                                                                                                                                theItem ===\r\n                                                                                                                                                                                undefined\r\n                                                                                                                                                                            ) {\r\n                                                                                                                                                                                handleAddProperties(\r\n                                                                                                                                                                                    eachItem\r\n                                                                                                                                                                                );\r\n                                                                                                                                                                            } else {\r\n                                                                                                                                                                                handleRemoveProperties(\r\n                                                                                                                                                                                    eachItem\r\n                                                                                                                                                                                );\r\n                                                                                                                                                                            }\r\n                                                                                                                                                                        } else {\r\n                                                                                                                                                                            handleAddProperties(\r\n                                                                                                                                                                                eachItem\r\n                                                                                                                                                                            );\r\n                                                                                                                                                                        }\r\n                                                                                                                                                                    }\r\n                                                                                                                                                                }\r\n                                                                                                                                                            );\r\n                                                                                                                                                    }}\r\n                                                                                                                                                    checked={checkCheckedProperties(\r\n                                                                                                                                                        eachItem\r\n                                                                                                                                                    )}\r\n                                                                                                                                                />\r\n                                                                                                                                                <span className=\"mx-checkbox__text text-capitalize t-text-heading t-ml-8 fk-addons-table__body-text\">\r\n                                                                                                                                                    {\r\n                                                                                                                                                        eachItem.name\r\n                                                                                                                                                    }\r\n                                                                                                                                                </span>\r\n                                                                                                                                            </label>\r\n                                                                                                                                        </div>\r\n                                                                                                                                        <div className=\"col-3 text-center border-right\">\r\n                                                                                                                                            <div className=\"fk-qty justify-content-center t-pt-10 t-pb-10\">\r\n                                                                                                                                                {parseInt(\r\n                                                                                                                                                    eachItem.allow_multi_quantity\r\n                                                                                                                                                ) ===\r\n                                                                                                                                                    1 && (\r\n                                                                                                                                                        <span\r\n                                                                                                                                                            className=\"fk-qty__icon fk-qty__deduct\"\r\n                                                                                                                                                            onClick={() => {\r\n                                                                                                                                                                handlePropertyQty(\r\n                                                                                                                                                                    eachItem,\r\n                                                                                                                                                                    \"-\"\r\n                                                                                                                                                                );\r\n                                                                                                                                                            }}\r\n                                                                                                                                                        >\r\n                                                                                                                                                            <i className=\"las la-minus\"></i>\r\n                                                                                                                                                        </span>\r\n                                                                                                                                                    )}\r\n                                                                                                                                                {parseInt(\r\n                                                                                                                                                    eachItem.allow_multi_quantity\r\n                                                                                                                                                ) ===\r\n                                                                                                                                                    1 ? (\r\n                                                                                                                                                    <input\r\n                                                                                                                                                        type=\"text\"\r\n                                                                                                                                                        value={checkCheckedPropertyQuantity(\r\n                                                                                                                                                            eachItem\r\n                                                                                                                                                        )}\r\n                                                                                                                                                        className=\"fk-qty__input t-bg-clear\"\r\n                                                                                                                                                        readOnly\r\n                                                                                                                                                    />\r\n                                                                                                                                                ) : (\r\n                                                                                                                                                    \"-\"\r\n                                                                                                                                                )}\r\n                                                                                                                                                {parseInt(\r\n                                                                                                                                                    eachItem.allow_multi_quantity\r\n                                                                                                                                                ) ===\r\n                                                                                                                                                    1 && (\r\n                                                                                                                                                        <span\r\n                                                                                                                                                            className=\"fk-qty__icon fk-qty__add\"\r\n                                                                                                                                                            onClick={() => {\r\n                                                                                                                                                                handlePropertyQty(\r\n                                                                                                                                                                    eachItem,\r\n                                                                                                                                                                    \"+\"\r\n                                                                                                                                                                );\r\n                                                                                                                                                            }}\r\n                                                                                                                                                        >\r\n                                                                                                                                                            <i className=\"las la-plus\"></i>\r\n                                                                                                                                                        </span>\r\n                                                                                                                                                    )}\r\n                                                                                                                                            </div>\r\n                                                                                                                                        </div>\r\n                                                                                                                                        <div className=\"col-4 text-center\">\r\n                                                                                                                                            <span className=\"fk-addons-table__body-text sm-text\">\r\n                                                                                                                                                {currencySymbolLeft()}\r\n                                                                                                                                                {formatPrice(\r\n                                                                                                                                                    eachItem.extra_price\r\n                                                                                                                                                )}\r\n                                                                                                                                                {currencySymbolRight()}\r\n                                                                                                                                            </span>\r\n                                                                                                                                        </div>\r\n                                                                                                                                    </div>\r\n                                                                                                                                </div>\r\n                                                                                                                            );\r\n                                                                                                                        }\r\n                                                                                                                    )}\r\n                                                                                                                </div>\r\n                                                                                                            </div>\r\n                                                                                                        );\r\n                                                                                                    }\r\n                                                                                                )\r\n                                                                                            ) : (\r\n                                                                                                <div className=\"fk-addons-table__info py-4\">\r\n                                                                                                    <div className=\"row g-0\">\r\n                                                                                                        <div className=\"col-12 text-center border-right\">\r\n                                                                                                            <span className=\"fk-addons-table__info-text text-capitalize text-primary\">\r\n                                                                                                                {_t(t(\"No properties\"))}\r\n                                                                                                            </span>\r\n                                                                                                        </div>\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                            )}\r\n                                                                                        </>\r\n                                                                                    )}\r\n                                                                                </div>\r\n                                                                                {/* Property group and items */}\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"col-xl-6 col-xxl-7 order-xl-1\">\r\n                                                                <div className=\"fk-dish--scroll\" data-simplebar>\r\n                                                                    <div className=\"list-group fk-dish row gx-2\">\r\n                                                                        {foodItem.items &&\r\n                                                                            foodItem.items.map(\r\n                                                                                (tempFoodItem, tempFoodItemIndex) => {\r\n                                                                                    return (\r\n                                                                                        <div\r\n                                                                                            onClick={() => {\r\n                                                                                                if (showManageStock) {\r\n                                                                                                    if (\r\n                                                                                                        handleGetStock(\r\n                                                                                                            tempFoodItem.id\r\n                                                                                                        ) === 0\r\n                                                                                                    ) {\r\n                                                                                                        toast.error(\r\n                                                                                                            `${_t(t(\"Out of stock\"))}`,\r\n                                                                                                            {\r\n                                                                                                                position: \"bottom-center\",\r\n                                                                                                                closeButton: false,\r\n                                                                                                                autoClose: 10000,\r\n                                                                                                                hideProgressBar: false,\r\n                                                                                                                closeOnClick: true,\r\n                                                                                                                pauseOnHover: true,\r\n                                                                                                                className:\r\n                                                                                                                    \"text-center toast-notification\",\r\n                                                                                                            }\r\n                                                                                                        );\r\n                                                                                                    } else {\r\n                                                                                                        // set variations, properties and selected items here\r\n                                                                                                        setFoodItem({\r\n                                                                                                            ...foodItem,\r\n                                                                                                            selectedItem: tempFoodItem,\r\n                                                                                                            variations:\r\n                                                                                                                tempFoodItem &&\r\n                                                                                                                    parseInt(\r\n                                                                                                                        tempFoodItem.has_variation\r\n                                                                                                                    ) === 1\r\n                                                                                                                    ? tempFoodItem.variations\r\n                                                                                                                    : null,\r\n                                                                                                            properties:\r\n                                                                                                                tempFoodItem &&\r\n                                                                                                                    parseInt(\r\n                                                                                                                        tempFoodItem.has_property\r\n                                                                                                                    ) === 1\r\n                                                                                                                    ? tempFoodItem.properties\r\n                                                                                                                    : null,\r\n                                                                                                        });\r\n                                                                                                        handleOrderItem(tempFoodItem);\r\n                                                                                                    }\r\n                                                                                                } else {\r\n\r\n                                                                                                    // set variations, properties and selected items here\r\n                                                                                                    setFoodItem({\r\n                                                                                                        ...foodItem,\r\n                                                                                                        selectedItem: tempFoodItem,\r\n                                                                                                        variations:\r\n                                                                                                            tempFoodItem &&\r\n                                                                                                                parseInt(\r\n                                                                                                                    tempFoodItem.has_variation\r\n                                                                                                                ) === 1\r\n                                                                                                                ? tempFoodItem.variations\r\n                                                                                                                : null,\r\n                                                                                                        properties:\r\n                                                                                                            tempFoodItem &&\r\n                                                                                                                parseInt(\r\n                                                                                                                    tempFoodItem.has_property\r\n                                                                                                                ) === 1\r\n                                                                                                                ? tempFoodItem.properties\r\n                                                                                                                : null,\r\n                                                                                                    });\r\n                                                                                                    handleOrderItem(tempFoodItem);\r\n                                                                                                }\r\n\r\n                                                                                            }}\r\n                                                                                            className={`fk-dish__link t-mb-10 col-md-6 col-lg-4 col-xl-6 col-xxl-4 t-link border-0 pointer-cursor ${foodItem.selectedItem &&\r\n                                                                                                foodItem.selectedItem.id ===\r\n                                                                                                tempFoodItem.id &&\r\n                                                                                                \"active\"\r\n                                                                                                }`}\r\n                                                                                        >\r\n                                                                                            <div className=\"fk-dish-card w-100\">\r\n                                                                                                <div className=\"fk-dish-card__img w-100\">\r\n                                                                                                    <img\r\n                                                                                                        src={tempFoodItem.image}\r\n                                                                                                        alt=\"\"\r\n                                                                                                        className=\"img-fluid m-auto w-100\"\r\n                                                                                                    />\r\n                                                                                                </div>\r\n                                                                                                <span className=\"fk-dish-card__title text-center text-uppercase\">\r\n                                                                                                    {tempFoodItem.name} <br />\r\n                                                                                                    {/* check is manage menu is active or not  */}\r\n                                                                                                    {showManageStock ? <>\r\n                                                                                                        {_t(t(\"In Stock\"))}:{\" \"}\r\n                                                                                                        {handleGetStock(\r\n                                                                                                            tempFoodItem.id\r\n                                                                                                        )}\r\n                                                                                                    </> : null}\r\n                                                                                                </span>\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    );\r\n                                                                                }\r\n                                                                            )}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* Dish Addons  End */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {/* Left Side End */}\r\n\r\n                                {/* Right Side  */}\r\n                                <div className=\"col-md-5\">\r\n                                    <div className=\"row gx-2\">\r\n                                        <div className=\"col-md-4 col-xl-3\">\r\n                                            <div className=\"fk-right-nav\">\r\n                                                <div className=\"row flex-column justify-content-between h-100\">\r\n                                                    <div className=\"col-12 flex-grow-1\">\r\n                                                        <div\r\n                                                            className=\"fk-right-nav__scroll\"\r\n                                                            data-simplebar\r\n                                                        >\r\n                                                            <ul className=\"t-list addons-list\">\r\n                                                                {authUserInfo.details &&\r\n                                                                    authUserInfo.details.user_type !==\r\n                                                                    \"staff\" && (\r\n                                                                        <li className=\"addons-list__item mt-1 mx-1\">\r\n                                                                            <Select\r\n                                                                                options={\r\n                                                                                    branchForSearch && branchForSearch\r\n                                                                                }\r\n                                                                                components={makeAnimated()}\r\n                                                                                getOptionLabel={(option) => option.name}\r\n                                                                                getOptionValue={(option) => option.name}\r\n                                                                                classNamePrefix=\"select\"\r\n                                                                                className=\"xsm-text\"\r\n                                                                                onChange={handleSetBranch}\r\n                                                                                maxMenuHeight=\"200px\"\r\n                                                                                placeholder={_t(t(\"Branch\")) + \"..\"}\r\n                                                                            />\r\n                                                                        </li>\r\n                                                                    )}\r\n                                                                {!loading && (\r\n                                                                    <>\r\n                                                                        {orderDetails.branch !== null && (\r\n                                                                            <>\r\n                                                                                <li\r\n                                                                                    className={`addons-list__item mx-1 ${authUserInfo.details &&\r\n                                                                                        authUserInfo.details.user_type ===\r\n                                                                                        \"staff\" &&\r\n                                                                                        \"mt-1\"\r\n                                                                                        }`}\r\n                                                                                >\r\n                                                                                    <Select\r\n                                                                                        options={\r\n                                                                                            orderDetailUsers.theCustomers !==\r\n                                                                                            null &&\r\n                                                                                            orderDetailUsers.theCustomers\r\n                                                                                        }\r\n                                                                                        components={makeAnimated()}\r\n                                                                                        getOptionLabel={(option) =>\r\n                                                                                            option.name +\r\n                                                                                            \" (\" +\r\n                                                                                            option.phn_no +\r\n                                                                                            \")\"\r\n                                                                                        }\r\n                                                                                        getOptionValue={(option) =>\r\n                                                                                            option.name\r\n                                                                                        }\r\n                                                                                        classNamePrefix=\"select\"\r\n                                                                                        className=\"xsm-text\"\r\n                                                                                        onChange={handleSetCustomer}\r\n                                                                                        maxMenuHeight=\"200px\"\r\n                                                                                        placeholder={\r\n                                                                                            _t(t(\"Customer\")) + \"..\"\r\n                                                                                        }\r\n                                                                                    />\r\n                                                                                </li>\r\n                                                                                <li className=\"addons-list__item mx-1 border border-2 rounded-lg\">\r\n                                                                                    <div className=\"btn-group w-100\">\r\n                                                                                        <button\r\n                                                                                            type=\"button\"\r\n                                                                                            className=\"fk-right-nav__guest-btn btn w-100 t-bg-white dropdown-toggle new-customer-pos xsm-text pl-2\"\r\n                                                                                            data-toggle=\"dropdown\"\r\n                                                                                            aria-expanded=\"false\"\r\n                                                                                        >\r\n                                                                                            + {_t(t(\"Customer\"))}?\r\n                                                                                        </button>\r\n                                                                                        <ul className=\"dropdown-menu w-100 border-0 pt-4 change-background\">\r\n                                                                                            <li>\r\n                                                                                                <input\r\n                                                                                                    type=\"text\"\r\n                                                                                                    name=\"name\"\r\n                                                                                                    className=\"form-control font-10px rounded-lg\"\r\n                                                                                                    placeholder=\"Name\"\r\n                                                                                                    autoComplete=\"off\"\r\n                                                                                                    value={\r\n                                                                                                        orderDetails.newCustomerInfo\r\n                                                                                                            .name\r\n                                                                                                    }\r\n                                                                                                    onChange={handleNewCustomer}\r\n                                                                                                />\r\n                                                                                            </li>\r\n                                                                                            <li className=\"pb-2\">\r\n                                                                                                <input\r\n                                                                                                    type=\"text\"\r\n                                                                                                    name=\"number\"\r\n                                                                                                    className=\"form-control font-10px mt-2 rounded-lg\"\r\n                                                                                                    autoComplete=\"off\"\r\n                                                                                                    placeholder=\"Number\"\r\n                                                                                                    value={\r\n                                                                                                        orderDetails.newCustomerInfo\r\n                                                                                                            .number\r\n                                                                                                    }\r\n                                                                                                    onChange={handleNewCustomer}\r\n                                                                                                />\r\n                                                                                            </li>\r\n                                                                                            <li className=\"pb-1 text-right\">\r\n                                                                                                <button\r\n                                                                                                    className=\"btn t-bg-white text-dark xsm-text text-uppercase btn-sm py-0 px-2 mr-1\"\r\n                                                                                                    onClick={() => {\r\n                                                                                                        setOrderDetails({\r\n                                                                                                            ...orderDetails,\r\n                                                                                                            newCustomer: false,\r\n                                                                                                            newCustomerInfo: {\r\n                                                                                                                name: \"\",\r\n                                                                                                                number: \"\",\r\n                                                                                                            },\r\n                                                                                                        });\r\n                                                                                                    }}\r\n                                                                                                >\r\n                                                                                                    {_t(t(\"Cancel\"))}\r\n                                                                                                </button>\r\n                                                                                            </li>\r\n                                                                                        </ul>\r\n                                                                                    </div>\r\n                                                                                </li>\r\n                                                                                {getSystemSettings(\r\n                                                                                    generalSettings,\r\n                                                                                    \"pos_screen\"\r\n                                                                                ) === \"0\" && (\r\n                                                                                        <>\r\n                                                                                            <li className=\"addons-list__item mx-1\">\r\n                                                                                                <Select\r\n                                                                                                    options={\r\n                                                                                                        deptTagForSearch &&\r\n                                                                                                        deptTagForSearch\r\n                                                                                                    }\r\n                                                                                                    components={makeAnimated()}\r\n                                                                                                    getOptionLabel={(option) =>\r\n                                                                                                        option.name\r\n                                                                                                    }\r\n                                                                                                    getOptionValue={(option) =>\r\n                                                                                                        option.name\r\n                                                                                                    }\r\n                                                                                                    classNamePrefix=\"select\"\r\n                                                                                                    className=\"xsm-text\"\r\n                                                                                                    onChange={handleSetDeptTag}\r\n                                                                                                    maxMenuHeight=\"200px\"\r\n                                                                                                    placeholder={\r\n                                                                                                        _t(t(\"Dept tag\")) + \"..\"\r\n                                                                                                    }\r\n                                                                                                />\r\n                                                                                            </li>\r\n\r\n                                                                                            <li\r\n                                                                                                className={`addons-list__item mx-1 payment-type-parent ${orderDetails.payment_type !==\r\n                                                                                                    null && \"mb-1\"\r\n                                                                                                    }`}\r\n                                                                                            >\r\n                                                                                                <Select\r\n                                                                                                    options={\r\n                                                                                                        paymentTypeForSearch &&\r\n                                                                                                        paymentTypeForSearch\r\n                                                                                                    }\r\n                                                                                                    components={makeAnimated()}\r\n                                                                                                    getOptionLabel={(option) =>\r\n                                                                                                        option.name\r\n                                                                                                    }\r\n                                                                                                    getOptionValue={(option) =>\r\n                                                                                                        option.name\r\n                                                                                                    }\r\n                                                                                                    classNamePrefix=\"select\"\r\n                                                                                                    className=\"xsm-text\"\r\n                                                                                                    onChange={handleSetpaymentType}\r\n                                                                                                    maxMenuHeight=\"200px\"\r\n                                                                                                    isMulti\r\n                                                                                                    backspaceRemovesValue={false}\r\n                                                                                                    clearIndicator={null}\r\n                                                                                                    placeholder={\r\n                                                                                                        _t(t(\"Payments\")) + \"..\"\r\n                                                                                                    }\r\n                                                                                                />\r\n                                                                                            </li>\r\n                                                                                            {orderDetails.payment_type !==\r\n                                                                                                null && (\r\n                                                                                                    <div className=\"border mt-0 mb-2 change-background mx-1 rounded-lg\">\r\n                                                                                                        <div className=\"xsm-text text-center text-white pt-1\">\r\n                                                                                                            {_t(t(\"Amount\"))}\r\n                                                                                                        </div>\r\n                                                                                                        {orderDetails.payment_type.map(\r\n                                                                                                            (\r\n                                                                                                                eachPaymentType,\r\n                                                                                                                paymentTypeIndex\r\n                                                                                                            ) => {\r\n                                                                                                                return (\r\n                                                                                                                    <li className=\"addons-list__item mx-1 mb-1\">\r\n                                                                                                                        <input\r\n                                                                                                                            type=\"number\"\r\n                                                                                                                            min=\"0\"\r\n                                                                                                                            step=\"0.01\"\r\n                                                                                                                            name={\r\n                                                                                                                                eachPaymentType.id\r\n                                                                                                                            }\r\n                                                                                                                            autoComplete=\"off\"\r\n                                                                                                                            className=\"form-control xsm-text pl-2\"\r\n                                                                                                                            onChange={\r\n                                                                                                                                handlePaymentTypeAmount\r\n                                                                                                                            }\r\n                                                                                                                            placeholder={\r\n                                                                                                                                eachPaymentType.name\r\n                                                                                                                            }\r\n                                                                                                                            value={\r\n                                                                                                                                orderDetails.payment_amount &&\r\n                                                                                                                                orderDetails\r\n                                                                                                                                    .payment_amount[\r\n                                                                                                                                eachPaymentType.id\r\n                                                                                                                                ]\r\n                                                                                                                            }\r\n                                                                                                                        />\r\n                                                                                                                    </li>\r\n                                                                                                                );\r\n                                                                                                            }\r\n                                                                                                        )}\r\n                                                                                                    </div>\r\n                                                                                                )}\r\n                                                                                        </>\r\n                                                                                    )}\r\n\r\n                                                                                {getSystemSettings(\r\n                                                                                    generalSettings,\r\n                                                                                    \"table_waiter\"\r\n                                                                                ) === \"1\" ? (\r\n                                                                                    <>\r\n                                                                                        <li className=\"addons-list__item mx-1\">\r\n                                                                                            <Select\r\n                                                                                                options={\r\n                                                                                                    orderDetailUsers.theTables !==\r\n                                                                                                    null &&\r\n                                                                                                    orderDetailUsers.theTables\r\n                                                                                                }\r\n                                                                                                components={makeAnimated()}\r\n                                                                                                getOptionLabel={(option) =>\r\n                                                                                                    option.name\r\n                                                                                                }\r\n                                                                                                getOptionValue={(option) =>\r\n                                                                                                    option.name\r\n                                                                                                }\r\n                                                                                                classNamePrefix=\"select\"\r\n                                                                                                className=\"xsm-text\"\r\n                                                                                                onChange={handleSetTable}\r\n                                                                                                maxMenuHeight=\"200px\"\r\n                                                                                                placeholder={\r\n                                                                                                    _t(t(\"Table\")) + \"..\"\r\n                                                                                                }\r\n                                                                                            />\r\n                                                                                        </li>\r\n                                                                                        <li className=\"addons-list__item mx-1\">\r\n                                                                                            <Select\r\n                                                                                                options={\r\n                                                                                                    orderDetailUsers.theWaiters !==\r\n                                                                                                    null &&\r\n                                                                                                    orderDetailUsers.theWaiters\r\n                                                                                                }\r\n                                                                                                components={makeAnimated()}\r\n                                                                                                getOptionLabel={(option) =>\r\n                                                                                                    option.name\r\n                                                                                                }\r\n                                                                                                getOptionValue={(option) =>\r\n                                                                                                    option.name\r\n                                                                                                }\r\n                                                                                                classNamePrefix=\"select\"\r\n                                                                                                className=\"xsm-text\"\r\n                                                                                                onChange={handleSetWaiter}\r\n                                                                                                maxMenuHeight=\"200px\"\r\n                                                                                                placeholder={\r\n                                                                                                    _t(t(\"Waiter\")) + \"..\"\r\n                                                                                                }\r\n                                                                                            />\r\n                                                                                        </li>\r\n                                                                                    </>\r\n                                                                                ) : (\r\n                                                                                    \"\"\r\n                                                                                )}\r\n\r\n                                                                                <li\r\n                                                                                    className=\"addons-list__item mx-1\"\r\n                                                                                    style={{ paddingBottom: \"100px\" }}\r\n                                                                                >\r\n                                                                                    <input\r\n                                                                                        type=\"number\"\r\n                                                                                        className=\"form-control xsm-text py-2 pl-2\"\r\n                                                                                        min=\"1\"\r\n                                                                                        onChange={handleTotalGuest}\r\n                                                                                        placeholder={\r\n                                                                                            _t(t(\"Total guest\")) + \"..\"\r\n                                                                                        }\r\n                                                                                    />\r\n                                                                                </li>\r\n                                                                            </>\r\n                                                                        )}\r\n                                                                    </>\r\n                                                                )}\r\n                                                            </ul>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-12\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-12 t-mb-10\">\r\n                                                                <button\r\n                                                                    onClick={() => {\r\n                                                                        if (newOrder) {\r\n                                                                            handleOnlyPrint();\r\n                                                                        } else {\r\n                                                                            toast.error(\r\n                                                                                `${_t(\r\n                                                                                    t(\r\n                                                                                        \"Please add items in order list to print bill\"\r\n                                                                                    )\r\n                                                                                )}`,\r\n                                                                                {\r\n                                                                                    position: \"bottom-center\",\r\n                                                                                    closeButton: false,\r\n                                                                                    autoClose: 10000,\r\n                                                                                    hideProgressBar: false,\r\n                                                                                    closeOnClick: true,\r\n                                                                                    pauseOnHover: true,\r\n                                                                                    className:\r\n                                                                                        \"text-center toast-notification\",\r\n                                                                                }\r\n                                                                            );\r\n                                                                        }\r\n                                                                    }}\r\n                                                                    className=\"w-100 t-heading-font btn btn-outline-danger font-weight-bold text-uppercase sm-text\"\r\n                                                                >\r\n                                                                    {_t(t(\"print bill\"))}\r\n                                                                </button>\r\n                                                            </div>\r\n                                                            <div className=\"col-12\">\r\n                                                                <button\r\n                                                                    className=\"w-100 t-heading-font btn btn-primary font-weight-bold text-uppercase sm-text\"\r\n                                                                    onClick={handleCancelConfirmation}\r\n                                                                >\r\n                                                                    {_t(t(\"cancel\"))}\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-8 col-xl-9\">\r\n                                            <div className=\"fk-right-nav p-2 p-xl-3 t-bg-white\">\r\n                                                {/* Disply Only Small Screen   */}\r\n                                                <div className=\"h-100 w-100 d-none\" data-simplebar>\r\n                                                    <div className=\"fk-receipt-content\">\r\n                                                        <div className=\"fk-receipt-body t-mt-10\">\r\n                                                            <div className=\"row g-0\">\r\n                                                                <div className=\"col-12\">\r\n                                                                    <span className=\"sm-text font-weight-bold text-uppercase font-italic\">\r\n                                                                        {_t(t(\"Order token\"))}:{\" \"}\r\n                                                                        {newOrder ? (\r\n                                                                            <>\r\n                                                                                #{orderDetails.token.id} -{\" \"}\r\n                                                                                <Moment format=\"LT\">\r\n                                                                                    {orderDetails.token.time}\r\n                                                                                </Moment>\r\n                                                                            </>\r\n                                                                        ) : (\r\n                                                                            \"\"\r\n                                                                        )}\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"fk-sm-card__container t-mt-30\">\r\n                                                                <div className=\"fk-sm-card__content\">\r\n                                                                    <h6 className=\"text-capitalize fk-sm-card__title t-mb-5\">\r\n                                                                        food items\r\n                                                                    </h6>\r\n                                                                    <p className=\"mb-0 xsm-text t-text-heading fk-sm-card__description text-capitalize\">\r\n                                                                        properties & bill\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                                <span className=\"text-capitalize xxsm-text fk-badge fk-badge--dark\">\r\n                                                                    total\r\n                                                                </span>\r\n                                                            </div>\r\n                                                            <hr />\r\n                                                            <ul className=\"t-list addons-list\">\r\n                                                                <li className=\"addons-list__item active\">\r\n                                                                    <div className=\"d-flex align-items-center justify-content-between\">\r\n                                                                        <div className=\"col\">\r\n                                                                            <span className=\" sm-text text-capitalize\">\r\n                                                                                chicken burger\r\n                                                                            </span>\r\n                                                                            <span className=\" xsm-text text-capitalize d-block\">\r\n                                                                                large\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                        <div className=\"col\">\r\n                                                                            <div className=\"fk-qty flex-grow-1 justify-content-end\">\r\n                                                                                <span className=\"fk-qty__icon fk-qty__deduct\">\r\n                                                                                    <i className=\"las la-minus\"></i>\r\n                                                                                </span>\r\n                                                                                <input\r\n                                                                                    type=\"text\"\r\n                                                                                    value=\"0\"\r\n                                                                                    className=\"fk-qty__input\"\r\n                                                                                />\r\n                                                                                <span className=\"fk-qty__icon fk-qty__add\">\r\n                                                                                    <i className=\"las la-plus\"></i>\r\n                                                                                </span>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"col text-right\">\r\n                                                                            <span className=\" text-uppercase sm-text flex-grow-1\">\r\n                                                                                +tk 100\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </li>\r\n                                                                <li className=\"addons-list__item\">\r\n                                                                    <div className=\"d-flex align-items-center justify-content-between\">\r\n                                                                        <div className=\"col\">\r\n                                                                            <span className=\"t-text-heading sm-text text-capitalize\">\r\n                                                                                beef burger\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                        <div className=\"col\">\r\n                                                                            <div className=\"fk-qty flex-grow-1 justify-content-end\">\r\n                                                                                <span className=\"fk-qty__icon fk-qty__deduct\">\r\n                                                                                    <i className=\"las la-minus\"></i>\r\n                                                                                </span>\r\n                                                                                <input\r\n                                                                                    type=\"text\"\r\n                                                                                    value=\"0\"\r\n                                                                                    className=\"fk-qty__input\"\r\n                                                                                />\r\n                                                                                <span className=\"fk-qty__icon fk-qty__add\">\r\n                                                                                    <i className=\"las la-plus\"></i>\r\n                                                                                </span>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"col text-right\">\r\n                                                                            <span className=\"t-text-heading text-uppercase sm-text flex-grow-1\">\r\n                                                                                +tk 230\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </li>\r\n                                                            </ul>\r\n                                                            <hr />\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-12\">\r\n                                                                    <div className=\"row\">\r\n                                                                        <div className=\"col\">\r\n                                                                            <span className=\"text-capitalize sm-text\">\r\n                                                                                sub total\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                        <div className=\"col text-center\">:</div>\r\n                                                                        <div className=\"col text-right\">\r\n                                                                            <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                                                                                {newOrder ? (\r\n                                                                                    <span className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                                        {currencySymbolLeft()}\r\n                                                                                        {formatPrice(theSubTotal)}\r\n                                                                                        {currencySymbolRight()}\r\n                                                                                    </span>\r\n                                                                                ) : (\r\n                                                                                    <span className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                                        {currencySymbolLeft()}\r\n                                                                                        {formatPrice(0)}\r\n                                                                                        {currencySymbolRight()}\r\n                                                                                    </span>\r\n                                                                                )}\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"col-12\">\r\n                                                                    <div className=\"row\">\r\n                                                                        <div className=\"col\">\r\n                                                                            <span className=\"sm-text\">\r\n                                                                                {getSystemSettings(\r\n                                                                                    generalSettings,\r\n                                                                                    \"vat_system\"\r\n                                                                                ) === \"igst\"\r\n                                                                                    ? `vat(${newSettings !== null &&\r\n                                                                                    newSettings.vat\r\n                                                                                    })`\r\n                                                                                    : getSystemSettings(\r\n                                                                                        generalSettings,\r\n                                                                                        \"vat_system\"\r\n                                                                                    ) === \"cgst\"\r\n                                                                                        ? \"cgst+sgst\" +\r\n                                                                                        \"(\" +\r\n                                                                                        getSystemSettings(\r\n                                                                                            generalSettings,\r\n                                                                                            \"cgst\"\r\n                                                                                        ) +\r\n                                                                                        \"+\" +\r\n                                                                                        getSystemSettings(\r\n                                                                                            generalSettings,\r\n                                                                                            \"sgst\"\r\n                                                                                        ) +\r\n                                                                                        \")\" :\r\n                                                                                        `tax(${newSettings !== null &&\r\n                                                                                        newSettings.tax\r\n                                                                                        })`}\r\n                                                                                %:\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                        <div className=\"col text-center\">:</div>\r\n                                                                        <div className=\"col text-right\">\r\n                                                                            <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                                                                                {currencySymbolLeft()}\r\n                                                                                {formatPrice(theVat)}\r\n                                                                                {currencySymbolRight()}\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"col-12\">\r\n                                                                    <div className=\"row\">\r\n                                                                        <div className=\"col\">\r\n                                                                            <span className=\"text-capitalize sm-text\">\r\n                                                                                service\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                        <div className=\"col text-center\">:</div>\r\n                                                                        <div className=\"col text-right\">\r\n                                                                            <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                                                                                20.00\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"col-12\">\r\n                                                                    <div className=\"row\">\r\n                                                                        <div className=\"col\">\r\n                                                                            <span className=\"text-capitalize sm-text\">\r\n                                                                                discount\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                        <div className=\"col text-center\">:</div>\r\n                                                                        <div className=\"col text-right\">\r\n                                                                            <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                                                                                100.00\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <hr />\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-12\">\r\n                                                                    <div className=\"row\">\r\n                                                                        <div className=\"col\">\r\n                                                                            <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                                                                                total bill\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                        <div className=\"col text-center\">:</div>\r\n                                                                        <div className=\"col text-right\">\r\n                                                                            <span className=\"text-capitalize sm-text font-weight-bold\">\r\n                                                                                2000.00\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <hr />\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-6\">\r\n                                                                    <button\r\n                                                                        type=\"button\"\r\n                                                                        className=\"btn btn-primary w-100 xsm-text text-uppercase\"\r\n                                                                    >\r\n                                                                        settle\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                <div className=\"col-6\">\r\n                                                                    <button\r\n                                                                        type=\"button\"\r\n                                                                        className=\"btn btn-success w-100 xsm-text text-uppercase\"\r\n                                                                    >\r\n                                                                        submit\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                {/* Disply Only Small Screen End  */}\r\n\r\n                                                {/* Display Only Large Screen   */}\r\n                                                <div className=\"h-100 w-100 d-none d-md-block\">\r\n                                                    <div className=\"fk-price-table\">\r\n                                                        <div className=\"fk-price-table__head\">\r\n                                                            <div className=\"row gx-0 align-items-center\">\r\n                                                                <div className=\"col-12 text-right\">\r\n                                                                    <span className=\"d-block sm-text font-weight-bold text-uppercase\">\r\n                                                                        {_t(t(\"Order token\"))}:{\" \"}\r\n                                                                        {newOrder ? (\r\n                                                                            <>\r\n                                                                                #{orderDetails.token.id} -{\" \"}\r\n                                                                                <Moment format=\"LT\">\r\n                                                                                    {orderDetails.token.time}\r\n                                                                                </Moment>\r\n                                                                            </>\r\n                                                                        ) : (\r\n                                                                            \"\"\r\n                                                                        )}\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"fk-price-table__body t-mt-10\">\r\n                                                            <div className=\"fk-price-table__body-top\">\r\n                                                                <div className=\"fk-table\">\r\n                                                                    <div className=\"fk-table__head\">\r\n                                                                        <div className=\"row g-0 border\">\r\n                                                                            <div className=\"col-1 text-center border-right\">\r\n                                                                                <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                                    {_t(t(\"S/L\"))}\r\n                                                                                </span>\r\n                                                                            </div>\r\n                                                                            <div className=\"col-6 text-center border-right\">\r\n                                                                                <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                                    {_t(t(\"food item\"))}\r\n                                                                                </span>\r\n                                                                            </div>\r\n                                                                            <div className=\"col-2 text-center border-right\">\r\n                                                                                <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                                    {_t(t(\"QTY\"))}\r\n                                                                                </span>\r\n                                                                            </div>\r\n                                                                            <div className=\"col-3 text-center\">\r\n                                                                                <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                                    {_t(t(\"price\"))}\r\n                                                                                </span>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div\r\n                                                                        className=\"fk-table__body border-bottom\"\r\n                                                                        data-simplebar\r\n                                                                    >\r\n                                                                        <div className=\"sky-is-blue reverse-this\">\r\n                                                                            {/* loop through order list items */}\r\n                                                                            {newOrder && newOrder.length > 0 ? (\r\n                                                                                newOrder.map(\r\n                                                                                    (\r\n                                                                                        orderListItem,\r\n                                                                                        orderListItemIndex\r\n                                                                                    ) => {\r\n                                                                                        return (\r\n                                                                                            <>\r\n                                                                                                <div\r\n                                                                                                    className={`fk-table-container-order ${orderListItemIndex ===\r\n                                                                                                        activeItemInOrder &&\r\n                                                                                                        \"active\"\r\n                                                                                                        } `}\r\n                                                                                                    onClick={(e) => {\r\n                                                                                                        e.preventDefault();\r\n                                                                                                        //orderListItem's group wise all items\r\n                                                                                                        let tempItems =\r\n                                                                                                            foodForSearch &&\r\n                                                                                                            foodForSearch.filter(\r\n                                                                                                                (tempItem) => {\r\n                                                                                                                    return (\r\n                                                                                                                        tempItem.food_group_id ===\r\n                                                                                                                        orderListItem.item\r\n                                                                                                                            .food_group_id\r\n                                                                                                                    );\r\n                                                                                                                }\r\n                                                                                                            );\r\n\r\n                                                                                                        //orderListItem's group\r\n                                                                                                        let foodGroup =\r\n                                                                                                            foodGroupForSearch &&\r\n                                                                                                            foodGroupForSearch.find(\r\n                                                                                                                (groupItem) => {\r\n                                                                                                                    return (\r\n                                                                                                                        groupItem.id ===\r\n                                                                                                                        parseInt(\r\n                                                                                                                            orderListItem.item\r\n                                                                                                                                .food_group_id\r\n                                                                                                                        )\r\n                                                                                                                    );\r\n                                                                                                                }\r\n                                                                                                            );\r\n\r\n                                                                                                        // selected pos item\r\n                                                                                                        let selectedItemTemp =\r\n                                                                                                            tempItems &&\r\n                                                                                                            tempItems.find(\r\n                                                                                                                (tempSelectedItem) => {\r\n                                                                                                                    return (\r\n                                                                                                                        tempSelectedItem.id ===\r\n                                                                                                                        orderListItem.item\r\n                                                                                                                            .id\r\n                                                                                                                    );\r\n                                                                                                                }\r\n                                                                                                            );\r\n\r\n                                                                                                        // Set variations, properties, selected item\r\n                                                                                                        setFoodItem({\r\n                                                                                                            ...foodItem,\r\n                                                                                                            foodGroup: foodGroup,\r\n                                                                                                            items: tempItems,\r\n                                                                                                            selectedItem:\r\n                                                                                                                selectedItemTemp,\r\n                                                                                                            variations:\r\n                                                                                                                selectedItemTemp &&\r\n                                                                                                                    parseInt(\r\n                                                                                                                        selectedItemTemp.has_variation\r\n                                                                                                                    ) === 1\r\n                                                                                                                    ? selectedItemTemp.variations\r\n                                                                                                                    : null,\r\n                                                                                                            properties:\r\n                                                                                                                selectedItemTemp &&\r\n                                                                                                                    parseInt(\r\n                                                                                                                        selectedItemTemp.has_property\r\n                                                                                                                    ) === 1\r\n                                                                                                                    ? selectedItemTemp.properties\r\n                                                                                                                    : null,\r\n                                                                                                        });\r\n\r\n                                                                                                        //set active order list index for background color of selected\r\n                                                                                                        setActiveItemInOrder(\r\n                                                                                                            orderListItemIndex\r\n                                                                                                        );\r\n                                                                                                    }}\r\n                                                                                                >\r\n                                                                                                    <div\r\n                                                                                                        className={`row g-0 border-top-0 border-bottom `}\r\n                                                                                                    >\r\n                                                                                                        <div className=\"col-1 text-center border-left d-flex justify-content-center align-items-center\">\r\n                                                                                                            {newOrder.length -\r\n                                                                                                                orderListItemIndex}\r\n                                                                                                        </div>\r\n                                                                                                        <div\r\n                                                                                                            className={`col-6 border-left border-right py-2`}\r\n                                                                                                        >\r\n                                                                                                            <div className=\"d-flex justify-content-between\">\r\n                                                                                                                <span className=\"text-capitalize d-block t-pt-5 t-pb-5 t-pl-5 t-pr-5 sm-text font-weight-bold t-mr-8\">\r\n                                                                                                                    {\r\n                                                                                                                        orderListItem.item\r\n                                                                                                                            .name\r\n                                                                                                                    }\r\n                                                                                                                </span>\r\n                                                                                                            </div>\r\n                                                                                                            <div className=\"row g-0\">\r\n                                                                                                                {/* if item has variations show the selected in order list */}\r\n                                                                                                                {parseInt(\r\n                                                                                                                    orderListItem.item\r\n                                                                                                                        .has_variation\r\n                                                                                                                ) === 1 && (\r\n                                                                                                                        <div className=\"col-12\">\r\n                                                                                                                            <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pr-5 t-pl-5\">\r\n                                                                                                                                variation :\r\n                                                                                                                            </span>\r\n                                                                                                                            <span className=\"text-capitalize xsm-text d-inline-block badge rounded-pill bg-warning text-dark font-weight-md\">\r\n                                                                                                                                {orderListItem.variation\r\n                                                                                                                                    ? orderListItem\r\n                                                                                                                                        .variation\r\n                                                                                                                                        .variation_name\r\n                                                                                                                                    : \"-\"}\r\n                                                                                                                            </span>\r\n                                                                                                                        </div>\r\n                                                                                                                    )}\r\n\r\n                                                                                                                {/* if item has properties show the selected in order list, loop here  */}\r\n                                                                                                                {orderListItem.properties &&\r\n                                                                                                                    orderListItem\r\n                                                                                                                        .properties.length >\r\n                                                                                                                    0 &&\r\n                                                                                                                    selectedPropertyGroup[\r\n                                                                                                                    orderListItemIndex\r\n                                                                                                                    ] !== undefined &&\r\n                                                                                                                    selectedPropertyGroup[\r\n                                                                                                                        orderListItemIndex\r\n                                                                                                                    ].map(\r\n                                                                                                                        (thisIsGroup) => {\r\n                                                                                                                            let theGroup =\r\n                                                                                                                                propertyGroupForSearch &&\r\n                                                                                                                                propertyGroupForSearch.find(\r\n                                                                                                                                    (theItem) => {\r\n                                                                                                                                        return (\r\n                                                                                                                                            theItem.id ===\r\n                                                                                                                                            thisIsGroup\r\n                                                                                                                                        );\r\n                                                                                                                                    }\r\n                                                                                                                                );\r\n                                                                                                                            return (\r\n                                                                                                                                <div className=\"col-12\">\r\n                                                                                                                                    <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pr-5 t-pl-5\">\r\n                                                                                                                                        {theGroup &&\r\n                                                                                                                                            theGroup.name}{\" \"}\r\n                                                                                                                                        :\r\n                                                                                                                                    </span>\r\n                                                                                                                                    {orderListItem.properties.map(\r\n                                                                                                                                        (\r\n                                                                                                                                            propertyName\r\n                                                                                                                                        ) => {\r\n                                                                                                                                            if (\r\n                                                                                                                                                parseInt(\r\n                                                                                                                                                    propertyName\r\n                                                                                                                                                        .item\r\n                                                                                                                                                        .property_group_id\r\n                                                                                                                                                ) ===\r\n                                                                                                                                                theGroup.id\r\n                                                                                                                                            ) {\r\n                                                                                                                                                return (\r\n                                                                                                                                                    <span className=\"text-capitalize xsm-text d-inline-block badge rounded-pill bg-warning text-dark font-weight-md mr-1\">\r\n                                                                                                                                                        {\r\n                                                                                                                                                            propertyName\r\n                                                                                                                                                                .item\r\n                                                                                                                                                                .name\r\n                                                                                                                                                        }{\" \"}\r\n                                                                                                                                                        <span>\r\n                                                                                                                                                            {\" \"}\r\n                                                                                                                                                            {propertyName.quantity >\r\n                                                                                                                                                                1 &&\r\n                                                                                                                                                                \"(\" +\r\n                                                                                                                                                                propertyName.quantity +\r\n                                                                                                                                                                \")\"}\r\n                                                                                                                                                        </span>\r\n                                                                                                                                                    </span>\r\n                                                                                                                                                );\r\n                                                                                                                                            } else {\r\n                                                                                                                                                return true;\r\n                                                                                                                                            }\r\n                                                                                                                                        }\r\n                                                                                                                                    )}\r\n                                                                                                                                </div>\r\n                                                                                                                            );\r\n                                                                                                                        }\r\n                                                                                                                    )}\r\n\r\n                                                                                                                {/* if item has properties show the selected in order list  */}\r\n                                                                                                            </div>\r\n                                                                                                        </div>\r\n                                                                                                        {/* Quantity */}\r\n                                                                                                        <div className=\"col-2 text-center border-right d-flex justify-content-center align-items-center\">\r\n                                                                                                            <div className=\"fk-qty t-pt-5 t-pb-5 justify-content-center\">\r\n                                                                                                                <span\r\n                                                                                                                    className=\"fk-qty__icon\"\r\n                                                                                                                    onClick={() => {\r\n                                                                                                                        handleOrderItemQty(\r\n                                                                                                                            \"-\"\r\n                                                                                                                        );\r\n                                                                                                                    }}\r\n                                                                                                                >\r\n                                                                                                                    <i className=\"las la-minus\"></i>\r\n                                                                                                                </span>\r\n                                                                                                                <input\r\n                                                                                                                    type=\"text\"\r\n                                                                                                                    value={\r\n                                                                                                                        orderListItem.quantity\r\n                                                                                                                    }\r\n                                                                                                                    className=\"fk-qty__input t-bg-clear\"\r\n                                                                                                                    readOnly\r\n                                                                                                                />\r\n                                                                                                                <span\r\n                                                                                                                    className=\"fk-qty__icon\"\r\n                                                                                                                    onClick={() => {\r\n                                                                                                                        handleOrderItemQty(\r\n                                                                                                                            \"+\"\r\n                                                                                                                        );\r\n                                                                                                                    }}\r\n                                                                                                                >\r\n                                                                                                                    <i className=\"las la-plus\"></i>\r\n                                                                                                                </span>\r\n                                                                                                            </div>\r\n                                                                                                        </div>\r\n                                                                                                        {/* Quantity */}\r\n\r\n                                                                                                        {/* Price */}\r\n                                                                                                        <div className=\"col-3 text-center border-right d-flex justify-content-center align-items-center\">\r\n                                                                                                            <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                                                                {parseInt(\r\n                                                                                                                    orderListItem.item\r\n                                                                                                                        .has_variation\r\n                                                                                                                ) === 1 ? (\r\n                                                                                                                    <>\r\n                                                                                                                        {currencySymbolLeft()}\r\n\r\n                                                                                                                        {showPriceOfEachOrderItem(\r\n                                                                                                                            orderListItemIndex\r\n                                                                                                                        )}\r\n                                                                                                                        {currencySymbolRight()}\r\n                                                                                                                    </>\r\n                                                                                                                ) : (\r\n                                                                                                                    <>\r\n                                                                                                                        {currencySymbolLeft()}\r\n                                                                                                                        {showPriceOfEachOrderItem(\r\n                                                                                                                            orderListItemIndex\r\n                                                                                                                        )}\r\n                                                                                                                        {currencySymbolRight()}\r\n                                                                                                                    </>\r\n                                                                                                                )}\r\n                                                                                                            </span>\r\n                                                                                                        </div>\r\n                                                                                                        {/* Price */}\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                                <span className=\"text-capitalize  t-pt-5 t-pb-5 t-pl-5 t-pr-5 sm-text font-weight-bold make-this-relative\">\r\n                                                                                                    <span\r\n                                                                                                        className=\"badge rounded-pill bg-secondary text-capitalize\"\r\n                                                                                                        onClick={() => {\r\n                                                                                                            handleRemoveItemFromOrderList(\r\n                                                                                                                orderListItemIndex\r\n                                                                                                            );\r\n                                                                                                        }}\r\n                                                                                                    >\r\n                                                                                                        <i className=\"fa fa-times\"></i>\r\n                                                                                                    </span>\r\n                                                                                                </span>\r\n                                                                                            </>\r\n                                                                                        );\r\n                                                                                    }\r\n                                                                                )\r\n                                                                            ) : (\r\n                                                                                <div className=\"text-primary text-center font-weight-bold pt-5 xsm-text text-uppercase\">\r\n                                                                                    {_t(\r\n                                                                                        t(\r\n                                                                                            \"Select food item to add to the list\"\r\n                                                                                        )\r\n                                                                                    )}\r\n                                                                                </div>\r\n                                                                            )}\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"fk-price-table__body-bottom t-mt-10\">\r\n                                                                <div className=\"fk-table__head\">\r\n                                                                    <div className=\"row g-0 border\">\r\n                                                                        <div className=\"col-6 text-center border-right\">\r\n                                                                            <div className=\"row g-0\">\r\n                                                                                <div className=\"col-6\">\r\n                                                                                    <span className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                                        {_t(t(\"sub total\"))}\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-6\">\r\n                                                                                    {newOrder ? (\r\n                                                                                        <span className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                                            {currencySymbolLeft()}\r\n                                                                                            {formatPrice(theSubTotal)}\r\n                                                                                            {currencySymbolRight()}\r\n                                                                                        </span>\r\n                                                                                    ) : (\r\n                                                                                        <span className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                                            {currencySymbolLeft()}\r\n                                                                                            {formatPrice(0)}\r\n                                                                                            {currencySymbolRight()}\r\n                                                                                        </span>\r\n                                                                                    )}\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-6 text-center\">\r\n                                                                            <div className=\"row g-0\">\r\n                                                                                <div className=\"col-6\">\r\n                                                                                    <span className=\"xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                                        {getSystemSettings(\r\n                                                                                            generalSettings,\r\n                                                                                            \"vat_system\"\r\n                                                                                        ) === \"igst\"\r\n                                                                                            ? `vat(${newSettings !== null &&\r\n                                                                                            newSettings.vat\r\n                                                                                            })`\r\n                                                                                            : getSystemSettings(\r\n                                                                                                generalSettings,\r\n                                                                                                \"vat_system\"\r\n                                                                                            ) === \"cgst\"\r\n                                                                                                ? \"cgst+sgst\" +\r\n                                                                                                \"(\" +\r\n                                                                                                getSystemSettings(\r\n                                                                                                    generalSettings,\r\n                                                                                                    \"cgst\"\r\n                                                                                                ) +\r\n                                                                                                \"+\" +\r\n                                                                                                getSystemSettings(\r\n                                                                                                    generalSettings,\r\n                                                                                                    \"sgst\"\r\n                                                                                                ) +\r\n                                                                                                \")\" :\r\n                                                                                                `tax(${newSettings !== null &&\r\n                                                                                                newSettings.vat\r\n                                                                                                })`}\r\n                                                                                        %:\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-6\">\r\n                                                                                    <span className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                                        {currencySymbolLeft()}\r\n                                                                                        {formatPrice(theVat)}\r\n                                                                                        {currencySymbolRight()}\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n                                                                    <div className=\"row g-0 border\">\r\n                                                                        <div className=\"col-12 text-center border-right\">\r\n                                                                            <div className=\"row g-0 justify-content-end\">\r\n                                                                                <div\r\n                                                                                    className=\"col-12 text-right\"\r\n                                                                                    style={{\r\n                                                                                        textAlign: \"start\",\r\n                                                                                        paddingRight: \"50px\",\r\n                                                                                    }}\r\n                                                                                >\r\n                                                                                    <div className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                                        {_t(t(\"Department Tag Commission\"))}\r\n                                                                                        {orderDetails &&\r\n                                                                                            orderDetails.dept_tag &&\r\n                                                                                            \" (\" +\r\n                                                                                            orderDetails.dept_tag\r\n                                                                                                .commission +\r\n                                                                                            \"%\" +\r\n                                                                                            \")\"}{\" \"}\r\n                                                                                        :{\" \"}\r\n                                                                                        {newOrder ? (\r\n                                                                                            <span className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                                                {currencySymbolLeft()}\r\n                                                                                                {formatPrice(deptCommission)}\r\n                                                                                                {currencySymbolRight()}\r\n                                                                                            </span>\r\n                                                                                        ) : (\r\n                                                                                            <span className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                                                {currencySymbolLeft()}\r\n                                                                                                {formatPrice(0)}\r\n                                                                                                {currencySymbolRight()}\r\n                                                                                            </span>\r\n                                                                                        )}\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n                                                                    {getSystemSettings(\r\n                                                                        generalSettings,\r\n                                                                        \"sDiscount\"\r\n                                                                    ) === \"flat\" && (\r\n                                                                            <div className=\"row g-0 border\">\r\n                                                                                <div className=\"col-6 text-center border-right\">\r\n                                                                                    <div className=\"row g-0\">\r\n                                                                                        <div className=\"col-6\">\r\n                                                                                            <span className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                                                {_t(t(\"service charge\"))}\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                        <div className=\"col-6\">\r\n                                                                                            <input\r\n                                                                                                type=\"number\"\r\n                                                                                                step=\"0.01\"\r\n                                                                                                min=\"0\"\r\n                                                                                                className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5 form-control rounded-0 text-center\"\r\n                                                                                                onChange={(e) => {\r\n                                                                                                    if (e.target.value !== \"\") {\r\n                                                                                                        setOrderDetails({\r\n                                                                                                            ...orderDetails,\r\n                                                                                                            serviceCharge: parseFloat(\r\n                                                                                                                e.target.value\r\n                                                                                                            ),\r\n                                                                                                        });\r\n                                                                                                        let totalPayable = 0;\r\n                                                                                                        let localCurrency =\r\n                                                                                                            JSON.parse(\r\n                                                                                                                localStorage.getItem(\r\n                                                                                                                    \"currency\"\r\n                                                                                                                )\r\n                                                                                                            );\r\n                                                                                                        let usdServiceCharge =\r\n                                                                                                            parseFloat(e.target.value) /\r\n                                                                                                            localCurrency.rate;\r\n                                                                                                        let usdDiscount =\r\n                                                                                                            parseFloat(\r\n                                                                                                                orderDetails.discount\r\n                                                                                                            ) / localCurrency.rate;\r\n\r\n                                                                                                        totalPayable =\r\n                                                                                                            theSubTotal +\r\n                                                                                                            theVat +\r\n                                                                                                            usdServiceCharge -\r\n                                                                                                            usdDiscount;\r\n                                                                                                        setTotalPaybale(totalPayable);\r\n                                                                                                        setReturnMoneyUsd(\r\n                                                                                                            totalPayable - paidMoney\r\n                                                                                                        );\r\n                                                                                                    } else {\r\n                                                                                                        setOrderDetails({\r\n                                                                                                            ...orderDetails,\r\n                                                                                                            serviceCharge: 0,\r\n                                                                                                        });\r\n                                                                                                        let totalPayable = 0;\r\n                                                                                                        let localCurrency =\r\n                                                                                                            JSON.parse(\r\n                                                                                                                localStorage.getItem(\r\n                                                                                                                    \"currency\"\r\n                                                                                                                )\r\n                                                                                                            );\r\n                                                                                                        let usdServiceCharge =\r\n                                                                                                            parseFloat(0) /\r\n                                                                                                            localCurrency.rate;\r\n                                                                                                        let usdDiscount =\r\n                                                                                                            parseFloat(\r\n                                                                                                                orderDetails.discount\r\n                                                                                                            ) / localCurrency.rate;\r\n\r\n                                                                                                        totalPayable =\r\n                                                                                                            theSubTotal +\r\n                                                                                                            theVat +\r\n                                                                                                            usdServiceCharge -\r\n                                                                                                            usdDiscount;\r\n                                                                                                        setTotalPaybale(totalPayable);\r\n                                                                                                        setReturnMoneyUsd(\r\n                                                                                                            totalPayable - paidMoney\r\n                                                                                                        );\r\n                                                                                                    }\r\n                                                                                                }}\r\n                                                                                                value={\r\n                                                                                                    orderDetails.serviceCharge !==\r\n                                                                                                    0 &&\r\n                                                                                                    orderDetails.serviceCharge\r\n                                                                                                }\r\n                                                                                            />\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-6 text-center\">\r\n                                                                                    <div className=\"row g-0\">\r\n                                                                                        <div className=\"col-6\">\r\n                                                                                            <span className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                                                {_t(t(\"discount\"))}\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                        <div className=\"col-6\">\r\n                                                                                            <input\r\n                                                                                                type=\"number\"\r\n                                                                                                step=\"0.01\"\r\n                                                                                                min=\"0\"\r\n                                                                                                className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5 form-control rounded-0 text-center\"\r\n                                                                                                onChange={(e) => {\r\n                                                                                                    if (e.target.value !== \"\") {\r\n                                                                                                        setOrderDetails({\r\n                                                                                                            ...orderDetails,\r\n                                                                                                            discount: parseFloat(\r\n                                                                                                                e.target.value\r\n                                                                                                            ),\r\n                                                                                                        });\r\n                                                                                                        let totalPayable = 0;\r\n                                                                                                        let localCurrency =\r\n                                                                                                            JSON.parse(\r\n                                                                                                                localStorage.getItem(\r\n                                                                                                                    \"currency\"\r\n                                                                                                                )\r\n                                                                                                            );\r\n                                                                                                        let usdServiceCharge =\r\n                                                                                                            parseFloat(\r\n                                                                                                                orderDetails.serviceCharge\r\n                                                                                                            ) / localCurrency.rate;\r\n                                                                                                        let usdDiscount =\r\n                                                                                                            parseFloat(e.target.value) /\r\n                                                                                                            localCurrency.rate;\r\n\r\n                                                                                                        totalPayable =\r\n                                                                                                            theSubTotal +\r\n                                                                                                            theVat +\r\n                                                                                                            usdServiceCharge -\r\n                                                                                                            usdDiscount;\r\n\r\n                                                                                                        setTotalPaybale(totalPayable);\r\n                                                                                                        setReturnMoneyUsd(\r\n                                                                                                            totalPayable - paidMoney\r\n                                                                                                        );\r\n                                                                                                    } else {\r\n                                                                                                        setOrderDetails({\r\n                                                                                                            ...orderDetails,\r\n                                                                                                            discount: 0,\r\n                                                                                                        });\r\n                                                                                                        let totalPayable = 0;\r\n                                                                                                        let localCurrency =\r\n                                                                                                            JSON.parse(\r\n                                                                                                                localStorage.getItem(\r\n                                                                                                                    \"currency\"\r\n                                                                                                                )\r\n                                                                                                            );\r\n                                                                                                        let usdServiceCharge =\r\n                                                                                                            parseFloat(\r\n                                                                                                                orderDetails.serviceCharge\r\n                                                                                                            ) / localCurrency.rate;\r\n                                                                                                        let usdDiscount =\r\n                                                                                                            parseFloat(0) /\r\n                                                                                                            localCurrency.rate;\r\n\r\n                                                                                                        totalPayable =\r\n                                                                                                            theSubTotal +\r\n                                                                                                            theVat +\r\n                                                                                                            usdServiceCharge -\r\n                                                                                                            usdDiscount;\r\n                                                                                                        setTotalPaybale(totalPayable);\r\n                                                                                                        setReturnMoneyUsd(\r\n                                                                                                            totalPayable - paidMoney\r\n                                                                                                        );\r\n                                                                                                    }\r\n                                                                                                }}\r\n                                                                                                value={\r\n                                                                                                    orderDetails.discount !== 0 &&\r\n                                                                                                    orderDetails.discount\r\n                                                                                                }\r\n                                                                                            />\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        )}\r\n                                                                    {getSystemSettings(\r\n                                                                        generalSettings,\r\n                                                                        \"sDiscount\"\r\n                                                                    ) === \"percentage\" && (\r\n                                                                            <div className=\"row g-0 border\">\r\n                                                                                <div className=\"col-6 text-center border-right\">\r\n                                                                                    <div className=\"row g-0\">\r\n                                                                                        <div className=\"col-6\">\r\n                                                                                            <span className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                                                {_t(t(\"service charge\"))} %\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                        <div className=\"col-6\">\r\n                                                                                            <input\r\n                                                                                                type=\"number\"\r\n                                                                                                step=\"0.01\"\r\n                                                                                                min=\"0\"\r\n                                                                                                className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5 form-control rounded-0 text-center\"\r\n                                                                                                onChange={(e) => {\r\n                                                                                                    if (e.target.value !== \"\") {\r\n                                                                                                        setOrderDetails({\r\n                                                                                                            ...orderDetails,\r\n                                                                                                            serviceCharge: parseFloat(\r\n                                                                                                                e.target.value\r\n                                                                                                            ),\r\n                                                                                                        });\r\n                                                                                                        let totalPayable = 0;\r\n                                                                                                        // let localCurrency = JSON.parse(\r\n                                                                                                        //   localStorage.getItem(\r\n                                                                                                        //     \"currency\"\r\n                                                                                                        //   )\r\n                                                                                                        // );\r\n                                                                                                        // let usdServiceCharge =\r\n                                                                                                        //   parseFloat(e.target.value) /\r\n                                                                                                        //   localCurrency.rate;\r\n                                                                                                        // console.log(\"coming\");\r\n                                                                                                        let usdServiceCharge =\r\n                                                                                                            theSubTotal *\r\n                                                                                                            (parseFloat(\r\n                                                                                                                e.target.value\r\n                                                                                                            ) /\r\n                                                                                                                100);\r\n\r\n                                                                                                        // let usdDiscount =\r\n                                                                                                        //   parseFloat(\r\n                                                                                                        //     orderDetails.discount\r\n                                                                                                        //   ) / localCurrency.rate;\r\n\r\n                                                                                                        let usdDiscount =\r\n                                                                                                            theSubTotal *\r\n                                                                                                            (parseFloat(\r\n                                                                                                                orderDetails.discount\r\n                                                                                                            ) /\r\n                                                                                                                100);\r\n\r\n                                                                                                        totalPayable =\r\n                                                                                                            theSubTotal +\r\n                                                                                                            theVat +\r\n                                                                                                            usdServiceCharge -\r\n                                                                                                            usdDiscount;\r\n                                                                                                        setTotalPaybale(totalPayable);\r\n                                                                                                    } else {\r\n                                                                                                        setOrderDetails({\r\n                                                                                                            ...orderDetails,\r\n                                                                                                            serviceCharge: 0,\r\n                                                                                                        });\r\n                                                                                                        let totalPayable = 0;\r\n                                                                                                        // let localCurrency = JSON.parse(\r\n                                                                                                        //   localStorage.getItem(\r\n                                                                                                        //     \"currency\"\r\n                                                                                                        //   )\r\n                                                                                                        // );\r\n                                                                                                        // let usdServiceCharge =\r\n                                                                                                        //   parseFloat(0) /\r\n                                                                                                        //   localCurrency.rate;\r\n                                                                                                        let usdServiceCharge = 0;\r\n\r\n                                                                                                        // let usdDiscount =\r\n                                                                                                        //   parseFloat(\r\n                                                                                                        //     orderDetails.discount\r\n                                                                                                        //   ) / localCurrency.rate;\r\n\r\n                                                                                                        let usdDiscount =\r\n                                                                                                            theSubTotal *\r\n                                                                                                            (parseFloat(\r\n                                                                                                                orderDetails.discount\r\n                                                                                                            ) /\r\n                                                                                                                100);\r\n\r\n                                                                                                        totalPayable =\r\n                                                                                                            theSubTotal +\r\n                                                                                                            theVat +\r\n                                                                                                            usdServiceCharge -\r\n                                                                                                            usdDiscount;\r\n                                                                                                        setTotalPaybale(totalPayable);\r\n                                                                                                    }\r\n                                                                                                }}\r\n                                                                                                value={\r\n                                                                                                    orderDetails.serviceCharge !==\r\n                                                                                                    0 &&\r\n                                                                                                    orderDetails.serviceCharge\r\n                                                                                                }\r\n                                                                                            />\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                                <div className=\"col-6 text-center\">\r\n                                                                                    <div className=\"row g-0\">\r\n                                                                                        <div className=\"col-6\">\r\n                                                                                            <span className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                                                {_t(t(\"discount\"))} %\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                        <div className=\"col-6\">\r\n                                                                                            <input\r\n                                                                                                type=\"number\"\r\n                                                                                                step=\"0.01\"\r\n                                                                                                min=\"0\"\r\n                                                                                                className=\"text-capitalize xsm-text d-inline-block font-weight-bold t-pt-5 t-pb-5 form-control rounded-0 text-center\"\r\n                                                                                                onChange={(e) => {\r\n                                                                                                    if (e.target.value !== \"\") {\r\n                                                                                                        setOrderDetails({\r\n                                                                                                            ...orderDetails,\r\n                                                                                                            discount: parseFloat(\r\n                                                                                                                e.target.value\r\n                                                                                                            ),\r\n                                                                                                        });\r\n                                                                                                        let totalPayable = 0;\r\n                                                                                                        // let localCurrency = JSON.parse(\r\n                                                                                                        //   localStorage.getItem(\r\n                                                                                                        //     \"currency\"\r\n                                                                                                        //   )\r\n                                                                                                        // );\r\n                                                                                                        // let usdServiceCharge =\r\n                                                                                                        //   parseFloat(\r\n                                                                                                        //     orderDetails.serviceCharge\r\n                                                                                                        //   ) / localCurrency.rate;\r\n                                                                                                        let usdServiceCharge =\r\n                                                                                                            theSubTotal *\r\n                                                                                                            (parseFloat(\r\n                                                                                                                orderDetails.serviceCharge\r\n                                                                                                            ) /\r\n                                                                                                                100);\r\n\r\n                                                                                                        // let usdDiscount =\r\n                                                                                                        //   parseFloat(e.target.value) /\r\n                                                                                                        //   localCurrency.rate;\r\n\r\n                                                                                                        let usdDiscount =\r\n                                                                                                            theSubTotal *\r\n                                                                                                            (parseFloat(\r\n                                                                                                                e.target.value\r\n                                                                                                            ) /\r\n                                                                                                                100);\r\n\r\n                                                                                                        totalPayable =\r\n                                                                                                            theSubTotal +\r\n                                                                                                            theVat +\r\n                                                                                                            usdServiceCharge -\r\n                                                                                                            usdDiscount;\r\n\r\n                                                                                                        setTotalPaybale(totalPayable);\r\n                                                                                                    } else {\r\n                                                                                                        setOrderDetails({\r\n                                                                                                            ...orderDetails,\r\n                                                                                                            discount: 0,\r\n                                                                                                        });\r\n                                                                                                        let totalPayable = 0;\r\n                                                                                                        // let localCurrency = JSON.parse(\r\n                                                                                                        //   localStorage.getItem(\r\n                                                                                                        //     \"currency\"\r\n                                                                                                        //   )\r\n                                                                                                        // );\r\n\r\n                                                                                                        let usdServiceCharge =\r\n                                                                                                            theSubTotal *\r\n                                                                                                            (parseFloat(\r\n                                                                                                                orderDetails.serviceCharge\r\n                                                                                                            ) /\r\n                                                                                                                100);\r\n\r\n                                                                                                        let usdDiscount = 0;\r\n\r\n                                                                                                        totalPayable =\r\n                                                                                                            theSubTotal +\r\n                                                                                                            theVat +\r\n                                                                                                            usdServiceCharge -\r\n                                                                                                            usdDiscount;\r\n                                                                                                        setTotalPaybale(totalPayable);\r\n                                                                                                    }\r\n                                                                                                }}\r\n                                                                                                value={\r\n                                                                                                    orderDetails.discount !== 0 &&\r\n                                                                                                    orderDetails.discount\r\n                                                                                                }\r\n                                                                                            />\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        )}\r\n                                                                </div>\r\n                                                                <div className=\"t-bg-epsilon t-pl-10 t-pr-10\">\r\n                                                                    <div className=\"row\">\r\n                                                                        <div className=\"col-6\">\r\n                                                                            <span className=\"text-capitalize font-weight-bold text-light d-block t-pt-8 t-pb-10\">\r\n                                                                                {_t(t(\"total bill\"))}\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                        <div className=\"col-6 text-right\">\r\n                                                                            {totalPayable ? (\r\n                                                                                <span className=\"text-capitalize font-weight-bold text-light d-block t-pt-8 t-pb-10\">\r\n                                                                                    {currencySymbolLeft()}\r\n                                                                                    {formatPrice(totalPayable)}\r\n                                                                                    {currencySymbolRight()}\r\n                                                                                </span>\r\n                                                                            ) : (\r\n                                                                                <span className=\"text-capitalize font-weight-bold text-light d-block t-pt-8 t-pb-10\">\r\n                                                                                    {currencySymbolLeft()}\r\n                                                                                    {formatPrice(0)}\r\n                                                                                    {currencySymbolRight()}\r\n                                                                                </span>\r\n                                                                            )}\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <div className=\"row g-0 align-items-center t-mt-10\">\r\n                                                                    <div className=\"col-4\">\r\n                                                                        <div className=\"t-mr-8\">\r\n                                                                            <div className=\"fk-calculator-container\">\r\n                                                                                <button\r\n                                                                                    type=\"button\"\r\n                                                                                    className=\"btn btn-info text-uppercase\"\r\n                                                                                    onClick={() =>\r\n                                                                                        setCalculatorMenu(!calculatorMenu)\r\n                                                                                    }\r\n                                                                                >\r\n                                                                                    <i className=\"fa fa-calculator\"></i>\r\n                                                                                </button>\r\n                                                                                <div\r\n                                                                                    className={`calculator ${calculatorMenu && \"active\"\r\n                                                                                        }`}\r\n                                                                                >\r\n                                                                                    <Calculator />\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    {getSystemSettings(\r\n                                                                        generalSettings,\r\n                                                                        \"pos_screen\"\r\n                                                                    ) === \"0\" && (\r\n                                                                            <div className=\"col-8\">\r\n                                                                                <div className=\"d-flex justify-content-end align-items-center\">\r\n                                                                                    {returnMoneyUsd > 0 && (\r\n                                                                                        <div className=\"t-mr-8\">\r\n                                                                                            <span className=\"text-capitalize font-weight-bold mr-2\">\r\n                                                                                                {_t(t(\"Return\"))}\r\n                                                                                            </span>\r\n                                                                                            {totalPayable ? (\r\n                                                                                                <span className=\"text-capitalize font-weight-bold t-pt-8 t-pb-10\">\r\n                                                                                                    {currencySymbolLeft()}\r\n                                                                                                    {formatPrice(returnMoneyUsd)}\r\n                                                                                                    {currencySymbolRight()}\r\n                                                                                                </span>\r\n                                                                                            ) : (\r\n                                                                                                <span className=\"text-capitalize font-weight-bold t-pt-8 t-pb-10\">\r\n                                                                                                    {currencySymbolLeft()}\r\n                                                                                                    {formatPrice(0)}\r\n                                                                                                    {currencySymbolRight()}\r\n                                                                                                </span>\r\n                                                                                            )}\r\n                                                                                        </div>\r\n                                                                                    )}\r\n\r\n                                                                                    <div className=\"t-mr-8\">\r\n                                                                                        <button\r\n                                                                                            type=\"button\"\r\n                                                                                            className=\"btn btn-primary sm-text text-uppercase font-weight-bold\"\r\n                                                                                            onClick={\r\n                                                                                                !loading && handleSettleOrder\r\n                                                                                            }\r\n                                                                                        >\r\n                                                                                            {!loading\r\n                                                                                                ? _t(t(\"settle\"))\r\n                                                                                                : _t(t(\"Please wait\"))}\r\n                                                                                        </button>\r\n                                                                                    </div>\r\n                                                                                    <div>\r\n                                                                                        <button\r\n                                                                                            type=\"button\"\r\n                                                                                            className=\"btn btn-success sm-text text-uppercase font-weight-bold\"\r\n                                                                                            onClick={\r\n                                                                                                !loading && handleSubmitOrder\r\n                                                                                            }\r\n                                                                                        >\r\n                                                                                            {!loading\r\n                                                                                                ? _t(t(\"submit\"))\r\n                                                                                                : _t(t(\"Please wait\"))}\r\n                                                                                        </button>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        )}\r\n                                                                    {getSystemSettings(\r\n                                                                        generalSettings,\r\n                                                                        \"pos_screen\"\r\n                                                                    ) === \"1\" && (\r\n                                                                            <div className=\"col-8\">\r\n                                                                                <div className=\"d-flex justify-content-end align-items-center\">\r\n                                                                                    <div className=\"t-mr-8\">\r\n                                                                                        <button\r\n                                                                                            type=\"button\"\r\n                                                                                            className=\"btn btn-primary sm-text text-uppercase font-weight-bold\"\r\n                                                                                            onClick={handleSettleOrderButton}\r\n                                                                                        >\r\n                                                                                            {!loading\r\n                                                                                                ? _t(t(\"settle\"))\r\n                                                                                                : _t(t(\"Please wait\"))}\r\n                                                                                        </button>\r\n                                                                                    </div>\r\n                                                                                    <div>\r\n                                                                                        <button\r\n                                                                                            type=\"button\"\r\n                                                                                            className=\"btn btn-success sm-text text-uppercase font-weight-bold\"\r\n                                                                                            onClick={\r\n                                                                                                !loading && handleSubmitOrder\r\n                                                                                            }\r\n                                                                                        >\r\n                                                                                            {!loading\r\n                                                                                                ? _t(t(\"submit\"))\r\n                                                                                                : _t(t(\"Please wait\"))}\r\n                                                                                        </button>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        )}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                {/* Display Only Large Screen End  */}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {/* Right Side End */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* Show In Tab   */}\r\n                </main>\r\n            </div>\r\n\r\n            {/* show settle  */}\r\n            <div\r\n                className={`fk-settle-container d-flex flex-column justify-content-center ${showSettle ? \"\" : \"d-none\"\r\n                    }`}\r\n            >\r\n                <div className=\"fk-settle\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row gx-3\">\r\n                            <div className=\"col-lg-6 d-none d-lg-block\">\r\n                                <span className=\"sm-text d-block text-capitalize font-weight-bold py-3\">\r\n                                    new order\r\n                                </span>\r\n                                <div\r\n                                    className=\"fk-settle__products d-flex flex-column\"\r\n                                    data-simplebar\r\n                                >\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row gx-3\">\r\n                                            <div className=\"col-12\">\r\n                                                {/* POS Product list will be here  */}\r\n                                                <div className=\"fk-price-table__body t-mt-10\">\r\n                                                    <div className=\"fk-price-table__body-top\">\r\n                                                        <div className=\"fk-table\">\r\n                                                            <div className=\"fk-table__head\">\r\n                                                                <div className=\"row g-0 border\">\r\n                                                                    <div className=\"col-1 text-center border-right\">\r\n                                                                        <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                            {_t(t(\"S/L\"))}\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-6 text-center border-right\">\r\n                                                                        <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                            {_t(t(\"food item\"))}\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-2 text-center border-right\">\r\n                                                                        <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                            {_t(t(\"QTY\"))}\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <div className=\"col-3 text-center\">\r\n                                                                        <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                            {_t(t(\"price\"))}\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"t-pb-30\">\r\n                                                                <div className=\"sky-is-blue reverse-this\">\r\n                                                                    {/* loop through order list items */}\r\n                                                                    {newOrder && newOrder.length > 0 ? (\r\n                                                                        newOrder.map(\r\n                                                                            (orderListItem, orderListItemIndex) => {\r\n                                                                                return (\r\n                                                                                    <>\r\n                                                                                        <div\r\n                                                                                            className={`fk-table-container-order ${orderListItemIndex ===\r\n                                                                                                activeItemInOrder && \"active\"\r\n                                                                                                } `}\r\n                                                                                            onClick={(e) => {\r\n                                                                                                e.preventDefault();\r\n                                                                                                //orderListItem's group wise all items\r\n                                                                                                let tempItems =\r\n                                                                                                    foodForSearch &&\r\n                                                                                                    foodForSearch.filter(\r\n                                                                                                        (tempItem) => {\r\n                                                                                                            return (\r\n                                                                                                                tempItem.food_group_id ===\r\n                                                                                                                orderListItem.item\r\n                                                                                                                    .food_group_id\r\n                                                                                                            );\r\n                                                                                                        }\r\n                                                                                                    );\r\n\r\n                                                                                                //orderListItem's group\r\n                                                                                                let foodGroup =\r\n                                                                                                    foodGroupForSearch &&\r\n                                                                                                    foodGroupForSearch.find(\r\n                                                                                                        (groupItem) => {\r\n                                                                                                            return (\r\n                                                                                                                groupItem.id ===\r\n                                                                                                                parseInt(\r\n                                                                                                                    orderListItem.item\r\n                                                                                                                        .food_group_id\r\n                                                                                                                )\r\n                                                                                                            );\r\n                                                                                                        }\r\n                                                                                                    );\r\n\r\n                                                                                                // selected pos item\r\n                                                                                                let selectedItemTemp =\r\n                                                                                                    tempItems &&\r\n                                                                                                    tempItems.find(\r\n                                                                                                        (tempSelectedItem) => {\r\n                                                                                                            return (\r\n                                                                                                                tempSelectedItem.id ===\r\n                                                                                                                orderListItem.item.id\r\n                                                                                                            );\r\n                                                                                                        }\r\n                                                                                                    );\r\n\r\n                                                                                                // Set variations, properties, selected item\r\n                                                                                                setFoodItem({\r\n                                                                                                    ...foodItem,\r\n                                                                                                    foodGroup: foodGroup,\r\n                                                                                                    items: tempItems,\r\n                                                                                                    selectedItem:\r\n                                                                                                        selectedItemTemp,\r\n                                                                                                    variations:\r\n                                                                                                        selectedItemTemp &&\r\n                                                                                                            parseInt(\r\n                                                                                                                selectedItemTemp.has_variation\r\n                                                                                                            ) === 1\r\n                                                                                                            ? selectedItemTemp.variations\r\n                                                                                                            : null,\r\n\r\n                                                                                                    properties:\r\n                                                                                                        selectedItemTemp &&\r\n                                                                                                            parseInt(\r\n                                                                                                                selectedItemTemp.has_property\r\n                                                                                                            ) === 1\r\n                                                                                                            ? selectedItemTemp.properties\r\n                                                                                                            : null,\r\n                                                                                                });\r\n\r\n                                                                                                //set active order list index for background color of selected\r\n                                                                                                setActiveItemInOrder(\r\n                                                                                                    orderListItemIndex\r\n                                                                                                );\r\n                                                                                            }}\r\n                                                                                        >\r\n                                                                                            <div\r\n                                                                                                className={`row g-0 border-top-0 border-bottom `}\r\n                                                                                            >\r\n                                                                                                <div className=\"col-1 text-center border-left d-flex justify-content-center align-items-center\">\r\n                                                                                                    {newOrder.length -\r\n                                                                                                        orderListItemIndex}\r\n                                                                                                </div>\r\n                                                                                                <div\r\n                                                                                                    className={`col-6 border-left border-right py-2`}\r\n                                                                                                >\r\n                                                                                                    <div className=\"d-flex justify-content-between\">\r\n                                                                                                        <span className=\"text-capitalize d-block t-pt-5 t-pb-5 t-pl-5 t-pr-5 sm-text font-weight-bold t-mr-8\">\r\n                                                                                                            {orderListItem.item.name}\r\n                                                                                                        </span>\r\n                                                                                                    </div>\r\n                                                                                                    <div className=\"row g-0\">\r\n                                                                                                        {/* if item has variations show the selected in order list */}\r\n                                                                                                        {parseInt(\r\n                                                                                                            orderListItem.item\r\n                                                                                                                .has_variation\r\n                                                                                                        ) === 1 && (\r\n                                                                                                                <div className=\"col-12\">\r\n                                                                                                                    <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pr-5 t-pl-5\">\r\n                                                                                                                        variation :\r\n                                                                                                                    </span>\r\n                                                                                                                    <span className=\"text-capitalize xsm-text d-inline-block badge rounded-pill bg-warning text-dark font-weight-md\">\r\n                                                                                                                        {orderListItem.variation\r\n                                                                                                                            ? orderListItem\r\n                                                                                                                                .variation\r\n                                                                                                                                .variation_name\r\n                                                                                                                            : \"-\"}\r\n                                                                                                                    </span>\r\n                                                                                                                </div>\r\n                                                                                                            )}\r\n\r\n                                                                                                        {/* if item has properties show the selected in order list, loop here  */}\r\n                                                                                                        {orderListItem.properties &&\r\n                                                                                                            orderListItem.properties\r\n                                                                                                                .length > 0 &&\r\n                                                                                                            selectedPropertyGroup[\r\n                                                                                                            orderListItemIndex\r\n                                                                                                            ] !== undefined &&\r\n                                                                                                            selectedPropertyGroup[\r\n                                                                                                                orderListItemIndex\r\n                                                                                                            ].map((thisIsGroup) => {\r\n                                                                                                                let theGroup =\r\n                                                                                                                    propertyGroupForSearch &&\r\n                                                                                                                    propertyGroupForSearch.find(\r\n                                                                                                                        (theItem) => {\r\n                                                                                                                            return (\r\n                                                                                                                                theItem.id ===\r\n                                                                                                                                thisIsGroup\r\n                                                                                                                            );\r\n                                                                                                                        }\r\n                                                                                                                    );\r\n                                                                                                                return (\r\n                                                                                                                    <div className=\"col-12\">\r\n                                                                                                                        <span className=\"text-capitalize sm-text d-inline-block font-weight-bold t-pr-5 t-pl-5\">\r\n                                                                                                                            {theGroup &&\r\n                                                                                                                                theGroup.name}{\" \"}\r\n                                                                                                                            :\r\n                                                                                                                        </span>\r\n                                                                                                                        {orderListItem.properties.map(\r\n                                                                                                                            (\r\n                                                                                                                                propertyName\r\n                                                                                                                            ) => {\r\n                                                                                                                                if (\r\n                                                                                                                                    parseInt(\r\n                                                                                                                                        propertyName\r\n                                                                                                                                            .item\r\n                                                                                                                                            .property_group_id\r\n                                                                                                                                    ) ===\r\n                                                                                                                                    theGroup.id\r\n                                                                                                                                ) {\r\n                                                                                                                                    return (\r\n                                                                                                                                        <span className=\"text-capitalize xsm-text d-inline-block badge rounded-pill bg-warning text-dark font-weight-md mr-1\">\r\n                                                                                                                                            {\r\n                                                                                                                                                propertyName\r\n                                                                                                                                                    .item\r\n                                                                                                                                                    .name\r\n                                                                                                                                            }{\" \"}\r\n                                                                                                                                            <span>\r\n                                                                                                                                                {\" \"}\r\n                                                                                                                                                {propertyName.quantity >\r\n                                                                                                                                                    1 &&\r\n                                                                                                                                                    \"(\" +\r\n                                                                                                                                                    propertyName.quantity +\r\n                                                                                                                                                    \")\"}\r\n                                                                                                                                            </span>\r\n                                                                                                                                        </span>\r\n                                                                                                                                    );\r\n                                                                                                                                } else {\r\n                                                                                                                                    return true;\r\n                                                                                                                                }\r\n                                                                                                                            }\r\n                                                                                                                        )}\r\n                                                                                                                    </div>\r\n                                                                                                                );\r\n                                                                                                            })}\r\n\r\n                                                                                                        {/* if item has properties show the selected in order list  */}\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                                {/* Quantity */}\r\n                                                                                                <div className=\"col-2 text-center border-right d-flex justify-content-center align-items-center\">\r\n                                                                                                    <div className=\"fk-qty t-pt-5 t-pb-5 justify-content-center\">\r\n                                                                                                        <input\r\n                                                                                                            type=\"text\"\r\n                                                                                                            value={\r\n                                                                                                                orderListItem.quantity\r\n                                                                                                            }\r\n                                                                                                            className=\"fk-qty__input t-bg-clear\"\r\n                                                                                                            readOnly\r\n                                                                                                        />\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                                {/* Quantity */}\r\n\r\n                                                                                                {/* Price */}\r\n                                                                                                <div className=\"col-3 text-center border-right d-flex justify-content-center align-items-center\">\r\n                                                                                                    <div className=\"text-capitalize sm-text font-weight-bold t-pt-5 t-pb-5\">\r\n                                                                                                        {parseInt(\r\n                                                                                                            orderListItem.item\r\n                                                                                                                .has_variation\r\n                                                                                                        ) === 1 ? (\r\n                                                                                                            <>\r\n                                                                                                                {currencySymbolLeft()}\r\n\r\n                                                                                                                {showPriceOfEachOrderItem(\r\n                                                                                                                    orderListItemIndex\r\n                                                                                                                )}\r\n                                                                                                                {currencySymbolRight()}\r\n                                                                                                            </>\r\n                                                                                                        ) : (\r\n                                                                                                            <>\r\n                                                                                                                {currencySymbolLeft()}\r\n                                                                                                                {showPriceOfEachOrderItem(\r\n                                                                                                                    orderListItemIndex\r\n                                                                                                                )}\r\n                                                                                                                {currencySymbolRight()}\r\n                                                                                                            </>\r\n                                                                                                        )}\r\n                                                                                                    </div>\r\n                                                                                                </div>\r\n                                                                                                {/* Price */}\r\n                                                                                            </div>\r\n                                                                                        </div>\r\n                                                                                    </>\r\n                                                                                );\r\n                                                                            }\r\n                                                                        )\r\n                                                                    ) : (\r\n                                                                        <div className=\"text-primary text-center font-weight-bold pt-5 xsm-text text-uppercase\">\r\n                                                                            {_t(\r\n                                                                                t(\"Select food item to add to the list\")\r\n                                                                            )}\r\n                                                                        </div>\r\n                                                                    )}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-6\">\r\n                                <div className=\"row gx-3\">\r\n                                    <div className=\"col-md-9\">\r\n                                        {returnMoneyUsd > 0 ? (\r\n                                            <div\r\n                                                className=\"alert alert-danger text-center\"\r\n                                                style={{ height: \"56px\", marginTop: \"16px\" }}\r\n                                            >\r\n                                                Return Amount: {formatPrice(returnMoneyUsd)}\r\n                                            </div>\r\n                                        ) : (\r\n                                            <>\r\n                                                <div className=\"fk-settle-group d-flex t-mt-15\">\r\n                                                    <label\r\n                                                        htmlFor=\"settle-total\"\r\n                                                        className=\"text-capitalize w-50 fk-settle-group__label font-weight-bold\"\r\n                                                    >\r\n                                                        total:\r\n                                                    </label>\r\n                                                    <div\r\n                                                        id=\"settle-total\"\r\n                                                        className=\"w-50 fk-settle-group__input text-right pr-2 font-weight-bold\"\r\n                                                    >\r\n                                                        {formatPrice(totalPayable)}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"fk-settle-group d-flex t-mt-10 t-mb-15\">\r\n                                                    <label\r\n                                                        htmlFor=\"settle-paid-amount\"\r\n                                                        className=\"text-capitalize w-50 fk-settle-group__label font-weight-bold\"\r\n                                                    >\r\n                                                        paid amount:\r\n                                                    </label>\r\n                                                    <div\r\n                                                        id=\"settle-total\"\r\n                                                        className=\"w-50 fk-settle-group__input text-right pr-2 font-weight-bold\"\r\n                                                    >\r\n                                                        {paidMoney}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </>\r\n                                        )}\r\n                                        <div className=\"fk-settle-cal container-fluid\">\r\n                                            <div className=\"row h-100 g-2 mt-1\">\r\n                                                <div className=\"col-2\">\r\n                                                    <div className=\"row g-2 h-100\">\r\n                                                        <div className=\"col-12\">\r\n                                                            <button\r\n                                                                className=\"fk-settle-cal-btn t-bg-p t-text-white\"\r\n                                                                onClick={() => {\r\n                                                                    if (!returnMoneyUsd > 0) {\r\n                                                                        setPaidMoney(paidMoney + 10);\r\n                                                                    }\r\n                                                                }}\r\n                                                            >\r\n                                                                10\r\n                                                            </button>\r\n                                                        </div>\r\n                                                        <div className=\"col-12\">\r\n                                                            <button\r\n                                                                className=\"fk-settle-cal-btn t-bg-p t-text-white\"\r\n                                                                onClick={() => {\r\n                                                                    if (!returnMoneyUsd > 0) {\r\n                                                                        setPaidMoney(paidMoney + 20);\r\n                                                                    }\r\n                                                                }}\r\n                                                            >\r\n                                                                20\r\n                                                            </button>\r\n                                                        </div>\r\n                                                        <div className=\"col-12\">\r\n                                                            <button\r\n                                                                className=\"fk-settle-cal-btn t-bg-p t-text-white\"\r\n                                                                onClick={() => {\r\n                                                                    if (!returnMoneyUsd > 0) {\r\n                                                                        setPaidMoney(paidMoney + 50);\r\n                                                                    }\r\n                                                                }}\r\n                                                            >\r\n                                                                50\r\n                                                            </button>\r\n                                                        </div>\r\n                                                        <div className=\"col-12 mb-2\">\r\n                                                            <button\r\n                                                                className=\"fk-settle-cal-btn t-bg-p t-text-white\"\r\n                                                                onClick={() => {\r\n                                                                    if (!returnMoneyUsd > 0) {\r\n                                                                        setPaidMoney(paidMoney + 100);\r\n                                                                    }\r\n                                                                }}\r\n                                                            >\r\n                                                                100\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-10\">\r\n                                                    <div className=\"row g-2 h-100\">\r\n                                                        <div className=\"col-3\">\r\n                                                            <div className=\"row g-2 h-100\">\r\n                                                                <div className=\"col-12\">\r\n                                                                    <button\r\n                                                                        className=\"fk-settle-cal-btn t-bg-w\"\r\n                                                                        onClick={() => {\r\n                                                                            if (!returnMoneyUsd > 0) {\r\n                                                                                setPaidMoney(paidMoney + 1);\r\n                                                                            }\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        1\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                <div className=\"col-12\">\r\n                                                                    <button\r\n                                                                        className=\"fk-settle-cal-btn t-bg-w\"\r\n                                                                        onClick={() => {\r\n                                                                            if (!returnMoneyUsd > 0) {\r\n                                                                                setPaidMoney(paidMoney + 4);\r\n                                                                            }\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        4\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                <div className=\"col-12\">\r\n                                                                    <button\r\n                                                                        className=\"fk-settle-cal-btn t-bg-w\"\r\n                                                                        onClick={() => {\r\n                                                                            if (!returnMoneyUsd > 0) {\r\n                                                                                setPaidMoney(paidMoney + 7);\r\n                                                                            }\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        7\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                <div className=\"col-12\">\r\n                                                                    <button\r\n                                                                        className=\"fk-settle-cal-btn t-bg-p t-text-white\"\r\n                                                                        onClick={() => {\r\n                                                                            if (!returnMoneyUsd > 0) {\r\n                                                                                setPaidMoney(paidMoney + 500);\r\n                                                                            }\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        500\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"col-3\">\r\n                                                            <div className=\"row g-2 h-100\">\r\n                                                                <div className=\"col-12\">\r\n                                                                    <button\r\n                                                                        className=\"fk-settle-cal-btn t-bg-w\"\r\n                                                                        onClick={() => {\r\n                                                                            if (!returnMoneyUsd > 0) {\r\n                                                                                setPaidMoney(paidMoney + 2);\r\n                                                                            }\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        2\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                <div className=\"col-12\">\r\n                                                                    <button\r\n                                                                        className=\"fk-settle-cal-btn t-bg-w\"\r\n                                                                        onClick={() => {\r\n                                                                            if (!returnMoneyUsd > 0) {\r\n                                                                                setPaidMoney(paidMoney + 5);\r\n                                                                            }\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        5\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                <div className=\"col-12\">\r\n                                                                    <button\r\n                                                                        className=\"fk-settle-cal-btn t-bg-w\"\r\n                                                                        onClick={() => {\r\n                                                                            if (!returnMoneyUsd > 0) {\r\n                                                                                setPaidMoney(paidMoney + 8);\r\n                                                                            }\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        8\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                <div className=\"col-12\">\r\n                                                                    <button\r\n                                                                        className=\"fk-settle-cal-btn t-bg-p t-text-white\"\r\n                                                                        onClick={() => {\r\n                                                                            if (!returnMoneyUsd > 0) {\r\n                                                                                setPaidMoney(paidMoney + 1000);\r\n                                                                            }\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        1000\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"col-3\">\r\n                                                            <div className=\"row g-2 h-100\">\r\n                                                                <div className=\"col-12\">\r\n                                                                    <button\r\n                                                                        className=\"fk-settle-cal-btn t-bg-w\"\r\n                                                                        onClick={() => {\r\n                                                                            if (!returnMoneyUsd > 0) {\r\n                                                                                setPaidMoney(paidMoney + 3);\r\n                                                                            }\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        3\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                <div className=\"col-12\">\r\n                                                                    <button\r\n                                                                        className=\"fk-settle-cal-btn t-bg-w\"\r\n                                                                        onClick={() => {\r\n                                                                            if (!returnMoneyUsd > 0) {\r\n                                                                                setPaidMoney(paidMoney + 6);\r\n                                                                            }\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        6\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                <div className=\"col-12\">\r\n                                                                    <button\r\n                                                                        className=\"fk-settle-cal-btn t-bg-w\"\r\n                                                                        onClick={() => {\r\n                                                                            if (!returnMoneyUsd > 0) {\r\n                                                                                setPaidMoney(paidMoney + 9);\r\n                                                                            }\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        9\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                <div className=\"col-12\">\r\n                                                                    <button\r\n                                                                        className=\"fk-settle-cal-btn  t-bg-d t-text-white\"\r\n                                                                        onClick={() => {\r\n                                                                            setPaidMoney(0);\r\n                                                                            setReturnMoneyUsd(0);\r\n                                                                            setOrderDetails({\r\n                                                                                ...orderDetails,\r\n                                                                                payment_type: null,\r\n                                                                            });\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        C\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"col-3\">\r\n                                                            <div className=\"row g-2 h-100\">\r\n                                                                <div className=\"col-12\">\r\n                                                                    <button\r\n                                                                        className=\"fk-settle-cal-btn t-text-white t-bg-ac text-capitalize\"\r\n                                                                        onClick={() => {\r\n                                                                            let theP = parseFloat(\r\n                                                                                formatPrice(totalPayable)\r\n                                                                            );\r\n                                                                            setPaidMoney(theP);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        all\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                <div className=\"col-12\">\r\n                                                                    <button\r\n                                                                        className=\"fk-settle-cal-btn t-text-white t-bg-ac text-capitalize\"\r\n                                                                        onClick={() => {\r\n                                                                            if (!returnMoneyUsd > 0) {\r\n                                                                                let theP = formatPrice(\r\n                                                                                    parseFloat(totalPayable) / 2\r\n                                                                                );\r\n                                                                                setPaidMoney(parseFloat(theP));\r\n                                                                            }\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        1/2\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                <div className=\"col-12\">\r\n                                                                    <button\r\n                                                                        className=\"fk-settle-cal-btn t-text-white t-bg-ac text-capitalize\"\r\n                                                                        onClick={() => {\r\n                                                                            if (!returnMoneyUsd > 0) {\r\n                                                                                let theP = formatPrice(\r\n                                                                                    parseFloat(totalPayable) / 3\r\n                                                                                );\r\n                                                                                setPaidMoney(parseFloat(theP));\r\n                                                                            }\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        1/3\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                <div className=\"col-12\">\r\n                                                                    <button\r\n                                                                        className=\"fk-settle-cal-btn bg-primary t-text-white t-bg-r text-capitalize\"\r\n                                                                        onClick={!loading && handleSettleOrder}\r\n                                                                    >\r\n                                                                        {!loading ? _t(t(\"settle\")) : _t(t(\"wait\"))}\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-3\">\r\n                                        <div className=\"d-flex flex-column justify-content-center t-mt-15\">\r\n                                            <div className=\"fk-settle__pay\" data-simplebar>\r\n                                                <div className=\"row gx-3\">\r\n                                                    <div className=\"col-12\">\r\n                                                        {/* POS Navigation will ber here */}\r\n                                                        <ul className=\"t-list fk-pos-nav list-group\">\r\n                                                            <li className=\"fk-pos-nav__list\">\r\n                                                                <button\r\n                                                                    type=\"button\"\r\n                                                                    onClick={() => {\r\n                                                                        setShowSettle(false);\r\n                                                                    }}\r\n                                                                    className=\"w-100 t-text-dark t-heading-font btn alert alert-danger font-weight-bold text-uppercase py-3 mb-3\"\r\n                                                                >\r\n                                                                    Go back\r\n                                                                </button>\r\n                                                            </li>\r\n                                                            {/* paymentTypes */}\r\n                                                            {paymentTypeForSearch &&\r\n                                                                paymentTypeForSearch.map(\r\n                                                                    (groupItem, groupIndex) => {\r\n                                                                        return (\r\n                                                                            <li\r\n                                                                                className=\"fk-pos-nav__list\"\r\n                                                                                key={groupIndex}\r\n                                                                            >\r\n                                                                                <button\r\n                                                                                    type=\"button\"\r\n                                                                                    //set active or !\r\n                                                                                    className={`w-100 t-text-dark t-heading-font btn btn-outline-danger font-weight-bold text-uppercase py-3 ${orderDetails &&\r\n                                                                                        orderDetails.payment_type !==\r\n                                                                                        null &&\r\n                                                                                        orderDetails.payment_type[0].id ===\r\n                                                                                        groupItem.id\r\n                                                                                        ? \"active\"\r\n                                                                                        : \"\"\r\n                                                                                        }`}\r\n                                                                                    onClick={() => {\r\n                                                                                        handleSetpaymentTypeSingle(\r\n                                                                                            groupItem\r\n                                                                                        );\r\n                                                                                    }}\r\n                                                                                >\r\n                                                                                    {groupItem.name}\r\n                                                                                </button>\r\n                                                                            </li>\r\n                                                                        );\r\n                                                                    }\r\n                                                                )}\r\n                                                            {/* paymentTypes */}\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditSubmittedOrder;\r\n"]},"metadata":{},"sourceType":"module"}