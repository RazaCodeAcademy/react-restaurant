{"ast":null,"code":"var _jsxFileName = \"/Users/raza/Downloads/khadyo_source_code/client/src/resources/restaurant/auth/profile/UpdateProfile.js\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"; //axios and base url\n\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../../../BaseUrl\"; //functions\n\nimport { _t, getCookie, pageLoading, deleteCookie } from \"../../../../functions/Functions\";\nimport { useTranslation } from \"react-i18next\"; //3rd party packages\n\nimport { Helmet } from \"react-helmet\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\"; //importing context consumer here\n\nimport { UserContext } from \"../../../../contexts/User\";\nimport { SettingsContext } from \"../../../../contexts/Settings\";\n\nconst UpdateProfile = () => {\n  //getting context values here\n  const {\n    //common\n    loading,\n    setLoading,\n    dataPaginating\n  } = useContext(SettingsContext);\n  const {\n    authUserInfo,\n    setAuthUserInfo\n  } = useContext(UserContext);\n  const history = useHistory();\n  const {\n    t\n  } = useTranslation(); //new adminStaff\n\n  let [newAdminStaff, setAdminStaff] = useState({\n    phn_no: \"\",\n    password: \"\",\n    password_confirmation: \"\",\n    image: null,\n    edit: false,\n    uploading: false\n  }); //useEffect\n\n  useEffect(() => {\n    setLoading(true);\n\n    if (authUserInfo && authUserInfo.details) {\n      setAdminStaff({ ...newAdminStaff,\n        phn_no: authUserInfo.details.phn_no\n      });\n    }\n\n    setTimeout(() => {\n      setLoading(false);\n    }, 500);\n  }, [authUserInfo]); //set image hook\n\n  const handleAdminStaffImage = e => {\n    setAdminStaff({ ...newAdminStaff,\n      [e.target.name]: e.target.files[0]\n    });\n  }; //set name, phn no hook\n\n\n  const handleSetNewAdminStaff = e => {\n    setAdminStaff({ ...newAdminStaff,\n      [e.target.name]: e.target.value\n    });\n  }; //set name, phn no hook\n\n\n  const handleUpdateAdminStaff = e => {\n    e.preventDefault();\n    const adminStaffUrl = BASE_URL + `/settings/update-profile`;\n    setLoading(true);\n    let formData = new FormData();\n    formData.append(\"phn_no\", newAdminStaff.phn_no);\n    formData.append(\"image\", newAdminStaff.image);\n    return axios.post(adminStaffUrl, formData, {\n      headers: {\n        Authorization: `Bearer ${getCookie()}`\n      }\n    }).then(() => {\n      setLoading(false);\n      setAuthUserInfo({ ...authUserInfo,\n        details: { ...authUserInfo.details,\n          phn_no: newAdminStaff.phn_no\n        }\n      });\n      setAdminStaff({ ...newAdminStaff,\n        password: \"\",\n        password_confirmation: \"\",\n        image: null\n      });\n      toast.success(`${_t(t(\"Profile updated\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }).catch(error => {\n      setLoading(false);\n\n      if (error && error.response.data.errors) {\n        if (error.response.data.errors.phn_no) {\n          error.response.data.errors.phn_no.forEach(item => {\n            if (item === \"An user exists with this phone number\") {\n              toast.error(`${_t(t(\"An user exists with this phone number\"))}`, {\n                position: \"bottom-center\",\n                autoClose: 10000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                className: \"text-center toast-notification\"\n              });\n            }\n          });\n        }\n\n        if (error.response.data.errors.image) {\n          error.response.data.errors.image.forEach(item => {\n            if (item === \"Please select a valid image file\") {\n              toast.error(`${_t(t(\"Please select a valid image file\"))}`, {\n                position: \"bottom-center\",\n                autoClose: 10000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                className: \"text-center toast-notification\"\n              });\n            }\n\n            if (item === \"Please select a file less than 5MB\") {\n              toast.error(`${_t(t(\"Please select a file less than 5MB\"))}`, {\n                position: \"bottom-center\",\n                autoClose: 10000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                className: \"text-center toast-notification\"\n              });\n            }\n          });\n        }\n      }\n    });\n  }; //set name, phn no hook\n\n\n  const handleUpdateAdminStaffPassword = e => {\n    e.preventDefault();\n    const adminStaffUrl = BASE_URL + `/settings/update-profile`;\n    setLoading(true);\n    let formData = new FormData();\n    formData.append(\"password\", newAdminStaff.password);\n    formData.append(\"password_confirmation\", newAdminStaff.password_confirmation);\n    return axios.post(adminStaffUrl, formData, {\n      headers: {\n        Authorization: `Bearer ${getCookie()}`\n      }\n    }).then(() => {\n      setLoading(false);\n      handleLogout();\n      toast.success(`${_t(t(\"Profile updated, please login to continue\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }).catch(error => {\n      setLoading(false);\n\n      if (error && error.response.data.errors) {\n        if (error.response.data.errors.password) {\n          error.response.data.errors.password.forEach(item => {\n            if (item === \"Password confirmation does not match\") {\n              toast.error(`${_t(t(\"Password confirmation does not match\"))}`, {\n                position: \"bottom-center\",\n                autoClose: 10000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                className: \"text-center toast-notification\"\n              });\n            }\n          });\n        }\n      }\n    });\n  }; //logout\n\n\n  const handleLogout = () => {\n    deleteCookie();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, _t(t(\"Update Password\")))), /*#__PURE__*/React.createElement(\"main\", {\n    id: \"main\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row t-mt-10 gx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 t-mb-30 mb-lg-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, loading === true ? pageLoading() : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-bg-white \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${dataPaginating && \"loading\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 align-items-center t-pt-15 t-pb-15 t-pl-15 t-pr-15 t-shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list fk-breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"fk-breadcrumb__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"t-link fk-breadcrumb__link text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 27\n    }\n  }, _t(t(\"Update Password\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-scroll--order-history profile-update-full\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5 t-pt-30 t-pl-15  t-pr-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card col-8 offset-2 mb-3 mb-md-0 p-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    key: \"fragment-permission-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUpdateAdminStaffPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 33\n    }\n  }, _t(t(\"Password\"))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    id: \"password\",\n    name: \"password\",\n    placeholder: _t(t(\"Password\")),\n    value: newAdminStaff.password || \"\",\n    onChange: handleSetNewAdminStaff,\n    required: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password_confirmation\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 33\n    }\n  }, _t(t(\"Confirm Password\"))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    id: \"password_confirmation\",\n    name: \"password_confirmation\",\n    placeholder: _t(t(\"Confirm Password\")),\n    value: newAdminStaff.password_confirmation || \"\",\n    required: true,\n    onChange: handleSetNewAdminStaff,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary xsm-text text-uppercase px-5 py-2 mb-2 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 33\n    }\n  }, _t(t(\"Update Password\"))))))))))))))));\n};\n\nexport default UpdateProfile;","map":{"version":3,"sources":["/Users/raza/Downloads/khadyo_source_code/client/src/resources/restaurant/auth/profile/UpdateProfile.js"],"names":["React","useEffect","useContext","useState","useHistory","axios","BASE_URL","_t","getCookie","pageLoading","deleteCookie","useTranslation","Helmet","toast","UserContext","SettingsContext","UpdateProfile","loading","setLoading","dataPaginating","authUserInfo","setAuthUserInfo","history","t","newAdminStaff","setAdminStaff","phn_no","password","password_confirmation","image","edit","uploading","details","setTimeout","handleAdminStaffImage","e","target","name","files","handleSetNewAdminStaff","value","handleUpdateAdminStaff","preventDefault","adminStaffUrl","formData","FormData","append","post","headers","Authorization","then","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","className","catch","error","response","data","errors","forEach","item","handleUpdateAdminStaffPassword","handleLogout"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../BaseUrl\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  pageLoading,\r\n  deleteCookie,\r\n} from \"../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//importing context consumer here\r\nimport { UserContext } from \"../../../../contexts/User\";\r\nimport { SettingsContext } from \"../../../../contexts/Settings\";\r\n\r\nconst UpdateProfile = () => {\r\n  //getting context values here\r\n  const {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n    dataPaginating,\r\n  } = useContext(SettingsContext);\r\n\r\n  const { authUserInfo, setAuthUserInfo } = useContext(UserContext);\r\n\r\n  const history = useHistory();\r\n  const { t } = useTranslation();\r\n\r\n  //new adminStaff\r\n  let [newAdminStaff, setAdminStaff] = useState({\r\n    phn_no: \"\",\r\n    password: \"\",\r\n    password_confirmation: \"\",\r\n    image: null,\r\n    edit: false,\r\n    uploading: false,\r\n  });\r\n\r\n  //useEffect\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    if (authUserInfo && authUserInfo.details) {\r\n      setAdminStaff({\r\n        ...newAdminStaff,\r\n        phn_no: authUserInfo.details.phn_no,\r\n      });\r\n    }\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 500);\r\n  }, [authUserInfo]);\r\n\r\n  //set image hook\r\n  const handleAdminStaffImage = (e) => {\r\n    setAdminStaff({\r\n      ...newAdminStaff,\r\n      [e.target.name]: e.target.files[0],\r\n    });\r\n  };\r\n\r\n  //set name, phn no hook\r\n  const handleSetNewAdminStaff = (e) => {\r\n    setAdminStaff({ ...newAdminStaff, [e.target.name]: e.target.value });\r\n  };\r\n  //set name, phn no hook\r\n  const handleUpdateAdminStaff = (e) => {\r\n    e.preventDefault();\r\n    const adminStaffUrl = BASE_URL + `/settings/update-profile`;\r\n    setLoading(true);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"phn_no\", newAdminStaff.phn_no);\r\n    formData.append(\"image\", newAdminStaff.image);\r\n\r\n    return axios\r\n      .post(adminStaffUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then(() => {\r\n        setLoading(false);\r\n        setAuthUserInfo({\r\n          ...authUserInfo,\r\n          details: { ...authUserInfo.details, phn_no: newAdminStaff.phn_no },\r\n        });\r\n        setAdminStaff({\r\n          ...newAdminStaff,\r\n          password: \"\",\r\n          password_confirmation: \"\",\r\n          image: null,\r\n        });\r\n        toast.success(`${_t(t(\"Profile updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error && error.response.data.errors) {\r\n          if (error.response.data.errors.phn_no) {\r\n            error.response.data.errors.phn_no.forEach((item) => {\r\n              if (item === \"An user exists with this phone number\") {\r\n                toast.error(\r\n                  `${_t(t(\"An user exists with this phone number\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          }\r\n\r\n          if (error.response.data.errors.image) {\r\n            error.response.data.errors.image.forEach((item) => {\r\n              if (item === \"Please select a valid image file\") {\r\n                toast.error(`${_t(t(\"Please select a valid image file\"))}`, {\r\n                  position: \"bottom-center\",\r\n                  autoClose: 10000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  className: \"text-center toast-notification\",\r\n                });\r\n              }\r\n              if (item === \"Please select a file less than 5MB\") {\r\n                toast.error(`${_t(t(\"Please select a file less than 5MB\"))}`, {\r\n                  position: \"bottom-center\",\r\n                  autoClose: 10000,\r\n                  hideProgressBar: false,\r\n                  closeOnClick: true,\r\n                  pauseOnHover: true,\r\n                  className: \"text-center toast-notification\",\r\n                });\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //set name, phn no hook\r\n  const handleUpdateAdminStaffPassword = (e) => {\r\n    e.preventDefault();\r\n    const adminStaffUrl = BASE_URL + `/settings/update-profile`;\r\n    setLoading(true);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"password\", newAdminStaff.password);\r\n    formData.append(\r\n      \"password_confirmation\",\r\n      newAdminStaff.password_confirmation\r\n    );\r\n    return axios\r\n      .post(adminStaffUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then(() => {\r\n        setLoading(false);\r\n        handleLogout();\r\n        toast.success(`${_t(t(\"Profile updated, please login to continue\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error && error.response.data.errors) {\r\n          if (error.response.data.errors.password) {\r\n            error.response.data.errors.password.forEach((item) => {\r\n              if (item === \"Password confirmation does not match\") {\r\n                toast.error(\r\n                  `${_t(t(\"Password confirmation does not match\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //logout\r\n  const handleLogout = () => {\r\n    deleteCookie();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Update Password\"))}</title>\r\n      </Helmet>\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            <div className=\"col-12 t-mb-30 mb-lg-0\">\r\n              {loading === true ? (\r\n                pageLoading()\r\n              ) : (\r\n                <div className=\"t-bg-white \">\r\n                  {/* next page data spin loading */}\r\n                  <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                  {/* spin loading ends */}\r\n                  <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15 t-pl-15 t-pr-15 t-shadow\">\r\n                    <div className=\"col-12\">\r\n                      <ul className=\"t-list fk-breadcrumb\">\r\n                        <li className=\"fk-breadcrumb__list\">\r\n                          <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                            {_t(t(\"Update Password\"))}\r\n                          </span>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className=\"fk-scroll--order-history profile-update-full\"\r\n                    data-simplebar\r\n                  >\r\n                    <div className=\"mt-5 t-pt-30 t-pl-15  t-pr-15\">\r\n                      <div className=\"\">\r\n                        <div className=\"card col-8 offset-2 mb-3 mb-md-0 p-5\">\r\n                          <div key=\"fragment-permission-2\">\r\n                            <form onSubmit={handleUpdateAdminStaffPassword}>\r\n                              <div className=\"mt-3\">\r\n                                <label\r\n                                  htmlFor=\"password\"\r\n                                  className=\"form-label\"\r\n                                >\r\n                                  {_t(t(\"Password\"))}\r\n                                </label>\r\n                                <input\r\n                                  type=\"password\"\r\n                                  className=\"form-control\"\r\n                                  id=\"password\"\r\n                                  name=\"password\"\r\n                                  placeholder={_t(t(\"Password\"))}\r\n                                  value={newAdminStaff.password || \"\"}\r\n                                  onChange={handleSetNewAdminStaff}\r\n                                  required\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                              </div>\r\n\r\n                              <div className=\"mt-3\">\r\n                                <label\r\n                                  htmlFor=\"password_confirmation\"\r\n                                  className=\"form-label\"\r\n                                >\r\n                                  {_t(t(\"Confirm Password\"))}\r\n                                </label>\r\n                                <input\r\n                                  type=\"password\"\r\n                                  className=\"form-control\"\r\n                                  id=\"password_confirmation\"\r\n                                  name=\"password_confirmation\"\r\n                                  placeholder={_t(t(\"Confirm Password\"))}\r\n                                  value={\r\n                                    newAdminStaff.password_confirmation || \"\"\r\n                                  }\r\n                                  required\r\n                                  onChange={handleSetNewAdminStaff}\r\n                                  autoComplete=\"off\"\r\n                                />\r\n                              </div>\r\n\r\n                              <div className=\"mt-4\">\r\n                                <button\r\n                                  type=\"submit\"\r\n                                  className=\"btn btn-primary xsm-text text-uppercase px-5 py-2 mb-2 mb-md-0\"\r\n                                >\r\n                                  {_t(t(\"Update Password\"))}\r\n                                </button>\r\n                              </div>\r\n                            </form>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n"]},"metadata":{},"sourceType":"module"}