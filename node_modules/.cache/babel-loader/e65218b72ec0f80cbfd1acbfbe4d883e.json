{"ast":null,"code":"var _jsxFileName = \"/Users/raza/Downloads/khadyo_source_code/client/src/resources/restaurant/auth/manage/restaurantDetails/TableCrud.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"; //pages & includes\n\nimport ManageSidebar from \"../ManageSidebar\"; //functions\n\nimport { _t, getCookie, modalLoading, tableLoading, pagination, paginationLoading, showingData, searchedShowingData } from \"../../../../../functions/Functions\";\nimport { useTranslation } from \"react-i18next\"; //axios and base url\n\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../../../../BaseUrl\"; //3rd party packages\n\nimport { Helmet } from \"react-helmet\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Select from \"react-select\";\nimport makeAnimated from \"react-select/animated\"; //context consumer\n\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\nimport { RestaurantContext } from \"../../../../../contexts/Restaurant\";\n\nconst TableCrud = () => {\n  const {\n    t\n  } = useTranslation();\n  const history = useHistory(); //getting context values here\n\n  let {\n    //common\n    loading,\n    setLoading\n  } = useContext(SettingsContext);\n  let {\n    //branch\n    branchForSearch,\n    //tables\n    tableList,\n    setTableList,\n    setPaginatedTable,\n    setTableforSearch,\n    tableForSearch,\n    //pagination\n    dataPaginating\n  } = useContext(RestaurantContext); // States hook here\n  //new group\n\n  let [newTable, setNewTable] = useState({\n    name: \"\",\n    capacity: \"\",\n    branch: null,\n    selectedBranch: null,\n    edit: false,\n    editSlug: null,\n    uploading: false\n  }); //search result\n\n  let [searchedTable, setSearchedTable] = useState({\n    list: null,\n    searched: false\n  }); //useEffect == componentDidMount\n\n  useEffect(() => {}, []); //set name, capacity hook\n\n  const handleSetNewTable = e => {\n    setNewTable({ ...newTable,\n      [e.target.name]: e.target.value\n    });\n  }; //set branch hook\n\n\n  const handleSetBranch = branch => {\n    setNewTable({ ...newTable,\n      branch\n    });\n  }; //Save New table\n\n\n  const handleSaveNewTable = e => {\n    e.preventDefault();\n\n    if (newTable.branch !== null) {\n      setNewTable({ ...newTable,\n        uploading: true\n      });\n      const branchUrl = BASE_URL + `/settings/new-table`;\n      let formData = new FormData();\n      formData.append(\"name\", newTable.name);\n      formData.append(\"capacity\", newTable.capacity);\n      formData.append(\"branch_id\", newTable.branch.id);\n      return axios.post(branchUrl, formData, {\n        headers: {\n          Authorization: `Bearer ${getCookie()}`\n        }\n      }).then(res => {\n        setNewTable({\n          name: \"\",\n          capacity: \"\",\n          branch: null,\n          selectedBranch: null,\n          edit: false,\n          editSlug: null,\n          uploading: false\n        });\n        setTableList(res.data[0]);\n        setTableforSearch(res.data[1]);\n        setSearchedTable({ ...searchedTable,\n          list: res.data[1]\n        });\n        setLoading(false);\n        toast.success(`${_t(t(\"Table has been added\"))}`, {\n          position: \"bottom-center\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          className: \"text-center toast-notification\"\n        });\n      }).catch(error => {\n        setLoading(false);\n        setNewTable({ ...newTable,\n          uploading: false\n        });\n        toast.error(`${_t(t(\"Please try again\"))}`, {\n          position: \"bottom-center\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          className: \"text-center toast-notification\"\n        });\n      });\n    } else {\n      toast.error(`${_t(t(\"Please select a branch\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }\n  }; //set edit true & values\n\n\n  const handleSetEdit = slug => {\n    let table = tableForSearch.filter(item => {\n      return item.slug === slug;\n    });\n    let selectedOptionForBranch = null;\n\n    if (table[0].branch_id) {\n      selectedOptionForBranch = branchForSearch.filter(branchItem => {\n        return branchItem.id === parseInt(table[0].branch_id);\n      });\n    }\n\n    setNewTable({ ...newTable,\n      name: table[0].name,\n      capacity: table[0].capacity,\n      selectedBranch: selectedOptionForBranch[0] || null,\n      editSlug: table[0].slug,\n      edit: true\n    });\n  }; //update table\n\n\n  const handleUpdateTable = e => {\n    e.preventDefault();\n    setNewTable({ ...newTable,\n      uploading: true\n    });\n    const branchUrl = BASE_URL + `/settings/update-table`;\n    let formData = new FormData();\n    formData.append(\"name\", newTable.name);\n    formData.append(\"capacity\", newTable.capacity);\n\n    if (newTable.branch !== null) {\n      formData.append(\"branch_id\", newTable.branch.id);\n    }\n\n    formData.append(\"editSlug\", newTable.editSlug);\n    return axios.post(branchUrl, formData, {\n      headers: {\n        Authorization: `Bearer ${getCookie()}`\n      }\n    }).then(res => {\n      setNewTable({\n        name: \"\",\n        capacity: \"\",\n        branch: null,\n        selectedBranch: null,\n        edit: false,\n        editSlug: null,\n        uploading: false\n      });\n      setTableList(res.data[0]);\n      setTableforSearch(res.data[1]);\n      setSearchedTable({ ...searchedTable,\n        list: res.data[1]\n      });\n      setLoading(false);\n      toast.success(`${_t(t(\"Table has been updated\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }).catch(() => {\n      setLoading(false);\n      setNewTable({ ...newTable,\n        uploading: false\n      });\n      toast.error(`${_t(t(\"Please try again\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    });\n  }; //search table here\n\n\n  const handleSearch = e => {\n    let searchInput = e.target.value.toLowerCase();\n\n    if (searchInput.length === 0) {\n      setSearchedTable({ ...searchedTable,\n        searched: false\n      });\n    } else {\n      let searchedList = tableForSearch.filter(item => {\n        let lowerCaseItemName = item.name.toLowerCase();\n        let lowerCaseItemCapacity = item.capacity !== null && item.capacity.toLowerCase();\n        let lowerCaseItemBranch = item.branch_name !== null && item.branch_name.toLowerCase();\n        return lowerCaseItemName.includes(searchInput) || lowerCaseItemCapacity && lowerCaseItemCapacity.includes(searchInput) || lowerCaseItemBranch && lowerCaseItemBranch.includes(searchInput);\n      });\n      setSearchedTable({ ...searchedTable,\n        list: searchedList,\n        searched: true\n      });\n    }\n  }; //delete confirmation modal of table\n\n\n  const handleDeleteConfirmation = slug => {\n    confirmAlert({\n      customUI: ({\n        onClose\n      }) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card card-body\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }\n        }, _t(t(\"Are you sure?\"))), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }\n        }, _t(t(\"You want to delete this?\"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex justify-content-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => {\n            handleDeleteTable(slug);\n            onClose();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }\n        }, _t(t(\"Yes, delete it!\"))), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-success ml-2 px-3\",\n          onClick: onClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }\n        }, _t(t(\"No\")))));\n      }\n    });\n  }; //delete table here\n\n\n  const handleDeleteTable = slug => {\n    setLoading(true);\n    const branchUrl = BASE_URL + `/settings/delete-table/${slug}`;\n    return axios.get(branchUrl, {\n      headers: {\n        Authorization: `Bearer ${getCookie()}`\n      }\n    }).then(res => {\n      setTableList(res.data[0]);\n      setTableforSearch(res.data[1]);\n      setSearchedTable({ ...searchedTable,\n        list: res.data[1]\n      });\n      setLoading(false);\n      toast.success(`${_t(t(\"Table has been deleted successfully\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }).catch(() => {\n      setLoading(false);\n      toast.error(`${_t(t(\"Please try again\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }\n  }, _t(t(\"Tables\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal fade\",\n    id: \"addTable\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog modal-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-sm-card__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-capitalize fk-sm-card__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 17\n    }\n  }, !newTable.edit ? _t(t(\"Add new table\")) : _t(t(\"Update table\")))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }\n  }, newTable.uploading === false ? /*#__PURE__*/React.createElement(\"div\", {\n    key: \"fragment-table-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: !newTable.edit ? handleSaveNewTable : handleUpdateTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 23\n    }\n  }, _t(t(\"Name\")), \" \", /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 25\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"name\",\n    name: \"name\",\n    placeholder: \"e.g. Table 01\",\n    value: newTable.name || \"\",\n    required: true,\n    onChange: handleSetNewTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-label mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 23\n    }\n  }, _t(t(\"Select a branch\")), \" \", newTable.edit ? /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 27\n    }\n  }, \"( \", _t(t(\"Leave empty if you do not want to change branch\")), \" )\") : /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 27\n    }\n  }, \"*\")), newTable.edit && newTable.selectedBranch !== null && /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group list-group-horizontal-sm row col-12 mb-2 ml-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-group-item col-12 col-md-3 bg-success rounded-sm py-1 px-2 my-1 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 27\n    }\n  }, newTable.selectedBranch.name)), /*#__PURE__*/React.createElement(Select, {\n    options: branchForSearch,\n    components: makeAnimated(),\n    getOptionLabel: option => option.name,\n    getOptionValue: option => option.name,\n    className: \"basic-multi-select\",\n    classNamePrefix: \"select\",\n    onChange: handleSetBranch,\n    placeholder: _t(t(\"Please select a branch\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"capacity\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 23\n    }\n  }, _t(t(\"Guest capacity\"))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"form-control\",\n    id: \"capacity\",\n    name: \"capacity\",\n    placeholder: \"e.g. 05\",\n    min: \"1\",\n    value: newTable.capacity || \"\",\n    onChange: handleSetNewTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success w-100 xsm-text text-uppercase t-width-max\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 27\n    }\n  }, !newTable.edit ? _t(t(\"Save\")) : _t(t(\"Update\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary w-100 xsm-text text-uppercase t-width-max\",\n    \"data-dismiss\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 27\n    }\n  }, _t(t(\"Close\")))))))) : /*#__PURE__*/React.createElement(\"div\", {\n    key: \"fragment2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center text-primary font-weight-bold text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 19\n    }\n  }, _t(t(\"Please wait\"))), modalLoading(3), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-success w-100 xsm-text text-uppercase t-width-max\",\n    onClick: e => {\n      e.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 25\n    }\n  }, !newTable.edit ? _t(t(\"Save\")) : _t(t(\"Update\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary w-100 xsm-text text-uppercase t-width-max\",\n    \"data-dismiss\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 25\n    }\n  }, _t(t(\"Close\"))))))))))), /*#__PURE__*/React.createElement(\"main\", {\n    id: \"main\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row t-mt-10 gx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ManageSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-scroll--pos-menu\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-pl-15 t-pr-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 19\n    }\n  }, newTable.uploading === true || loading === true ? tableLoading() : /*#__PURE__*/React.createElement(\"div\", {\n    key: \"fragment3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${dataPaginating && \"loading\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 align-items-center t-pt-15 t-pb-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-lg-5 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list fk-breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"fk-breadcrumb__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"t-link fk-breadcrumb__link text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 33\n    }\n  }, !searchedTable.searched ? _t(t(\"Table List\")) : _t(t(\"Search Result\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-lg-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-3 align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-9 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control border-0 form-control--light-1 rounded-0\",\n    placeholder: _t(t(\"Search\")) + \"..\",\n    onChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-search\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3 text-md-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary xsm-text text-uppercase btn-lg btn-block\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#addTable\",\n    onClick: () => {\n      setNewTable({ ...newTable,\n        branch: null,\n        edit: false,\n        uploading: false\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 33\n    }\n  }, _t(t(\"add new\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-bordered table-hover min-table-height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 33\n    }\n  }, _t(t(\"S/L\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 33\n    }\n  }, _t(t(\"Name\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 33\n    }\n  }, _t(t(\"Capacity\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 33\n    }\n  }, _t(t(\"Branch\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 33\n    }\n  }, _t(t(\"Action\"))))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 29\n    }\n  }, !searchedTable.searched ? [tableList && [tableList.data.length === 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"row\",\n    colSpan: \"6\",\n    className: \"xsm-text align-middle text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 43\n    }\n  }, _t(t(\"No data available\")))) : tableList.data.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"align-middle\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 47\n      }\n    }, index + 1 + (tableList.current_page - 1) * tableList.per_page), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 47\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 47\n      }\n    }, item.capacity || \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 47\n      }\n    }, item.branch_name || \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn t-bg-clear t-text-dark--light-40\",\n      type: \"button\",\n      \"data-toggle\": \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-ellipsis-h\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text text-capitalize\",\n      onClick: () => {\n        setNewTable({ ...newTable,\n          branch: null\n        });\n        handleSetEdit(item.slug);\n      },\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#addTable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 57\n      }\n    })), _t(t(\"Edit\"))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text text-capitalize\",\n      onClick: () => {\n        handleDeleteConfirmation(item.slug);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 57\n      }\n    })), _t(t(\"Delete\")))))));\n  })]] : [\n  /* searched data, logic === haveData*/\n  searchedTable && [searchedTable.list.length === 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"row\",\n    colSpan: \"6\",\n    className: \"xsm-text align-middle text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 43\n    }\n  }, _t(t(\"No data available\")))) : searchedTable.list.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"align-middle\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 49\n      }\n    }, index + 1 + (tableList.current_page - 1) * tableList.per_page), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 49\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759,\n        columnNumber: 49\n      }\n    }, item.capacity || \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 49\n      }\n    }, item.branch_name || \"-\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn t-bg-clear t-text-dark--light-40\",\n      type: \"button\",\n      \"data-toggle\": \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-ellipsis-h\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 55\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text text-capitalize\",\n      onClick: () => {\n        setNewTable({ ...newTable,\n          branch: null\n        });\n        handleSetEdit(item.slug);\n      },\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#addTable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 59\n      }\n    })), _t(t(\"Edit\"))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text text-capitalize\",\n      onClick: () => {\n        handleDeleteConfirmation(item.slug);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 59\n      }\n    })), _t(t(\"Delete\")))))));\n  })]]))))))), newTable.uploading === true || loading === true ? paginationLoading() : [// logic === !searched\n  !searchedTable.searched ? /*#__PURE__*/React.createElement(\"div\", {\n    key: \"fragment4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 835,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-bg-white mt-1 t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center t-pl-15 t-pr-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-7 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 29\n    }\n  }, pagination(tableList, setPaginatedTable)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list d-flex justify-content-md-end align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"t-list__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-inline-block sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 35\n    }\n  }, showingData(tableList)))))))) :\n  /*#__PURE__*/\n  // if searched\n  React.createElement(\"div\", {\n    className: \"t-bg-white mt-1 t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 856,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center t-pl-15 t-pr-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-7 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 858,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 859,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"t-list__item no-pagination-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 860,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-sm\",\n    onClick: () => setSearchedTable({ ...searchedTable,\n      searched: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 33\n    }\n  }, _t(t(\"Clear Search\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 875,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list d-flex justify-content-md-end align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 876,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"t-list__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 877,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-inline-block sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 33\n    }\n  }, searchedShowingData(searchedTable, tableForSearch)))))))])))));\n};\n\nexport default TableCrud;","map":{"version":3,"sources":["/Users/raza/Downloads/khadyo_source_code/client/src/resources/restaurant/auth/manage/restaurantDetails/TableCrud.js"],"names":["React","useState","useContext","useEffect","useHistory","ManageSidebar","_t","getCookie","modalLoading","tableLoading","pagination","paginationLoading","showingData","searchedShowingData","useTranslation","axios","BASE_URL","Helmet","confirmAlert","toast","Select","makeAnimated","SettingsContext","RestaurantContext","TableCrud","t","history","loading","setLoading","branchForSearch","tableList","setTableList","setPaginatedTable","setTableforSearch","tableForSearch","dataPaginating","newTable","setNewTable","name","capacity","branch","selectedBranch","edit","editSlug","uploading","searchedTable","setSearchedTable","list","searched","handleSetNewTable","e","target","value","handleSetBranch","handleSaveNewTable","preventDefault","branchUrl","formData","FormData","append","id","post","headers","Authorization","then","res","data","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","className","catch","error","handleSetEdit","slug","table","filter","item","selectedOptionForBranch","branch_id","branchItem","parseInt","handleUpdateTable","handleSearch","searchInput","toLowerCase","length","searchedList","lowerCaseItemName","lowerCaseItemCapacity","lowerCaseItemBranch","branch_name","includes","handleDeleteConfirmation","customUI","onClose","handleDeleteTable","get","option","map","index","current_page","per_page"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  pagination,\r\n  paginationLoading,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\r\nimport { RestaurantContext } from \"../../../../../contexts/Restaurant\";\r\n\r\nconst TableCrud = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n  } = useContext(SettingsContext);\r\n\r\n  let {\r\n    //branch\r\n    branchForSearch,\r\n\r\n    //tables\r\n    tableList,\r\n    setTableList,\r\n    setPaginatedTable,\r\n    setTableforSearch,\r\n    tableForSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n  } = useContext(RestaurantContext);\r\n\r\n  // States hook here\r\n  //new group\r\n  let [newTable, setNewTable] = useState({\r\n    name: \"\",\r\n    capacity: \"\",\r\n    branch: null,\r\n    selectedBranch: null,\r\n    edit: false,\r\n    editSlug: null,\r\n    uploading: false,\r\n  });\r\n\r\n  //search result\r\n  let [searchedTable, setSearchedTable] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //set name, capacity hook\r\n  const handleSetNewTable = (e) => {\r\n    setNewTable({ ...newTable, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //set branch hook\r\n  const handleSetBranch = (branch) => {\r\n    setNewTable({ ...newTable, branch });\r\n  };\r\n\r\n  //Save New table\r\n  const handleSaveNewTable = (e) => {\r\n    e.preventDefault();\r\n    if (newTable.branch !== null) {\r\n      setNewTable({\r\n        ...newTable,\r\n        uploading: true,\r\n      });\r\n      const branchUrl = BASE_URL + `/settings/new-table`;\r\n      let formData = new FormData();\r\n      formData.append(\"name\", newTable.name);\r\n      formData.append(\"capacity\", newTable.capacity);\r\n      formData.append(\"branch_id\", newTable.branch.id);\r\n      return axios\r\n        .post(branchUrl, formData, {\r\n          headers: { Authorization: `Bearer ${getCookie()}` },\r\n        })\r\n        .then((res) => {\r\n          setNewTable({\r\n            name: \"\",\r\n            capacity: \"\",\r\n            branch: null,\r\n            selectedBranch: null,\r\n            edit: false,\r\n            editSlug: null,\r\n            uploading: false,\r\n          });\r\n          setTableList(res.data[0]);\r\n          setTableforSearch(res.data[1]);\r\n          setSearchedTable({\r\n            ...searchedTable,\r\n            list: res.data[1],\r\n          });\r\n          setLoading(false);\r\n          toast.success(`${_t(t(\"Table has been added\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          setNewTable({\r\n            ...newTable,\r\n            uploading: false,\r\n          });\r\n          toast.error(`${_t(t(\"Please try again\"))}`, {\r\n            position: \"bottom-center\",\r\n            autoClose: 10000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            className: \"text-center toast-notification\",\r\n          });\r\n        });\r\n    } else {\r\n      toast.error(`${_t(t(\"Please select a branch\"))}`, {\r\n        position: \"bottom-center\",\r\n        autoClose: 10000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        className: \"text-center toast-notification\",\r\n      });\r\n    }\r\n  };\r\n\r\n  //set edit true & values\r\n  const handleSetEdit = (slug) => {\r\n    let table = tableForSearch.filter((item) => {\r\n      return item.slug === slug;\r\n    });\r\n    let selectedOptionForBranch = null;\r\n    if (table[0].branch_id) {\r\n      selectedOptionForBranch = branchForSearch.filter((branchItem) => {\r\n        return branchItem.id === parseInt(table[0].branch_id);\r\n      });\r\n    }\r\n    setNewTable({\r\n      ...newTable,\r\n      name: table[0].name,\r\n      capacity: table[0].capacity,\r\n      selectedBranch: selectedOptionForBranch[0] || null,\r\n      editSlug: table[0].slug,\r\n      edit: true,\r\n    });\r\n  };\r\n\r\n  //update table\r\n  const handleUpdateTable = (e) => {\r\n    e.preventDefault();\r\n    setNewTable({\r\n      ...newTable,\r\n      uploading: true,\r\n    });\r\n    const branchUrl = BASE_URL + `/settings/update-table`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newTable.name);\r\n    formData.append(\"capacity\", newTable.capacity);\r\n\r\n    if (newTable.branch !== null) {\r\n      formData.append(\"branch_id\", newTable.branch.id);\r\n    }\r\n    formData.append(\"editSlug\", newTable.editSlug);\r\n    return axios\r\n      .post(branchUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewTable({\r\n          name: \"\",\r\n          capacity: \"\",\r\n          branch: null,\r\n          selectedBranch: null,\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setTableList(res.data[0]);\r\n        setTableforSearch(res.data[1]);\r\n        setSearchedTable({\r\n          ...searchedTable,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Table has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        setNewTable({\r\n          ...newTable,\r\n          uploading: false,\r\n        });\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  //search table here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedTable({ ...searchedTable, searched: false });\r\n    } else {\r\n      let searchedList = tableForSearch.filter((item) => {\r\n        let lowerCaseItemName = item.name.toLowerCase();\r\n        let lowerCaseItemCapacity =\r\n          item.capacity !== null && item.capacity.toLowerCase();\r\n        let lowerCaseItemBranch =\r\n          item.branch_name !== null && item.branch_name.toLowerCase();\r\n        return (\r\n          lowerCaseItemName.includes(searchInput) ||\r\n          (lowerCaseItemCapacity &&\r\n            lowerCaseItemCapacity.includes(searchInput)) ||\r\n          (lowerCaseItemBranch && lowerCaseItemBranch.includes(searchInput))\r\n        );\r\n      });\r\n      setSearchedTable({\r\n        ...searchedTable,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //delete confirmation modal of table\r\n  const handleDeleteConfirmation = (slug) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleDeleteTable(slug);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //delete table here\r\n  const handleDeleteTable = (slug) => {\r\n    setLoading(true);\r\n    const branchUrl = BASE_URL + `/settings/delete-table/${slug}`;\r\n    return axios\r\n      .get(branchUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setTableList(res.data[0]);\r\n        setTableforSearch(res.data[1]);\r\n        setSearchedTable({\r\n          ...searchedTable,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Table has been deleted successfully\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Tables\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Add modal */}\r\n      <div className=\"modal fade\" id=\"addTable\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {!newTable.edit\r\n                    ? _t(t(\"Add new table\"))\r\n                    : _t(t(\"Update table\"))}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {newTable.uploading === false ? (\r\n                <div key=\"fragment-table-1\">\r\n                  <form\r\n                    onSubmit={\r\n                      !newTable.edit ? handleSaveNewTable : handleUpdateTable\r\n                    }\r\n                  >\r\n                    <div>\r\n                      <label htmlFor=\"name\" className=\"form-label\">\r\n                        {_t(t(\"Name\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"e.g. Table 01\"\r\n                        value={newTable.name || \"\"}\r\n                        required\r\n                        onChange={handleSetNewTable}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label className=\"form-label mb-0\">\r\n                        {_t(t(\"Select a branch\"))}{\" \"}\r\n                        {newTable.edit ? (\r\n                          <small className=\"text-primary\">\r\n                            {\"( \"}\r\n                            {_t(\r\n                              t(\r\n                                \"Leave empty if you do not want to change branch\"\r\n                              )\r\n                            )}\r\n                            {\" )\"}\r\n                          </small>\r\n                        ) : (\r\n                          <small className=\"text-primary\">*</small>\r\n                        )}\r\n                      </label>\r\n                      {newTable.edit && newTable.selectedBranch !== null && (\r\n                        <ul className=\"list-group list-group-horizontal-sm row col-12 mb-2 ml-md-1\">\r\n                          <li className=\"list-group-item col-12 col-md-3 bg-success rounded-sm py-1 px-2 my-1 text-center\">\r\n                            {newTable.selectedBranch.name}\r\n                          </li>\r\n                        </ul>\r\n                      )}\r\n                      <Select\r\n                        options={branchForSearch}\r\n                        components={makeAnimated()}\r\n                        getOptionLabel={(option) => option.name}\r\n                        getOptionValue={(option) => option.name}\r\n                        className=\"basic-multi-select\"\r\n                        classNamePrefix=\"select\"\r\n                        onChange={handleSetBranch}\r\n                        placeholder={_t(t(\"Please select a branch\"))}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                      <label htmlFor=\"capacity\" className=\"form-label\">\r\n                        {_t(t(\"Guest capacity\"))}\r\n                      </label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        id=\"capacity\"\r\n                        name=\"capacity\"\r\n                        placeholder=\"e.g. 05\"\r\n                        min=\"1\"\r\n                        value={newTable.capacity || \"\"}\r\n                        onChange={handleSetNewTable}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          >\r\n                            {!newTable.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                            data-dismiss=\"modal\"\r\n                          >\r\n                            {_t(t(\"Close\"))}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(3)}\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          {!newTable.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                          data-dismiss=\"modal\"\r\n                        >\r\n                          {_t(t(\"Close\"))}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Add modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* Loading effect */}\r\n                    {newTable.uploading === true || loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"fragment3\">\r\n                        {/* next page data spin loading */}\r\n                        <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                        {/* spin loading ends */}\r\n\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {!searchedTable.searched\r\n                                    ? _t(t(\"Table List\"))\r\n                                    : _t(t(\"Search Result\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\">\r\n                              {/* Search group */}\r\n                              <div className=\"col-md-9 t-mb-15 mb-md-0\">\r\n                                <div className=\"input-group\">\r\n                                  <div className=\"form-file\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                                      placeholder={_t(t(\"Search\")) + \"..\"}\r\n                                      onChange={handleSearch}\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                  >\r\n                                    <i\r\n                                      className=\"fa fa-search\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* Add group modal trigger button */}\r\n                              <div className=\"col-md-3 text-md-right\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-primary xsm-text text-uppercase btn-lg btn-block\"\r\n                                  data-toggle=\"modal\"\r\n                                  data-target=\"#addTable\"\r\n                                  onClick={() => {\r\n                                    setNewTable({\r\n                                      ...newTable,\r\n                                      branch: null,\r\n                                      edit: false,\r\n                                      uploading: false,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  {_t(t(\"add new\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* Table */}\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-bordered table-hover min-table-height\">\r\n                            <thead className=\"align-middle\">\r\n                              <tr>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"S/L\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Name\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Capacity\"))}\r\n                                </th>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Branch\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Action\"))}\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"align-middle\">\r\n                              {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                              {!searchedTable.searched\r\n                                ? [\r\n                                    tableList && [\r\n                                      tableList.data.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        tableList.data.map((item, index) => {\r\n                                          return (\r\n                                            <tr\r\n                                              className=\"align-middle\"\r\n                                              key={index}\r\n                                            >\r\n                                              <th\r\n                                                scope=\"row\"\r\n                                                className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                              >\r\n                                                {index +\r\n                                                  1 +\r\n                                                  (tableList.current_page - 1) *\r\n                                                    tableList.per_page}\r\n                                              </th>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.name}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                {item.capacity || \"-\"}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text align-middle text-center\">\r\n                                                {item.branch_name || \"-\"}\r\n                                              </td>\r\n\r\n                                              <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                <div className=\"dropdown\">\r\n                                                  <button\r\n                                                    className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                    type=\"button\"\r\n                                                    data-toggle=\"dropdown\"\r\n                                                  >\r\n                                                    <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                  </button>\r\n                                                  <div className=\"dropdown-menu\">\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        setNewTable({\r\n                                                          ...newTable,\r\n                                                          branch: null,\r\n                                                        });\r\n                                                        handleSetEdit(\r\n                                                          item.slug\r\n                                                        );\r\n                                                      }}\r\n                                                      data-toggle=\"modal\"\r\n                                                      data-target=\"#addTable\"\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-pencil\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Edit\"))}\r\n                                                    </button>\r\n\r\n                                                    <button\r\n                                                      className=\"dropdown-item sm-text text-capitalize\"\r\n                                                      onClick={() => {\r\n                                                        handleDeleteConfirmation(\r\n                                                          item.slug\r\n                                                        );\r\n                                                      }}\r\n                                                    >\r\n                                                      <span className=\"t-mr-8\">\r\n                                                        <i className=\"fa fa-trash\"></i>\r\n                                                      </span>\r\n                                                      {_t(t(\"Delete\"))}\r\n                                                    </button>\r\n                                                  </div>\r\n                                                </div>\r\n                                              </td>\r\n                                            </tr>\r\n                                          );\r\n                                        })\r\n                                      ),\r\n                                    ],\r\n                                  ]\r\n                                : [\r\n                                    /* searched data, logic === haveData*/\r\n                                    searchedTable && [\r\n                                      searchedTable.list.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        searchedTable.list.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (tableList.current_page -\r\n                                                      1) *\r\n                                                      tableList.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.capacity || \"-\"}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text align-middle text-center\">\r\n                                                  {item.branch_name || \"-\"}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          setNewTable({\r\n                                                            ...newTable,\r\n                                                            branch: null,\r\n                                                          });\r\n                                                          handleSetEdit(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addTable\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete\"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* pagination loading effect */}\r\n              {newTable.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedTable.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(tableList, setPaginatedTable)}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(tableList)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedTable({\r\n                                      ...searchedTable,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedTable,\r\n                                    tableForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableCrud;\r\n"]},"metadata":{},"sourceType":"module"}