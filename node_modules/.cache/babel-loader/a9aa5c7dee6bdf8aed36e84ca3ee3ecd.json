{"ast":null,"code":"import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\ni18n // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n// learn more: https://github.com/i18next/i18next-http-backend\n.use(Backend) // detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector) // pass the i18n instance to react-i18next.\n.use(initReactI18next) // init i18next\n// for all options read: https://www.i18next.com/overview/configuration-options\n.init({\n  fallbackLng: \"en\",\n  debug: false,\n  interpolation: {\n    escapeValue: false // not needed for react as it escapes by default\n\n  },\n  react: {\n    useSuspense: false\n  } // backend: {\n  //   // for all available options read the backend's repository readme file\n  //   loadPath: \"./locales/{{lng}}/{{ns}}.json\",\n  // },\n\n});\nexport default i18n;","map":{"version":3,"sources":["/Users/raza/Downloads/khadyo_source_code/client/src/i18next.js"],"names":["i18n","initReactI18next","Backend","LanguageDetector","use","init","fallbackLng","debug","interpolation","escapeValue","react","useSuspense"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AAEAH,IAAI,CACF;AACA;AAFE,CAGDI,GAHH,CAGOF,OAHP,EAIE;AACA;AALF,CAMGE,GANH,CAMOD,gBANP,EAOE;AAPF,CAQGC,GARH,CAQOH,gBARP,EASE;AACA;AAVF,CAWGI,IAXH,CAWQ;AACJC,EAAAA,WAAW,EAAE,IADT;AAEJC,EAAAA,KAAK,EAAE,KAFH;AAGJC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA,CACO;;AADP,GAHX;AAMJC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE;AADR,GANH,CASJ;AACA;AACA;AACA;;AAZI,CAXR;AA0BA,eAAeX,IAAf","sourcesContent":["import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport Backend from \"i18next-http-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\ni18n\r\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: \"en\",\r\n    debug: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    react: {\r\n      useSuspense: false,\r\n    },\r\n    // backend: {\r\n    //   // for all available options read the backend's repository readme file\r\n    //   loadPath: \"./locales/{{lng}}/{{ns}}.json\",\r\n    // },\r\n  });\r\n\r\nexport default i18n;\r\n"]},"metadata":{},"sourceType":"module"}