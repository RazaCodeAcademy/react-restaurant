{"ast":null,"code":"var _jsxFileName = \"/Users/raza/Downloads/khadyo_source_code/client/src/resources/restaurant/auth/manage/food/GroupCrud.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"; //pages & includes\n\nimport ManageSidebar from \"../ManageSidebar\"; //functions\n\nimport { _t, getCookie, modalLoading, tableLoading, pagination, paginationLoading, showingData, searchedShowingData } from \"../../../../../functions/Functions\";\nimport { useTranslation } from \"react-i18next\"; //axios and base url\n\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../../../../BaseUrl\"; //3rd party packages\n\nimport { Helmet } from \"react-helmet\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\"; //context consumer\n\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\nimport { FoodContext } from \"../../../../../contexts/Food\";\n\nconst GroupCrud = () => {\n  const {\n    t\n  } = useTranslation();\n  const history = useHistory(); //getting context values here\n\n  let {\n    //common\n    loading,\n    setLoading\n  } = useContext(SettingsContext);\n  let {\n    //food group\n    getFoodGroup,\n    foodGroupList,\n    setFoodGroupList,\n    setPaginatedFoodGroup,\n    foodGroupForSearch,\n    setFoodGroupforSearch,\n    //pagination\n    dataPaginating\n  } = useContext(FoodContext); // States hook here\n  //new group\n\n  let [newFoodGroup, setNewFoodGroup] = useState({\n    name: \"\",\n    edit: false,\n    editSlug: null,\n    uploading: false\n  }); //search result\n\n  let [searchedFoodGroup, setSearchedFoodGroup] = useState({\n    list: null,\n    searched: false\n  }); //useEffect == componentDidMount\n\n  useEffect(() => {}, []); //set name hook\n\n  const handleSetNewFoodGroup = e => {\n    setNewFoodGroup({ ...newFoodGroup,\n      [e.target.name]: e.target.value\n    });\n  }; //Save New paymentType\n\n\n  const handleSaveNewFoodGroup = e => {\n    e.preventDefault();\n    setNewFoodGroup({ ...newFoodGroup,\n      uploading: true\n    });\n    const foodGroupUrl = BASE_URL + `/settings/new-food-group`;\n    let formData = new FormData();\n    formData.append(\"name\", newFoodGroup.name);\n    return axios.post(foodGroupUrl, formData, {\n      headers: {\n        Authorization: `Bearer ${getCookie()}`\n      }\n    }).then(res => {\n      setNewFoodGroup({\n        name: \"\",\n        edit: false,\n        editSlug: null,\n        uploading: false\n      });\n      setFoodGroupList(res.data[0]);\n      setFoodGroupforSearch(res.data[1]);\n      setSearchedFoodGroup({ ...searchedFoodGroup,\n        list: res.data[1]\n      });\n      setLoading(false);\n      toast.success(`${_t(t(\"Food group has been added\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }).catch(error => {\n      setLoading(false);\n      setNewFoodGroup({ ...newFoodGroup,\n        uploading: false\n      });\n\n      if (error.response.data.errors) {\n        if (error.response.data.errors.name) {\n          error.response.data.errors.name.forEach(item => {\n            if (item === \"A food group already exists with this name\") {\n              toast.error(`${_t(t(\"A food group already exists with this name\"))}`, {\n                position: \"bottom-center\",\n                autoClose: 10000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                className: \"text-center toast-notification\"\n              });\n            }\n          });\n        } else {\n          toast.error(`${_t(t(\"Please try again\"))}`, {\n            position: \"bottom-center\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            className: \"text-center toast-notification\"\n          });\n        }\n      }\n    });\n  }; //set edit true & values\n\n\n  const handleSetEdit = slug => {\n    let paymentType = foodGroupForSearch.filter(item => {\n      return item.slug === slug;\n    });\n    setNewFoodGroup({ ...newFoodGroup,\n      name: paymentType[0].name,\n      input_key: paymentType[0].input_key,\n      editSlug: paymentType[0].slug,\n      edit: true\n    });\n  }; //update food group\n\n\n  const handleUpdateFoodGroup = e => {\n    e.preventDefault();\n    setNewFoodGroup({ ...newFoodGroup,\n      uploading: true\n    });\n    const foodGroupUrl = BASE_URL + `/settings/update-food-group`;\n    let formData = new FormData();\n    formData.append(\"name\", newFoodGroup.name);\n    formData.append(\"editSlug\", newFoodGroup.editSlug);\n    return axios.post(foodGroupUrl, formData, {\n      headers: {\n        Authorization: `Bearer ${getCookie()}`\n      }\n    }).then(res => {\n      setNewFoodGroup({\n        name: \"\",\n        edit: false,\n        editSlug: null,\n        uploading: false\n      });\n      setFoodGroupList(res.data[0]);\n      setFoodGroupforSearch(res.data[1]);\n      setSearchedFoodGroup({ ...searchedFoodGroup,\n        list: res.data[1]\n      });\n      setLoading(false);\n      toast.success(`${_t(t(\"Food group has been updated\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }).catch(error => {\n      setLoading(false);\n      setNewFoodGroup({ ...newFoodGroup,\n        uploading: false\n      });\n\n      if (error.response.data.errors) {\n        if (error.response.data.errors.name) {\n          error.response.data.errors.name.forEach(item => {\n            if (item === \"A food group already exists with this name\") {\n              toast.error(`${_t(t(\"A food group already exists with this name\"))}`, {\n                position: \"bottom-center\",\n                autoClose: 10000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                className: \"text-center toast-notification\"\n              });\n            }\n          });\n        } else {\n          toast.error(`${_t(t(\"Please try again\"))}`, {\n            position: \"bottom-center\",\n            autoClose: 10000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            className: \"text-center toast-notification\"\n          });\n        }\n      }\n    });\n  }; //search food group here\n\n\n  const handleSearch = e => {\n    let searchInput = e.target.value.toLowerCase();\n\n    if (searchInput.length === 0) {\n      setSearchedFoodGroup({ ...searchedFoodGroup,\n        searched: false\n      });\n    } else {\n      let searchedList = foodGroupForSearch.filter(item => {\n        let lowerCaseItemName = item.name.toLowerCase();\n        return lowerCaseItemName.includes(searchInput);\n      });\n      setSearchedFoodGroup({ ...searchedFoodGroup,\n        list: searchedList,\n        searched: true\n      });\n    }\n  }; //delete confirmation modal of paymentType\n\n\n  const handleDeleteConfirmation = slug => {\n    confirmAlert({\n      customUI: ({\n        onClose\n      }) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card card-body\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }\n        }, _t(t(\"Are you sure?\"))), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }\n        }, _t(t(\"You want to delete this?\"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex justify-content-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => {\n            handleDeleteFoodGroup(slug);\n            onClose();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }\n        }, _t(t(\"Yes, delete it!\"))), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-success ml-2 px-3\",\n          onClick: onClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }\n        }, _t(t(\"No\")))));\n      }\n    });\n  }; //delete paymentType here\n\n\n  const handleDeleteFoodGroup = slug => {\n    setLoading(true);\n    const foodGroupUrl = BASE_URL + `/settings/delete-food-group/${slug}`;\n    return axios.get(foodGroupUrl, {\n      headers: {\n        Authorization: `Bearer ${getCookie()}`\n      }\n    }).then(res => {\n      setFoodGroupList(res.data[0]);\n      setFoodGroupforSearch(res.data[1]);\n      setSearchedFoodGroup({ ...searchedFoodGroup,\n        list: res.data[1]\n      });\n      setLoading(false);\n      toast.success(`${_t(t(\"Food group has been deleted successfully\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    }).catch(() => {\n      setLoading(false);\n      toast.error(`${_t(t(\"Please try again\"))}`, {\n        position: \"bottom-center\",\n        autoClose: 10000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        className: \"text-center toast-notification\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }\n  }, _t(t(\"Food Groups\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal fade\",\n    id: \"addPaymentType\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog modal-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-sm-card__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"text-capitalize fk-sm-card__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }\n  }, !newFoodGroup.edit ? _t(t(\"Add new food group\")) : _t(t(\"Update food group\")))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }\n  }, newFoodGroup.uploading === false ? /*#__PURE__*/React.createElement(\"div\", {\n    key: \"fragment-food-group-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: !newFoodGroup.edit ? handleSaveNewFoodGroup : handleUpdateFoodGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 23\n    }\n  }, _t(t(\"Name\")), \" \", /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 25\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"name\",\n    name: \"name\",\n    placeholder: \"e.g. Burger, Chicken\",\n    value: newFoodGroup.name || \"\",\n    required: true,\n    onChange: handleSetNewFoodGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-success w-100 xsm-text text-uppercase t-width-max\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 27\n    }\n  }, !newFoodGroup.edit ? _t(t(\"Save\")) : _t(t(\"Update\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary w-100 xsm-text text-uppercase t-width-max\",\n    \"data-dismiss\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 27\n    }\n  }, _t(t(\"Close\")))))))) : /*#__PURE__*/React.createElement(\"div\", {\n    key: \"fragment2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center text-primary font-weight-bold text-uppercase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 19\n    }\n  }, _t(t(\"Please wait\"))), modalLoading(3), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-success w-100 xsm-text text-uppercase t-width-max\",\n    onClick: e => {\n      e.preventDefault();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 25\n    }\n  }, !newFoodGroup.edit ? _t(t(\"Save\")) : _t(t(\"Update\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary w-100 xsm-text text-uppercase t-width-max\",\n    \"data-dismiss\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 25\n    }\n  }, _t(t(\"Close\"))))))))))), /*#__PURE__*/React.createElement(\"main\", {\n    id: \"main\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row t-mt-10 gx-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ManageSidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-bg-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fk-scroll--pos-menu\",\n    \"data-simplebar\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-pl-15 t-pr-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 19\n    }\n  }, newFoodGroup.uploading === true || loading === true ? tableLoading() : /*#__PURE__*/React.createElement(\"div\", {\n    key: \"fragment3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${dataPaginating && \"loading\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-2 align-items-center t-pt-15 t-pb-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-lg-5 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list fk-breadcrumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"fk-breadcrumb__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"t-link fk-breadcrumb__link text-capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 33\n    }\n  }, !searchedFoodGroup.searched ? _t(t(\"Food Group List\")) : _t(t(\"Search Result\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-lg-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row gx-3 align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-9 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control border-0 form-control--light-1 rounded-0\",\n    placeholder: _t(t(\"Search\")) + \"..\",\n    onChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-search\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3 text-md-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary xsm-text text-uppercase btn-lg btn-block\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#addPaymentType\",\n    onClick: () => {\n      setNewFoodGroup({ ...newFoodGroup,\n        edit: false,\n        uploading: false\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 33\n    }\n  }, _t(t(\"add new\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-bordered table-hover min-table-height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 33\n    }\n  }, _t(t(\"S/L\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 33\n    }\n  }, _t(t(\"Name\"))), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"sm-text text-capitalize align-middle text-center border-1 border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 33\n    }\n  }, _t(t(\"Action\"))))), /*#__PURE__*/React.createElement(\"tbody\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 29\n    }\n  }, !searchedFoodGroup.searched ? [foodGroupList && [foodGroupList.data.length === 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"row\",\n    colSpan: \"6\",\n    className: \"xsm-text align-middle text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 43\n    }\n  }, _t(t(\"No data available\")))) : foodGroupList.data.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"align-middle\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 49\n      }\n    }, index + 1 + (foodGroupList.current_page - 1) * foodGroupList.per_page), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 49\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn t-bg-clear t-text-dark--light-40\",\n      type: \"button\",\n      \"data-toggle\": \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-ellipsis-h\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 55\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text text-capitalize\",\n      onClick: () => handleSetEdit(item.slug),\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#addPaymentType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 59\n      }\n    })), _t(t(\"Edit\"))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text text-capitalize\",\n      onClick: () => {\n        handleDeleteConfirmation(item.slug);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 59\n      }\n    })), _t(t(\"Delete \")))))));\n  })]] : [\n  /* searched data, logic === haveData*/\n  searchedFoodGroup && [searchedFoodGroup.list.length === 0 ? /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"align-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    scope: \"row\",\n    colSpan: \"6\",\n    className: \"xsm-text align-middle text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 43\n    }\n  }, _t(t(\"No data available\")))) : searchedFoodGroup.list.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"align-middle\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 49\n      }\n    }, index + 1 + (foodGroupList.current_page - 1) * foodGroupList.per_page), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 49\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"xsm-text text-capitalize align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn t-bg-clear t-text-dark--light-40\",\n      type: \"button\",\n      \"data-toggle\": \"dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-ellipsis-h\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 55\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text text-capitalize\",\n      onClick: () => handleSetEdit(item.slug),\n      \"data-toggle\": \"modal\",\n      \"data-target\": \"#addPaymentType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-pencil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 59\n      }\n    })), _t(t(\"Edit\"))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropdown-item sm-text text-capitalize\",\n      onClick: () => {\n        handleDeleteConfirmation(item.slug);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"t-mr-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa fa-trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 59\n      }\n    })), _t(t(\"Delete\")))))));\n  })]]))))))), newFoodGroup.uploading === true || loading === true ? paginationLoading() : [// logic === !searched\n  !searchedFoodGroup.searched ? /*#__PURE__*/React.createElement(\"div\", {\n    key: \"fragment4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"t-bg-white mt-1 t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center t-pl-15 t-pr-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-7 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 29\n    }\n  }, pagination(foodGroupList, setPaginatedFoodGroup)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list d-flex justify-content-md-end align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"t-list__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-inline-block sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 35\n    }\n  }, showingData(foodGroupList)))))))) :\n  /*#__PURE__*/\n  // if searched\n  React.createElement(\"div\", {\n    className: \"t-bg-white mt-1 t-pt-5 t-pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row align-items-center t-pl-15 t-pr-15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-7 t-mb-15 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"t-list__item no-pagination-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-sm\",\n    onClick: () => setSearchedFoodGroup({ ...searchedFoodGroup,\n      searched: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 33\n    }\n  }, _t(t(\"Clear Search\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"t-list d-flex justify-content-md-end align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"t-list__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"d-inline-block sm-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 33\n    }\n  }, searchedShowingData(searchedFoodGroup, foodGroupForSearch)))))))])))));\n};\n\nexport default GroupCrud;","map":{"version":3,"sources":["/Users/raza/Downloads/khadyo_source_code/client/src/resources/restaurant/auth/manage/food/GroupCrud.js"],"names":["React","useState","useContext","useEffect","useHistory","ManageSidebar","_t","getCookie","modalLoading","tableLoading","pagination","paginationLoading","showingData","searchedShowingData","useTranslation","axios","BASE_URL","Helmet","confirmAlert","toast","SettingsContext","FoodContext","GroupCrud","t","history","loading","setLoading","getFoodGroup","foodGroupList","setFoodGroupList","setPaginatedFoodGroup","foodGroupForSearch","setFoodGroupforSearch","dataPaginating","newFoodGroup","setNewFoodGroup","name","edit","editSlug","uploading","searchedFoodGroup","setSearchedFoodGroup","list","searched","handleSetNewFoodGroup","e","target","value","handleSaveNewFoodGroup","preventDefault","foodGroupUrl","formData","FormData","append","post","headers","Authorization","then","res","data","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","className","catch","error","response","errors","forEach","item","handleSetEdit","slug","paymentType","filter","input_key","handleUpdateFoodGroup","handleSearch","searchInput","toLowerCase","length","searchedList","lowerCaseItemName","includes","handleDeleteConfirmation","customUI","onClose","handleDeleteFoodGroup","get","map","index","current_page","per_page"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//pages & includes\r\nimport ManageSidebar from \"../ManageSidebar\";\r\n\r\n//functions\r\nimport {\r\n  _t,\r\n  getCookie,\r\n  modalLoading,\r\n  tableLoading,\r\n  pagination,\r\n  paginationLoading,\r\n  showingData,\r\n  searchedShowingData,\r\n} from \"../../../../../functions/Functions\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n//axios and base url\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../../../../../BaseUrl\";\r\n\r\n//3rd party packages\r\nimport { Helmet } from \"react-helmet\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n//context consumer\r\nimport { SettingsContext } from \"../../../../../contexts/Settings\";\r\nimport { FoodContext } from \"../../../../../contexts/Food\";\r\n\r\nconst GroupCrud = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  //getting context values here\r\n  let {\r\n    //common\r\n    loading,\r\n    setLoading,\r\n  } = useContext(SettingsContext);\r\n\r\n  let {\r\n    //food group\r\n    getFoodGroup,\r\n    foodGroupList,\r\n    setFoodGroupList,\r\n    setPaginatedFoodGroup,\r\n    foodGroupForSearch,\r\n    setFoodGroupforSearch,\r\n\r\n    //pagination\r\n    dataPaginating,\r\n  } = useContext(FoodContext);\r\n\r\n  // States hook here\r\n  //new group\r\n  let [newFoodGroup, setNewFoodGroup] = useState({\r\n    name: \"\",\r\n    edit: false,\r\n    editSlug: null,\r\n    uploading: false,\r\n  });\r\n\r\n  //search result\r\n  let [searchedFoodGroup, setSearchedFoodGroup] = useState({\r\n    list: null,\r\n    searched: false,\r\n  });\r\n\r\n  //useEffect == componentDidMount\r\n  useEffect(() => {}, []);\r\n\r\n  //set name hook\r\n  const handleSetNewFoodGroup = (e) => {\r\n    setNewFoodGroup({ ...newFoodGroup, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //Save New paymentType\r\n  const handleSaveNewFoodGroup = (e) => {\r\n    e.preventDefault();\r\n    setNewFoodGroup({\r\n      ...newFoodGroup,\r\n      uploading: true,\r\n    });\r\n    const foodGroupUrl = BASE_URL + `/settings/new-food-group`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newFoodGroup.name);\r\n    return axios\r\n      .post(foodGroupUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewFoodGroup({\r\n          name: \"\",\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setFoodGroupList(res.data[0]);\r\n        setFoodGroupforSearch(res.data[1]);\r\n        setSearchedFoodGroup({\r\n          ...searchedFoodGroup,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Food group has been added\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setNewFoodGroup({\r\n          ...newFoodGroup,\r\n          uploading: false,\r\n        });\r\n        if (error.response.data.errors) {\r\n          if (error.response.data.errors.name) {\r\n            error.response.data.errors.name.forEach((item) => {\r\n              if (item === \"A food group already exists with this name\") {\r\n                toast.error(\r\n                  `${_t(t(\"A food group already exists with this name\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          } else {\r\n            toast.error(`${_t(t(\"Please try again\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //set edit true & values\r\n  const handleSetEdit = (slug) => {\r\n    let paymentType = foodGroupForSearch.filter((item) => {\r\n      return item.slug === slug;\r\n    });\r\n    setNewFoodGroup({\r\n      ...newFoodGroup,\r\n      name: paymentType[0].name,\r\n      input_key: paymentType[0].input_key,\r\n      editSlug: paymentType[0].slug,\r\n      edit: true,\r\n    });\r\n  };\r\n\r\n  //update food group\r\n  const handleUpdateFoodGroup = (e) => {\r\n    e.preventDefault();\r\n    setNewFoodGroup({\r\n      ...newFoodGroup,\r\n      uploading: true,\r\n    });\r\n    const foodGroupUrl = BASE_URL + `/settings/update-food-group`;\r\n    let formData = new FormData();\r\n    formData.append(\"name\", newFoodGroup.name);\r\n    formData.append(\"editSlug\", newFoodGroup.editSlug);\r\n    return axios\r\n      .post(foodGroupUrl, formData, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setNewFoodGroup({\r\n          name: \"\",\r\n          edit: false,\r\n          editSlug: null,\r\n          uploading: false,\r\n        });\r\n        setFoodGroupList(res.data[0]);\r\n        setFoodGroupforSearch(res.data[1]);\r\n        setSearchedFoodGroup({\r\n          ...searchedFoodGroup,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Food group has been updated\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        setNewFoodGroup({\r\n          ...newFoodGroup,\r\n          uploading: false,\r\n        });\r\n        if (error.response.data.errors) {\r\n          if (error.response.data.errors.name) {\r\n            error.response.data.errors.name.forEach((item) => {\r\n              if (item === \"A food group already exists with this name\") {\r\n                toast.error(\r\n                  `${_t(t(\"A food group already exists with this name\"))}`,\r\n                  {\r\n                    position: \"bottom-center\",\r\n                    autoClose: 10000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    className: \"text-center toast-notification\",\r\n                  }\r\n                );\r\n              }\r\n            });\r\n          } else {\r\n            toast.error(`${_t(t(\"Please try again\"))}`, {\r\n              position: \"bottom-center\",\r\n              autoClose: 10000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              className: \"text-center toast-notification\",\r\n            });\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  //search food group here\r\n  const handleSearch = (e) => {\r\n    let searchInput = e.target.value.toLowerCase();\r\n    if (searchInput.length === 0) {\r\n      setSearchedFoodGroup({ ...searchedFoodGroup, searched: false });\r\n    } else {\r\n      let searchedList = foodGroupForSearch.filter((item) => {\r\n        let lowerCaseItemName = item.name.toLowerCase();\r\n        return lowerCaseItemName.includes(searchInput);\r\n      });\r\n      setSearchedFoodGroup({\r\n        ...searchedFoodGroup,\r\n        list: searchedList,\r\n        searched: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  //delete confirmation modal of paymentType\r\n  const handleDeleteConfirmation = (slug) => {\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"card card-body\">\r\n            <h1>{_t(t(\"Are you sure?\"))}</h1>\r\n            <p className=\"text-center\">{_t(t(\"You want to delete this?\"))}</p>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  handleDeleteFoodGroup(slug);\r\n                  onClose();\r\n                }}\r\n              >\r\n                {_t(t(\"Yes, delete it!\"))}\r\n              </button>\r\n              <button className=\"btn btn-success ml-2 px-3\" onClick={onClose}>\r\n                {_t(t(\"No\"))}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  //delete paymentType here\r\n  const handleDeleteFoodGroup = (slug) => {\r\n    setLoading(true);\r\n    const foodGroupUrl = BASE_URL + `/settings/delete-food-group/${slug}`;\r\n    return axios\r\n      .get(foodGroupUrl, {\r\n        headers: { Authorization: `Bearer ${getCookie()}` },\r\n      })\r\n      .then((res) => {\r\n        setFoodGroupList(res.data[0]);\r\n        setFoodGroupforSearch(res.data[1]);\r\n        setSearchedFoodGroup({\r\n          ...searchedFoodGroup,\r\n          list: res.data[1],\r\n        });\r\n        setLoading(false);\r\n        toast.success(`${_t(t(\"Food group has been deleted successfully\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n        toast.error(`${_t(t(\"Please try again\"))}`, {\r\n          position: \"bottom-center\",\r\n          autoClose: 10000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          className: \"text-center toast-notification\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{_t(t(\"Food Groups\"))}</title>\r\n      </Helmet>\r\n\r\n      {/* Add modal */}\r\n      <div className=\"modal fade\" id=\"addPaymentType\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header align-items-center\">\r\n              <div className=\"fk-sm-card__content\">\r\n                <h5 className=\"text-capitalize fk-sm-card__title\">\r\n                  {!newFoodGroup.edit\r\n                    ? _t(t(\"Add new food group\"))\r\n                    : _t(t(\"Update food group\"))}\r\n                </h5>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              {/* show form or show saving loading */}\r\n              {newFoodGroup.uploading === false ? (\r\n                <div key=\"fragment-food-group-1\">\r\n                  <form\r\n                    onSubmit={\r\n                      !newFoodGroup.edit\r\n                        ? handleSaveNewFoodGroup\r\n                        : handleUpdateFoodGroup\r\n                    }\r\n                  >\r\n                    <div>\r\n                      <label htmlFor=\"name\" className=\"form-label\">\r\n                        {_t(t(\"Name\"))}{\" \"}\r\n                        <small className=\"text-primary\">*</small>\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"e.g. Burger, Chicken\"\r\n                        value={newFoodGroup.name || \"\"}\r\n                        required\r\n                        onChange={handleSetNewFoodGroup}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"mt-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          >\r\n                            {!newFoodGroup.edit\r\n                              ? _t(t(\"Save\"))\r\n                              : _t(t(\"Update\"))}\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                            data-dismiss=\"modal\"\r\n                          >\r\n                            {_t(t(\"Close\"))}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              ) : (\r\n                <div key=\"fragment2\">\r\n                  <div className=\"text-center text-primary font-weight-bold text-uppercase\">\r\n                    {_t(t(\"Please wait\"))}\r\n                  </div>\r\n                  {modalLoading(3)}\r\n                  <div className=\"mt-4\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-success w-100 xsm-text text-uppercase t-width-max\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                          }}\r\n                        >\r\n                          {!newFoodGroup.edit ? _t(t(\"Save\")) : _t(t(\"Update\"))}\r\n                        </button>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-primary w-100 xsm-text text-uppercase t-width-max\"\r\n                          data-dismiss=\"modal\"\r\n                        >\r\n                          {_t(t(\"Close\"))}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Add modal Ends*/}\r\n\r\n      {/* main body */}\r\n      <main id=\"main\" data-simplebar>\r\n        <div className=\"container\">\r\n          <div className=\"row t-mt-10 gx-2\">\r\n            {/* left Sidebar */}\r\n            <div className=\"col-lg-3 col-xxl-2 t-mb-30 mb-lg-0\">\r\n              <ManageSidebar />\r\n            </div>\r\n            {/* left Sidebar ends */}\r\n\r\n            {/* Rightbar contents */}\r\n            <div className=\"col-lg-9 col-xxl-10 t-mb-30 mb-lg-0\">\r\n              <div className=\"t-bg-white\">\r\n                <div className=\"fk-scroll--pos-menu\" data-simplebar>\r\n                  <div className=\"t-pl-15 t-pr-15\">\r\n                    {/* Loading effect */}\r\n                    {newFoodGroup.uploading === true || loading === true ? (\r\n                      tableLoading()\r\n                    ) : (\r\n                      <div key=\"fragment3\">\r\n                        {/* next page data spin loading */}\r\n                        <div className={`${dataPaginating && \"loading\"}`}></div>\r\n                        {/* spin loading ends */}\r\n\r\n                        <div className=\"row gx-2 align-items-center t-pt-15 t-pb-15\">\r\n                          <div className=\"col-md-6 col-lg-5 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list fk-breadcrumb\">\r\n                              <li className=\"fk-breadcrumb__list\">\r\n                                <span className=\"t-link fk-breadcrumb__link text-capitalize\">\r\n                                  {!searchedFoodGroup.searched\r\n                                    ? _t(t(\"Food Group List\"))\r\n                                    : _t(t(\"Search Result\"))}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-6 col-lg-7\">\r\n                            <div className=\"row gx-3 align-items-center\">\r\n                              {/* Search group */}\r\n                              <div className=\"col-md-9 t-mb-15 mb-md-0\">\r\n                                <div className=\"input-group\">\r\n                                  <div className=\"form-file\">\r\n                                    <input\r\n                                      type=\"text\"\r\n                                      className=\"form-control border-0 form-control--light-1 rounded-0\"\r\n                                      placeholder={_t(t(\"Search\")) + \"..\"}\r\n                                      onChange={handleSearch}\r\n                                    />\r\n                                  </div>\r\n                                  <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                  >\r\n                                    <i\r\n                                      className=\"fa fa-search\"\r\n                                      aria-hidden=\"true\"\r\n                                    ></i>\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* Add group modal trigger button */}\r\n                              <div className=\"col-md-3 text-md-right\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn btn-primary xsm-text text-uppercase btn-lg btn-block\"\r\n                                  data-toggle=\"modal\"\r\n                                  data-target=\"#addPaymentType\"\r\n                                  onClick={() => {\r\n                                    setNewFoodGroup({\r\n                                      ...newFoodGroup,\r\n                                      edit: false,\r\n                                      uploading: false,\r\n                                    });\r\n                                  }}\r\n                                >\r\n                                  {_t(t(\"add new\"))}\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        {/* Table */}\r\n                        <div className=\"table-responsive\">\r\n                          <table className=\"table table-bordered table-hover min-table-height\">\r\n                            <thead className=\"align-middle\">\r\n                              <tr>\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"S/L\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Name\"))}\r\n                                </th>\r\n\r\n                                <th\r\n                                  scope=\"col\"\r\n                                  className=\"sm-text text-capitalize align-middle text-center border-1 border\"\r\n                                >\r\n                                  {_t(t(\"Action\"))}\r\n                                </th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody className=\"align-middle\">\r\n                              {/* loop here, logic === !search && haveData && haveDataLegnth > 0*/}\r\n                              {!searchedFoodGroup.searched\r\n                                ? [\r\n                                    foodGroupList && [\r\n                                      foodGroupList.data.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        foodGroupList.data.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (foodGroupList.current_page -\r\n                                                      1) *\r\n                                                      foodGroupList.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() =>\r\n                                                          handleSetEdit(\r\n                                                            item.slug\r\n                                                          )\r\n                                                        }\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addPaymentType\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete \"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]\r\n                                : [\r\n                                    /* searched data, logic === haveData*/\r\n                                    searchedFoodGroup && [\r\n                                      searchedFoodGroup.list.length === 0 ? (\r\n                                        <tr className=\"align-middle\">\r\n                                          <td\r\n                                            scope=\"row\"\r\n                                            colSpan=\"6\"\r\n                                            className=\"xsm-text align-middle text-center\"\r\n                                          >\r\n                                            {_t(t(\"No data available\"))}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ) : (\r\n                                        searchedFoodGroup.list.map(\r\n                                          (item, index) => {\r\n                                            return (\r\n                                              <tr\r\n                                                className=\"align-middle\"\r\n                                                key={index}\r\n                                              >\r\n                                                <th\r\n                                                  scope=\"row\"\r\n                                                  className=\"xsm-text text-capitalize align-middle text-center\"\r\n                                                >\r\n                                                  {index +\r\n                                                    1 +\r\n                                                    (foodGroupList.current_page -\r\n                                                      1) *\r\n                                                      foodGroupList.per_page}\r\n                                                </th>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  {item.name}\r\n                                                </td>\r\n\r\n                                                <td className=\"xsm-text text-capitalize align-middle text-center\">\r\n                                                  <div className=\"dropdown\">\r\n                                                    <button\r\n                                                      className=\"btn t-bg-clear t-text-dark--light-40\"\r\n                                                      type=\"button\"\r\n                                                      data-toggle=\"dropdown\"\r\n                                                    >\r\n                                                      <i className=\"fa fa-ellipsis-h\"></i>\r\n                                                    </button>\r\n                                                    <div className=\"dropdown-menu\">\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() =>\r\n                                                          handleSetEdit(\r\n                                                            item.slug\r\n                                                          )\r\n                                                        }\r\n                                                        data-toggle=\"modal\"\r\n                                                        data-target=\"#addPaymentType\"\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-pencil\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Edit\"))}\r\n                                                      </button>\r\n\r\n                                                      <button\r\n                                                        className=\"dropdown-item sm-text text-capitalize\"\r\n                                                        onClick={() => {\r\n                                                          handleDeleteConfirmation(\r\n                                                            item.slug\r\n                                                          );\r\n                                                        }}\r\n                                                      >\r\n                                                        <span className=\"t-mr-8\">\r\n                                                          <i className=\"fa fa-trash\"></i>\r\n                                                        </span>\r\n                                                        {_t(t(\"Delete\"))}\r\n                                                      </button>\r\n                                                    </div>\r\n                                                  </div>\r\n                                                </td>\r\n                                              </tr>\r\n                                            );\r\n                                          }\r\n                                        )\r\n                                      ),\r\n                                    ],\r\n                                  ]}\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* pagination loading effect */}\r\n              {newFoodGroup.uploading === true || loading === true\r\n                ? paginationLoading()\r\n                : [\r\n                    // logic === !searched\r\n                    !searchedFoodGroup.searched ? (\r\n                      <div key=\"fragment4\">\r\n                        <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                          <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                            <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                              {/* pagination function */}\r\n                              {pagination(foodGroupList, setPaginatedFoodGroup)}\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                              <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                                <li className=\"t-list__item\">\r\n                                  <span className=\"d-inline-block sm-text\">\r\n                                    {showingData(foodGroupList)}\r\n                                  </span>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      // if searched\r\n                      <div className=\"t-bg-white mt-1 t-pt-5 t-pb-5\">\r\n                        <div className=\"row align-items-center t-pl-15 t-pr-15\">\r\n                          <div className=\"col-md-7 t-mb-15 mb-md-0\">\r\n                            <ul className=\"t-list d-flex\">\r\n                              <li className=\"t-list__item no-pagination-style\">\r\n                                <button\r\n                                  className=\"btn btn-primary btn-sm\"\r\n                                  onClick={() =>\r\n                                    setSearchedFoodGroup({\r\n                                      ...searchedFoodGroup,\r\n                                      searched: false,\r\n                                    })\r\n                                  }\r\n                                >\r\n                                  {_t(t(\"Clear Search\"))}\r\n                                </button>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                          <div className=\"col-md-5\">\r\n                            <ul className=\"t-list d-flex justify-content-md-end align-items-center\">\r\n                              <li className=\"t-list__item\">\r\n                                <span className=\"d-inline-block sm-text\">\r\n                                  {searchedShowingData(\r\n                                    searchedFoodGroup,\r\n                                    foodGroupForSearch\r\n                                  )}\r\n                                </span>\r\n                              </li>\r\n                            </ul>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  ]}\r\n            </div>\r\n            {/* Rightbar contents end*/}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      {/* main body ends */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GroupCrud;\r\n"]},"metadata":{},"sourceType":"module"}